- en: Chapter 5. Networking
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第五章 网络
- en: If you have read the previous chapters, you now know about the IPv6 basics,
    the new addressing architecture, the header format, and the Extension header architecture,
    as well as all about the new ICMPv6-based processes such as Neighbor Discovery
    (ND), Stateless Address Autoconfiguration (SLAAC), Path MTU Discovery, and Multicast
    Listener Discovery (MLD).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经阅读了前几章，你现在应该了解了 IPv6 的基础知识、新的地址架构、头部格式和扩展头部架构，以及基于 ICMPv6 的新过程，如邻居发现（ND）、无状态地址自动配置（SLAAC）、路径
    MTU 发现和多播监听器发现（MLD）。
- en: Before we dive into transition mechanisms and integration of IPv6 into the IPv4
    network, this chapter covers several topics that are important in the network,
    such as Layer 2 support for IPv6, checksumming, multicast and how it has been
    extended for IPv6, available routing protocols, and quality of service. Last but
    not least, I discuss DHCPv6 and DNS. Even though IPv6 supports SLAAC, we expect
    DHCPv6 to be used in the enterprise networks, mainly due to the fact that organizations
    want to be able to log address use, which is not easily done if using SLAAC. And
    with the IPv6 address space coming into our networks in addition to still using
    IPv4, DNS becomes even more important than before.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨 IPv6 的过渡机制及其与 IPv4 网络的集成之前，本章涵盖了一些在网络中非常重要的主题，例如 IPv6 的第二层支持、校验和、多播以及它如何扩展到
    IPv6、可用的路由协议和服务质量。最后但同样重要的是，我还讨论了 DHCPv6 和 DNS。尽管 IPv6 支持 SLAAC，我们预期 DHCPv6 会在企业网络中得到应用，主要是因为组织希望能够记录地址使用情况，而如果使用
    SLAAC，这一点很难做到。随着 IPv6 地址空间的引入，并且仍然使用 IPv4，DNS 变得比以前更加重要。
- en: Layer 2 Support for IPv6
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IPv6 的第二层支持
- en: IP sits between the Data Link layer and the Transport layer. One of the goals
    in the development of IPv6 was to be able to support as many different physical
    networks as possible and to require no changes in the Transport layer. This approach
    is called “IP over Everything.” To make IP as independent as possible from the
    Data Link layer, it needs an interface to this layer, which can be Ethernet, ATM,
    Token Ring, or any other media. The interface needs to be flexible and must be
    able to adapt to different requirements. For this purpose, features such as Path
    MTU Discovery and Fragmentation have been optimized. For UDP and TCP, it should
    not matter whether IPv4 or IPv6 is used. Obviously, changes are needed whenever
    IP addresses are used because of the difference in the address format. All these
    requirements lead to changes within the IP layer itself. This section discusses
    the interface to the Data Link layer.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: IP 位于数据链路层和传输层之间。IPv6 开发的目标之一是能够支持尽可能多的不同物理网络，并且不需要在传输层进行更改。这种方法被称为“IP over
    Everything”。为了使 IP 尽可能独立于数据链路层，它需要与该层的接口，这可以是以太网、ATM、令牌环或任何其他媒介。该接口需要具有灵活性，必须能够适应不同的要求。为此，路径
    MTU 发现和分片等特性已被优化。对于 UDP 和 TCP，是否使用 IPv4 或 IPv6 应该没有区别。显然，由于地址格式的不同，每当使用 IP 地址时，都会需要更改。所有这些需求导致了
    IP 层本身的变化。本节讨论了与数据链路层的接口。
- en: 'Different terms are used when the Data Link layer is discussed. The TCP/IP
    model has four layers, the first of which is called the Link layer. The OSI model
    has seven layers. It subdivides the Link layer of the TCP/IP model into two layers:
    the Physical layer and the Data Link layer. Thus, the term *Layer 2 Support for
    IPv6* refers to the second layer of the OSI model.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论数据链路层时，使用了不同的术语。TCP/IP 模型有四层，其中第一层被称为链路层。OSI 模型有七层，它将 TCP/IP 模型的链路层细分为两层：物理层和数据链路层。因此，术语
    *IPv6 的第二层支持* 指的是 OSI 模型中的第二层。
- en: IPv6’s independence from the physical network media is important. When a packet
    is sent from one network to another, we do not usually know in advance the kind
    of physical networks through which the packet will travel. IP cares only about
    the Destination address and finding a way to get there regardless of the network
    hardware used. IP then passes the packet to the Data Link layer. In 802 networks,
    the interface driver on the Data Link layer applies a Media Access Control (MAC)
    header to the datagram and sends it out to the physical network. The interface
    driver needs to be aware of the physical requirements for transmission. Each network’s
    hardware technology defines a specific addressing mechanism. Neighbor Discovery,
    as described in [Chapter 4](ch04.html "Chapter 4. ICMPv6"), is used to map between
    IPv6 addresses and MAC addresses.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6独立于物理网络介质是非常重要的。当数据包从一个网络发送到另一个网络时，我们通常无法预先知道数据包将通过哪些物理网络。IP只关心目标地址，并寻找到达该地址的方式，而不管所使用的网络硬件是什么。然后，IP将数据包传递给数据链路层。在802网络中，数据链路层的接口驱动程序会给数据报添加一个媒体访问控制（MAC）头，并将其发送到物理网络。接口驱动程序需要了解传输的物理要求。每种网络的硬件技术定义了特定的寻址机制。邻居发现（如[第4章](ch04.html
    "第4章. ICMPv6")所述）用于映射IPv6地址和MAC地址之间的关系。
- en: The rules and packet sizes for the transport of IPv6 datagrams differ depending
    on the Link layer technology. There is an RFC covering each technology in detail.
    This chapter summarizes the main points to consider; a list of the RFCs can be
    found in [Appendix B](apb.html "Appendix B. Recommended Reading").
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6数据报文的传输规则和数据包大小因链路层技术的不同而有所区别。每种技术都有相应的RFC文档详细说明。本章总结了需要考虑的主要事项；RFC文档的清单可以在[附录B](apb.html
    "附录B. 推荐阅读")中找到。
- en: In the previous edition we covered some of the RFCs in more detail, some that
    aren’t even much used anymore today, such as Token Ring. I have changed the format
    of this chapter. I still cover Ethernet in more detail, as this is the probably
    most used and serves as an example. The others I will summarize shortly so you
    have a reference.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一版中，我们对一些RFC进行了更详细的讲解，包括一些今天已经不太常用的技术，例如令牌环。我已更改本章的格式。仍然会详细介绍以太网，因为它可能是最常用的技术，并且可以作为一个例子。其他技术我会简要总结，以便你可以作为参考。
- en: Ethernet (RFC 2464)
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 以太网（RFC 2464）
- en: 'Ethernet is a widely used LAN technology developed in the early 1970s at Xerox.
    There are many different variants used: in the early days, Twisted Pair Ethernet,
    also known as 10Base-T and operating at 10 Mbps, and Fast Ethernet, also known
    as 100Base-T and operating at 100 Mbps, were common; today Gigabit Ethernet, also
    known as 1,000Base-T and operating at 1 Gbps, and 10 Gigabit Ethernet, also known
    as 10GE and operating at 10 Gbps, are common. And now even 40 and soon 100 Gigabit
    Ethernet are showing up. The race will go on. The Institute of Electrical and
    Electronic Engineers (IEEE) together with a number of IT and telecom companies
    have defined a new standard called “Ethernet for the First Mile” (EFM, IEEE 802.3ah),
    which could allow usage of the Ethernet standard for first-mile connections to
    homes and companies.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以太网是一种广泛使用的局域网技术，最早由施乐公司于1970年代初期开发。有很多不同的变种在使用：在早期，常用的有双绞线以太网（也称为10Base-T，速率为10
    Mbps）和快速以太网（也称为100Base-T，速率为100 Mbps）；如今，千兆以太网（也称为1,000Base-T，速率为1 Gbps）和10千兆以太网（也称为10GE，速率为10
    Gbps）已经很常见。现在，甚至出现了40千兆和即将出现的100千兆以太网。这个竞争还在继续。电气和电子工程师协会（IEEE）与一些IT和电信公司一起定义了一个新的标准，称为“千米以太网”（EFM，IEEE
    802.3ah），它可以将以太网标准应用于到家庭和公司之间的“第一英里”连接。
- en: RFC 2464 describes the format of IPv6 datagrams transmitted over Ethernet and
    how link-local and stateless autoconfigured addresses are formed. It obsoletes
    RFC 1972 and supports all Ethernet variants and VLAN technologies, such as 802.1Q
    and Cisco’s Inter-Switch Link (ISL). WiFi looks much like Ethernet from higher
    layers, so there is not even a specific RFC to cover it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 2464描述了通过以太网传输IPv6数据报的格式以及链路本地和无状态自动配置地址的形成方式。它废除了RFC 1972，并支持所有以太网变种和VLAN技术，如802.1Q和思科的交换机链路（ISL）。WiFi在较高层次看起来与以太网非常相似，因此并没有专门的RFC来覆盖它。
- en: Ethernet hardware addresses use a 48-bit addressing scheme. Ethernet hardware
    manufacturers are assigned blocks of Ethernet addresses, known as *OUI* or *company
    ID*. No two Ethernet hardware interfaces should have the same address, because
    each vendor assigns the addresses within its block in sequence. An Ethernet frame
    can be of variable size, but it can be no smaller than 64 bytes and no larger
    than 1,518 bytes (header, data, and CRC). Packets over Ethernet have a default
    MTU of 1,500 bytes, although many devices support jumbo frames, which can be up
    to 9,000 bytes. A smaller MTU can be configured through Router Advertisements
    containing an MTU option or through manual configuration of each device. If a
    Router Advertisement contains an MTU larger than 1,500 bytes or larger than a
    manually configured MTU, the Router Advertisement must be ignored.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以太网硬件地址使用48位寻址方案。以太网硬件制造商被分配一块以太网地址块，称为*OUI*或*公司ID*。没有两个以太网硬件接口的地址是相同的，因为每个厂商在其地址块内按顺序分配地址。以太网帧的大小是可变的，但不得小于64字节，且不得大于1,518字节（包括头部、数据和CRC）。以太网的数据包的默认最大传输单元（MTU）是1,500字节，尽管许多设备支持更大的帧，最大可达9,000字节。可以通过包含MTU选项的路由器广告或通过手动配置每个设备来配置较小的MTU。如果路由器广告的MTU大于1,500字节或大于手动配置的MTU，则该路由器广告必须被忽略。
- en: The Ethernet header contains the source and destination Ethernet addresses and
    the Ethernet type code. The Ethernet type code for IPv6 is `0x86DD`. [Figure 5-1](ch05.html#the_ethernet_header_for_an_ipv6_datagram
    "Figure 5-1. The Ethernet header for an IPv6 datagram") shows the Ethernet header
    for an IPv6 datagram.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以太网头部包含源地址和目标地址以及以太网类型代码。IPv6的以太网类型代码是`0x86DD`。[图5-1](ch05.html#the_ethernet_header_for_an_ipv6_datagram
    "图5-1. IPv6数据报的以太网头部")显示了IPv6数据报的以太网头部。
- en: '![The Ethernet header for an IPv6 datagram](images/ipv6_0501.png)Figure 5-1. The
    Ethernet header for an IPv6 datagram'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '![IPv6数据报的以太网头部](images/ipv6_0501.png)图5-1. IPv6数据报的以太网头部'
- en: The Destination and Source Address fields each have six bytes, and the Ethernet
    Type field takes two bytes, containing the value `0x86DD` for IPv6.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 目标地址和源地址字段各自有六个字节，以太网类型字段占两个字节，包含IPv6的值`0x86DD`。
- en: For Stateless Address Autoconfiguration (SLAAC), the MAC address can be used
    to build the IPv6 interface ID. [Chapter 2](ch02.html "Chapter 2. IPv6 Addressing")
    explains how this process works. If the Destination address in the IPv6 header
    is a multicast address, the first two bytes of the MAC address are set to `3333`
    and the last four bytes are the last four bytes of the IPv6 destination multicast
    address. [Figure 5-2](ch05.html#relation_of_the_ipv6_multicast_address "Figure 5-2. Relation
    of the IPv6 multicast address to Ethernet MAC address") shows the format.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于无状态地址自动配置（SLAAC），可以使用MAC地址来构建IPv6接口ID。[第2章](ch02.html "第2章. IPv6地址分配")解释了这一过程是如何工作的。如果IPv6头部中的目标地址是多播地址，则MAC地址的前两个字节设置为`3333`，最后四个字节为IPv6目标多播地址的最后四个字节。[图5-2](ch05.html#relation_of_the_ipv6_multicast_address
    "图5-2. IPv6多播地址与以太网MAC地址的关系")显示了该格式。
- en: '![Relation of the IPv6 multicast address to Ethernet MAC address](images/ipv6_0502.png)Figure 5-2. Relation
    of the IPv6 multicast address to Ethernet MAC address'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '![IPv6多播地址与以太网MAC地址的关系](images/ipv6_0502.png)图5-2. IPv6多播地址与以太网MAC地址的关系'
- en: '[Figure 5-3](ch05.html#mac_header_for_an_ipv6_multicast_destina "Figure 5-3. MAC
    header for an IPv6 multicast Destination address") shows how this looks in a trace
    file.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[图5-3](ch05.html#mac_header_for_an_ipv6_multicast_destina "图5-3. IPv6多播目标地址的MAC头部")展示了在跟踪文件中该如何显示。'
- en: '![MAC header for an IPv6 multicast Destination address](images/ipv6_0503.png.jpg)Figure 5-3. MAC
    header for an IPv6 multicast Destination address'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '![IPv6多播目标地址的MAC头部](images/ipv6_0503.png.jpg)图5-3. IPv6多播目标地址的MAC头部'
- en: In the summary line at the top of the figure, you can see the IPv6 Source address,
    which is the address of my router. The Destination address is the all-nodes multicast
    address. The Ethernet destination prefix shows `3333`, which identifies this MAC
    address as a multicast address, and the remaining four bytes contain the last
    four bytes of the IPv6 Destination address—in this case `00-00-00-01`. The Ethernet
    Source address contains the MAC address of the router, and the Ethertype has the
    value for IPv6, which is `0x86DD`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在图形顶部的摘要行中，您可以看到IPv6源地址，它是我的路由器的地址。目标地址是所有节点的组播地址。以太网目标前缀显示`3333`，这表明该MAC地址是一个组播地址，剩余的四个字节包含IPv6目标地址的最后四个字节——在本例中是`00-00-00-01`。以太网源地址包含路由器的MAC地址，Ethertype的值为IPv6，即`0x86DD`。
- en: There is an update to RFC 2464, one of the shortest RFCs I ever read; it is
    RFC 6085, “Address Mapping of IPv6 Multicast Packets on Ethernet.” It allows the
    mapping of a multicast address into an Ethernet link-layer unicast address in
    the case where it is clear that only one address is relevant.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 2464有一个更新版本，是我读过的最短的RFC之一；它是RFC 6085，标题为“以太网上IPv6组播数据包的地址映射”。它允许在明确只有一个地址相关时，将组播地址映射到以太网链路层单播地址。
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For useful information about Ethernet, refer to [Charles E. Spurgeon’s site](http://www.ethermanage.com/ethernet/ethernet.html).
    He is also the author of *Ethernet: The Definitive Guide* (O’Reilly).'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '关于以太网的有用信息，请参考[Charles E. Spurgeon的站点](http://www.ethermanage.com/ethernet/ethernet.html)。他也是*Ethernet:
    The Definitive Guide*（O''Reilly）的作者。'
- en: Point-to-Point Protocol (RFC 5072)
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 点对点协议（RFC 5072）
- en: '*Point-to-Point Protocol* (PPP) is a mechanism for running IP and other network
    protocols over a serial link. It supports synchronous and asynchronous lines.
    RFC 5072 describes the method for transmitting IPv6 packets over PPP and how IPv6
    link-local addresses are formed on PPP links. RFC 5172 defines the compression
    parameter for use in IPv6 datagram compression.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*点对点协议*（PPP）是一种通过串行链路运行IP及其他网络协议的机制。它支持同步和异步线路。RFC 5072描述了如何通过PPP传输IPv6数据包以及IPv6链路本地地址如何在PPP链路上形成。RFC
    5172定义了用于IPv6数据报压缩的压缩参数。'
- en: PPP’s control protocol for IPv6, IPV6CP, is responsible for establishing and
    configuring IPv6 communication over PPP. One IPv6 packet can be encapsulated in
    a PPP Data Link layer frame, and the protocol field is set to `0x0057` for IPv6\.
    If the PPP link is to support IPv6, the MTU size must be configured to IPv6’s
    minimum MTU size of IPv6, which is 1,280 bytes. A higher value (1,500 bytes) is
    recommended.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: PPP的IPv6控制协议IPV6CP负责在PPP上建立和配置IPv6通信。一个IPv6数据包可以被封装在PPP数据链路层帧中，协议字段被设置为`0x0057`，表示IPv6。如果PPP链路要支持IPv6，MTU大小必须配置为IPv6的最小MTU大小，即1,280字节。推荐使用更高的值（1,500字节）。
- en: IPV6CP has a distinct set of options for the negotiation of IPv6 parameters.
    Currently, the only defined options for IPV6CP are Interface-Identifier and IPv6-Compression
    Protocol. A PPP interface does not have a MAC address. The Interface-Identifier
    option provides a way to negotiate a 64-bit interface identifier, which must be
    unique within the PPP link. The IPv6-Compression option is used to negotiate a
    specific packet compression protocol, which applies only to IPv6 packets transmitted
    over the PPP link. The option is not enabled by default.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: IPV6CP有一组独特的选项用于协商IPv6参数。目前，IPV6CP唯一定义的选项是接口标识符（Interface-Identifier）和IPv6压缩协议（IPv6-Compression
    Protocol）。PPP接口没有MAC地址。接口标识符选项提供了一种协商64位接口标识符的方法，该标识符在PPP链路中必须唯一。IPv6压缩选项用于协商一个特定的数据包压缩协议，仅适用于通过PPP链路传输的IPv6数据包。此选项默认情况下是禁用的。
- en: IPv6 address negotiation is different from IPv4\. It is done through ICMPv6
    Neighbor Discovery and not through PPP, as it is with IPv4\. For ISPs, PPP in
    combination with IPv6 offers many advantages. For instance, it is no longer a
    problem to assign static addresses to customers, because the IPv6 address space
    is large enough. With IPv4, due to the shortage of addresses, ISPs often have
    to use dynamic addresses. The IPv6 functionality for address autoconfiguration
    supports easy administration and customer configuration with minimal cost. Prefix
    assignment to the customer site can be done through Router Discovery or through
    IPv6 Prefix Options for DHCPv6 (RFC 3633). To get IPv6 to work over ADSL, ISPs
    need to choose an encapsulation that meets their needs, such as PPP over ATM (PPPoA)
    or PPP over Ethernet (PPPoE). IPv6 also has an impact on the Authentication, Authorization,
    Accounting (AAA) process. With IPV6CP, the address assignment occurs after the
    authentication. ISPs should note that Radius must support IPv6 attributes.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6 地址协商与 IPv4 不同。它是通过 ICMPv6 邻居发现协议完成的，而不是像 IPv4 那样通过 PPP 来进行。对于互联网服务提供商（ISP）来说，PPP
    与 IPv6 结合提供了许多优势。例如，分配静态地址给客户不再是问题，因为 IPv6 地址空间足够大。而在 IPv4 中，由于地址紧缺，ISP 通常需要使用动态地址。IPv6
    的地址自动配置功能支持低成本、简便的管理和客户配置。可以通过路由器发现（Router Discovery）或通过 DHCPv6 的 IPv6 前缀选项（RFC
    3633）来为客户站点分配前缀。为了在 ADSL 上使用 IPv6，ISP 需要选择符合其需求的封装方式，例如基于 ATM 的 PPP（PPPoA）或基于以太网的
    PPP（PPPoE）。IPv6 也影响身份验证、授权和计费（AAA）过程。使用 IPV6CP 时，地址分配发生在身份验证之后。ISP 应注意，Radius
    必须支持 IPv6 属性。
- en: IEEE 802.15.4 (RFC 4944)
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IEEE 802.15.4（RFC 4944）
- en: This standard specifies the physical layer and media access control for *low-rate
    wireless personal area networks* (LR-WPANs). It is designed to offer the lower
    fundamental network layers to support low-cost, low-speed communication between
    any type of devices. This standard does not define higher layers. There are specifications
    such as 6LoWPAN, ZigBee and others, which build on this standard.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 该标准定义了*低速无线个人局域网*（LR-WPANs）的物理层和媒体访问控制。它旨在提供低成本、低速率的通信支持，以便不同类型的设备之间进行通信。该标准不定义更高层次的协议。诸如
    6LoWPAN、ZigBee 等规范是基于此标准的。
- en: '*6LoWPAN* is the acronym for *IPv6 over Low power Wireless Personal Area Networks*.
    There is an IEEE working group. RFC 6282 defines a compression format for IPv6
    datagrams over IEEE 802.15.4 networks. RFC 6775 defines optimizations to the Neighbor
    Discovery protocol (see [Chapter 4](ch04.html "Chapter 4. ICMPv6")) to work in
    low-power and lossy networks.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*6LoWPAN* 是 *IPv6 在低功耗无线个人局域网* 上的缩写。有一个 IEEE 工作组，RFC 6282 定义了 IPv6 数据报在 IEEE
    802.15.4 网络上传输的压缩格式。RFC 6775 定义了对邻居发现协议的优化（参见 [第 4 章](ch04.html "第 4 章. ICMPv6")），以便在低功耗和丢包网络中工作。'
- en: '*ZigBee* is a specification for communication protocols using small, low-power
    radios. ZigBee allows networks to be formed ad hoc. Applications include light
    switches, electrical meters, traffic management systems, and any type of system
    that requires short-range wireless transfer of data at low rates. ZigBee is not
    optimized for IPv6 like 6LoWPAN is.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*ZigBee* 是一种用于小型、低功耗无线电的通信协议规范。ZigBee 允许形成自组网。其应用包括灯光开关、电表、交通管理系统以及任何需要低速率短程无线数据传输的系统。与
    6LoWPAN 不同，ZigBee 并未专门为 IPv6 进行优化。'
- en: 'This type of technology will be the base for many future services, mostly sensor-based
    types of communication. They can be used in any area: industrial, safety (earthquake
    detection), health, fun, and entertainment. Typically these devices will have
    very limited resources; this is why they need lean, optimized stacks.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术将成为许多未来服务的基础，主要是基于传感器的通信类型。它们可以应用于任何领域：工业、安全（地震检测）、健康、娱乐等。通常这些设备的资源非常有限；这就是为什么它们需要精简且优化的技术栈。
- en: ATM (RFC 2492)
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ATM（RFC 2492）
- en: '*Asynchronous Transfer Mode* (ATM) is a connection-oriented, high-speed network
    technology that is used in both LANs and WANs. It works over optical fiber and
    operates at up to gigabit speed by using special hardware and software mechanisms.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*异步传输模式*（ATM）是一种面向连接的高速网络技术，广泛应用于局域网（LAN）和广域网（WAN）。它通过光纤传输，利用专用的硬件和软件机制，能够达到千兆位的传输速度。'
- en: RFC 2492 describes the transmission of IPv6 packets over an ATM network in a
    companion document to RFC 2491, “IPv6 over Non-Broadcast Multiple Access (NBMA)
    Networks.”
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 2492 描述了通过 ATM 网络传输 IPv6 数据包的规范，这是 RFC 2491 文档“IPv6 在非广播多址接入（NBMA）网络中的应用”中的补充文档。
- en: Frame Relay (RFC 2590)
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 帧中继（RFC 2590）
- en: '*Frame Relay* is a connection-oriented, high-speed network technology used
    in WANs. It was developed in the Bell Labs in the late 1980s as part of the ISDN
    specification. The standard was refined in the early 1990s. By using a short,
    two-byte header, Frame Relay is very efficient in forwarding packets.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*帧中继*是一种面向连接的高速网络技术，广泛用于广域网（WAN）。它是在1980年代末由贝尔实验室作为ISDN规范的一部分开发的。该标准在1990年代初期得到了改进。通过使用一个简短的两字节头，帧中继在转发数据包时非常高效。'
- en: RFC 2590 specifies how IPv6 packets are transmitted over Frame Relay links,
    how IPv6 link-local addresses are formed, and how IPv6 addresses are mapped to
    Frame Relay addresses.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 2590规定了IPv6数据包如何通过帧中继链路传输，IPv6链路本地地址如何形成，以及IPv6地址如何映射到帧中继地址。
- en: The next chapter covers routing and routing protocols in an overview. There
    are several choices you will have to make and we discuss the available options.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章概述了路由和路由协议。你将需要做出若干选择，我们将讨论可用的选项。
- en: Upper-Layer Protocols
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上层协议
- en: The impact of IPv6 on upper-layer protocols is minimal because the datagram
    service has not changed substantially. This chapter discusses UDP and TCP over
    IPv6, and describes changes for upper-layer protocols such as DNS, DHCP, SLP,
    FTP, Telnet, and HTTP when used over IPv6\. The most important changes are always
    needed where an IP address is used. Any process or application that uses an IP
    address needs to be updated to be able to handle the extended 128-bit address
    format. Applications that use a hardcoded 32-bit IPv4 address should be updated
    to use a DNS name instead, so that DNS can return either an IPv4 or an IPv6 address
    to make the IP protocol fully transparent.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6对上层协议的影响是最小的，因为数据报服务没有发生实质性变化。本章讨论了IPv6上的UDP和TCP，并描述了上层协议（如DNS、DHCP、SLP、FTP、Telnet和HTTP）在使用IPv6时的变化。最重要的变化通常发生在使用IP地址的地方。任何使用IP地址的进程或应用程序都需要更新，以能够处理扩展的128位地址格式。使用硬编码32位IPv4地址的应用程序应该更新为使用DNS名称，这样DNS可以返回IPv4或IPv6地址，使IP协议完全透明。
- en: UDP/TCP and Checksums
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: UDP/TCP和校验和
- en: Checksumming is done on different layers. Remember from [Chapter 3](ch03.html
    "Chapter 3. The Structure of the IPv6 Protocol"), the IPv6 header does not have
    a checksum. But a checksum is important on the transport layer to determine packet
    delivery problems. Other upper-layer protocols may use a checksum, too. All checksum
    calculations that include the IP address in the calculation must be modified for
    IPv6 to accommodate the new 128-bit address.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 校验和在不同层上计算。记住在[第3章](ch03.html "第3章：IPv6协议结构")中提到，IPv6头部没有校验和。但在传输层上校验和是非常重要的，它有助于确定数据包的传递问题。其他上层协议也可能使用校验和。所有在计算中包含IP地址的校验和计算必须进行修改，以适应新的128位地址。
- en: Transport protocols such as UDP and TCP attach checksums to their packets. A
    checksum is generated using a *pseudoheader*. The TCP and UDP pseudoheader for
    IPv6 contains fields for Source and Destination address, payload length, and Next
    Header value (RFC 2460). If the IPv6 packet contains a routing header, the Destination
    address used in the pseudoheader is the address of the final destination. If the
    Source or Destination address was changed in transit, the value of the pseudoheader
    at the destination will not match the value of the initial packet, which causes
    checksum calculation failure and an error report.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 传输协议如UDP和TCP会将校验和附加到它们的数据包中。校验和是通过使用*伪头部*生成的。IPv6的TCP和UDP伪头部包含源地址、目标地址、负载长度和下一个头部值（RFC
    2460）等字段。如果IPv6数据包包含路由头部，伪头部中使用的目标地址将是最终目标的地址。如果源地址或目标地址在传输过程中发生了变化，那么目的地的伪头部值将与初始数据包的值不匹配，这会导致校验和计算失败并产生错误报告。
- en: Because the IPv6 address is so much longer than the IPv4 address, the IPv6 specification
    includes a new version of the pseudoheader. The IPv6 pseudoheader specification
    takes into account that an unknown number of Extension headers can be present
    before the UDP or TCP layer, which is essential when calculating the payload length
    for the pseudoheader. IPv6 nodes that receive a UDP packet with a value of 0 in
    the checksum field should discard the packet and log the error.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 由于IPv6地址比IPv4地址长得多，IPv6规范中包含了伪头部的新版本。IPv6伪头部规范考虑到可能在UDP或TCP层之前存在不确定数量的扩展头部，这在计算伪头部的负载长度时至关重要。接收到校验和字段值为0的UDP数据包的IPv6节点应该丢弃该数据包并记录错误。
- en: Note
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: With IPv4, a checksum in the UDP header was optional. With IPv6, the computation
    of a checksum is mandatory for UDP.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在 IPv4 中，UDP 头部中的校验和是可选的。而在 IPv6 中，UDP 的校验和计算是强制性的。
- en: The source node calculates and stores the checksum, and the destination node
    verifies it. [Figure 5-4](ch05.html#format_of_the_pseudoheader "Figure 5-4. Format
    of the pseudoheader") shows the format of the pseudoheader that is built and used
    to calculate TCP and UDP checksums.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 源节点计算并存储校验和，目的节点则进行验证。[图 5-4](ch05.html#format_of_the_pseudoheader "图 5-4. 伪头部的格式")展示了用于计算
    TCP 和 UDP 校验和的伪头部的格式。
- en: '![Format of the pseudoheader](images/ipv6_0504.png)Figure 5-4. Format of the
    pseudoheader'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '![伪头部的格式](images/ipv6_0504.png)图 5-4. 伪头部的格式'
- en: 'The following list describes each of the fields:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了每个字段：
- en: '*Source Address (16 bytes)*'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*源地址（16 字节）*'
- en: The Source address of the IPv6 packet.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6 数据包的源地址。
- en: '*Destination Address (16 bytes)*'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '*目的地址（16 字节）*'
- en: The Destination address of the IPv6 packet. If there is a routing header in
    the packet, the address of the final destination is used for the checksum calculation.
    On the first node, this address is the last address in the list of the routing
    header. At the final destination, this is the Destination address in the IPv6
    header.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6 数据包的目的地址。如果数据包中包含路由头，则使用最终目的地的地址进行校验和计算。在第一个节点中，该地址是路由头列表中的最后一个地址。在最终目的地，这个地址是
    IPv6 头部中的目的地址。
- en: '*Upper Layer Packet Length (4 bytes)*'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*上层协议数据长度（4 字节）*'
- en: This field contains the length of the Upper-Layer Protocol header plus data.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 该字段包含上层协议头部加数据的长度。
- en: '*Next Header (1 byte)*'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '*下一头部（1 字节）*'
- en: The Next Header field identifies the type of the header using the values listed
    in [Table 3-1](ch03.html#values_in_the_next_header_field "Table 3-1. Values in
    the Next Header field") in [Chapter 3](ch03.html "Chapter 3. The Structure of
    the IPv6 Protocol").
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 下一头部字段通过使用[表 3-1](ch03.html#values_in_the_next_header_field "表 3-1. 下一头部字段中的值")中列出的值来标识头部的类型，该表在[第
    3 章](ch03.html "第 3 章. IPv6 协议的结构")中介绍。
- en: The same algorithm used with IPv4 is used to calculate the checksum with IPv6\.
    The 16-bit checksum is computed over the entire pseudoheader. By including the
    Source and Destination addresses in the checksum calculation, any alteration of
    the addresses en route would be detected.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 与 IPv4 使用相同的算法来计算 IPv6 的校验和。16 位的校验和是在整个伪头部上计算的。通过将源地址和目的地址包含在校验和计算中，可以检测到在传输过程中地址的任何更改。
- en: Multicast
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多播
- en: Multicast is discussed in different chapters of the book. Multicast addresses
    are described in [Chapter 2](ch02.html "Chapter 2. IPv6 Addressing"), while all
    the multicast-based Neighbor Discovery functions are discussed in [Chapter 4](ch04.html
    "Chapter 4. ICMPv6"). This section here aims to consolidate it all and emphasize
    the importance of multicast in an IPv6 network.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 多播在本书的不同章节中有讨论。多播地址在[第 2 章](ch02.html "第 2 章. IPv6 地址")中有所描述，而所有基于多播的邻居发现功能则在[第
    4 章](ch04.html "第 4 章. ICMPv6")中进行了讨论。本节旨在将这些内容整合，并强调多播在 IPv6 网络中的重要性。
- en: Multicast is an efficient way to deliver data whenever it is one source distributing
    the same data to multiple receivers. This can be video or audio streaming, conferencing,
    distribution of financial information, or sports games, software updates, e-learning,
    and many more. With multicast, data packets do not have to be sent individually
    to each receiver. A single multicast packet can reach all receivers and therefore
    reduces the number of packets significantly, especially with a large number of
    receivers. Each multicast data stream is uniquely identified by its Source address
    (IPv6 unicast address) and its group or multicast IPv6 address. Multicast routing
    ensures packet delivery from the sender to all receivers. It must be enabled on
    all routers between the sender and the receivers. The router receives the multicast
    packet on the receiving interface and forwards it out over all other interfaces
    with registered receivers.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 多播是一种高效的数据传输方式，适用于单个源将相同数据分发给多个接收者的情况。这可以是视频或音频流、会议、金融信息的分发、体育赛事、软件更新、电子学习等。通过多播，数据包不必单独发送给每个接收者。一个多播数据包可以到达所有接收者，因此大大减少了数据包的数量，尤其是在接收者数量众多的情况下。每个多播数据流由其源地址（IPv6
    单播地址）和其组或多播 IPv6 地址唯一标识。多播路由确保数据包从发送者传递到所有接收者。在发送者和接收者之间的所有路由器上必须启用多播功能。路由器在接收接口接收到多播数据包后，将通过所有其他接口转发到已注册的接收者。
- en: IPv4 multicast was not an integral part of the original IPv4 specification.
    It has been introduced later and then optimized based on experience and operational
    practice. The IPv6 multicast specification builds on that experience and has some
    advanced features that make it more efficient and scalable. Multicast is extensively
    used in IPv6 to perform basic functions, such as Neighbor Discovery.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: IPv4多播最初并不是IPv4规范的一部分。它是在后期引入的，并根据经验和操作实践进行了优化。IPv6多播规范建立在这些经验基础上，并具有一些先进的功能，使其更加高效和可扩展。多播在IPv6中广泛应用，执行基本功能，例如邻居发现。
- en: Note
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Find information on how multicast is used for Neighbor Discovery in [Chapter 4](ch04.html
    "Chapter 4. ICMPv6").
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 查找有关多播如何用于邻居发现的信息，请参见[第4章](ch04.html "第4章. ICMPv6")。
- en: Multicast Addressing
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多播寻址
- en: The format of the multicast address makes use of the larger addressing space.
    The official prefix for multicast addresses is `ff00::/8`. The most important
    difference to IPv4 multicast is that the IPv6 multicast address has 4 bits to
    identify a scope. The scope determines how far the multicast will reach. A scope
    of 2 (`ff02`) is a link-local scope and will only be distributed on the link.
    A scope of 5 (`ff05`) is a site-local scope and will be routed to the border of
    the site. The global multicast scope is E (`ff0e`). Other scopes can be defined
    and configured by the network administrator.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 多播地址的格式利用了更大的寻址空间。多播地址的官方前缀是`ff00::/8`。与IPv4多播最重要的区别在于，IPv6多播地址有4个位用于标识作用域。作用域决定了多播的传播范围。作用域为2（`ff02`）是链路本地作用域，仅在链路上分发。作用域为5（`ff05`）是站点本地作用域，会被路由到站点边界。全局多播作用域是E（`ff0e`）。其他作用域可以由网络管理员定义和配置。
- en: Note
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Find all details about the multicast address and the flags and scope field in
    [Chapter 2](ch02.html "Chapter 2. IPv6 Addressing").
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 查找关于多播地址、标志和作用域字段的所有详细信息，请参见[第2章](ch02.html "第2章. IPv6寻址")。
- en: Group Membership Management
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组成员管理
- en: In order to receive data destined to a multicast group, a node must register
    for the multicast group. This is done through the use of a multicast management
    protocol. In IPv4 this is IGMP (Internet Group Management Protocol). In IPv6 it
    is called *MLD* (*Multicast Listener Discovery*) and is based on ICMP messages.
    There is MLDv1 (corresponding to the functionality of IGMPv2) and MLDv2 (corresponding
    to the functionality of IGMPv3). In most cases, MLDv2 is used. The main difference
    in MLDv2 is that it supports source-specific multicast. With source-specific multicast,
    a node cannot only register for a group, it can specify the desired source from
    which it wants to receive the data (or specific sources from which it does not
    want to receive the data).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 为了接收定向到多播组的数据，节点必须为该多播组注册。这是通过使用多播管理协议来实现的。在IPv4中，这是IGMP（互联网组管理协议）。在IPv6中，它称为*MLD*（*多播监听发现*），基于ICMP消息。MLDv1（对应IGMPv2的功能）和MLDv2（对应IGMPv3的功能）。在大多数情况下，使用的是MLDv2。MLDv2的主要区别在于，它支持源特定的多播。在源特定的多播中，节点不仅可以为一个组注册，还可以指定其希望接收数据的来源（或指定不希望接收数据的特定来源）。
- en: 'The ICMPv6 messages defined are:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 定义的ICMPv6消息包括：
- en: Multicast Listener Query
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多播监听查询
- en: Multicast Listener Report
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多播监听报告
- en: Multicast Listener Done
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多播监听完毕
- en: Note
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find a detailed description of MLDv1 and MLDv2 messages in [Chapter 4](ch04.html
    "Chapter 4. ICMPv6").
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[第4章](ch04.html "第4章. ICMPv6")中找到MLDv1和MLDv2消息的详细描述。
- en: The multicast messages to register or deregister from a group are relevant only
    for the next hop router and therefore have a multicast scope of link-local (`ff02`).
    The router needs to know which multicast groups are listening on each of its interfaces.
    For this purpose the router keeps a list of registered receivers for each multicast
    group, or in case of a more granular registration, for each data stream (sender/group).
    It will then only forward multicast data over an interface if the group is in
    its multicast list. As soon as the last member of a group has left the group,
    the router will stop forwarding that data for this group over this interface.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 注册或注销多播组的多播消息仅与下一个跳路由器相关，因此它们具有链路本地作用域（`ff02`）。路由器需要知道每个接口上正在监听的多播组。为此，路由器保持每个多播组的注册接收者列表，或者在更精细的注册情况下，保持每个数据流（发送者/组）的列表。只有当组在其多播列表中时，路由器才会通过接口转发多播数据。一旦该组的最后一个成员离开该组，路由器将停止通过该接口转发该组的数据。
- en: Multicast Layer 2 Protocols
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多播链路层协议
- en: With Layer 2 Multicast Management protocols, switches can be made multicast-aware,
    so that they don’t have to flood all interfaces with multicast messages. *MLD
    snooping*, the IPv6 version of IGMP snooping, is available. With MLD snooping,
    switches will forward multicast messages only to ports that have listeners for
    the multicast group, as IPv6 multicast data is selectively forwarded to a list
    of ports that want to receive the data, instead of being flooded to all ports
    in a VLAN. This list is dynamically constructed by snooping IPv6 multicast control
    packets. Be aware and careful about the fact that multicast is essential to the
    basic functionality of IPv6\. So make sure that your switch is aware of all the
    groups that a node must listen to.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用第二层多播管理协议时，交换机可以具备多播意识，这样就不需要向所有接口泛洪多播消息。*MLD嗅探*，即IGMP嗅探的IPv6版本，可用。通过MLD嗅探，交换机会仅将多播消息转发到具有该多播组接收者的端口，因为IPv6多播数据会有选择地转发到需要接收数据的端口列表，而不是向VLAN中的所有端口泛洪。这个列表通过嗅探IPv6多播控制数据包动态构建。需要注意的是，多播对于IPv6的基本功能至关重要。因此，请确保交换机能够识别节点需要监听的所有组。
- en: Multicast Routing
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多播路由
- en: With MLD, routers learn about listeners that are directly connected to their
    interfaces. To build the best path for multicast traffic from source to listeners,
    routers must exchange information about their listeners with each other.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用MLD时，路由器会了解直接连接到其接口的接收者。为了为源到接收者的多播流量构建最佳路径，路由器必须相互交换关于接收者的信息。
- en: For this purpose, an *MDT* (*Multicast Distribution Tree*) is used. The branches
    of the tree lead to the listeners. As listeners join and leave, branches are added
    or deleted. The tree has the root at the source of the traffic and is called *SPT*
    (*Shortest Path Tree*). The SPT is identified by the source address and the multicast
    group address. All routers that are part of a tree must maintain state for it.
    When multiple sources share the same group address, the *ST* (*Shared Tree*) is
    rooted in an administratively selected router called *Rendezvous Point*. A rendezvous
    point can handle multiple groups.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为此目的，使用*MDT*（*多播分发树*）。树的分支通向接收者。随着接收者的加入和退出，分支会被添加或删除。树的根位于流量源，称为*SPT*（*最短路径树*）。SPT由源地址和多播组地址标识。所有参与该树的路由器必须为其维护状态。当多个源共享同一组地址时，*ST*（*共享树*）的根位于一个管理员选择的路由器上，称为*汇聚点*。一个汇聚点可以处理多个组。
- en: Control messages are always sent from the receiving end up toward the root of
    the tree. The process of finding the upstream neighbor is called *RPF* (*Reverse-Path
    Forwarding*) calculation. So while unicast routing is concerned about where the
    packet is going, multicast routing is concerned about where the packet is coming
    from. For each multicast data stream, only a single receiving interface is allowed
    on any given router. If a data stream were accepted over multiple interfaces,
    packet duplication would occur.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 控制消息总是从接收端向树的根发送。找到上游邻居的过程称为*RPF*（*反向路径转发*）计算。因此，单播路由关注数据包的去向，而多播路由关注数据包的来源。对于每个多播数据流，每个路由器上只能有一个接收接口。如果通过多个接口接收数据流，将会发生数据包复制。
- en: Protocol Independent Multicast
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 协议无关多播
- en: 'Multicast routing is the process of building the MDT. The topology information
    is maintained in the *TIB* (*Tree Information Base*). Many protocols had been
    developed to support this process. With deployment experience, the choice was
    cut down to several flavors of *PIM* (*Protocol Independent Multicast*). For IPv6
    three multicast routing protocols have been adopted:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 多播路由是构建MDT的过程。拓扑信息保存在*TIB*（*树信息库*）中。为支持这一过程，开发了多种协议。根据部署经验，选择了几种*PIM*（*协议无关多播*）的变种。对于IPv6，已采用三种多播路由协议：
- en: '*PIM-SM (PIM Sparse Mode)*'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '*PIM-SM（PIM稀疏模式）*'
- en: Used when multiple sources transmit to the same group (videoconferencing, peer-to-peer
    gaming).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当多个源向同一组发送时使用（如视频会议、对等游戏）。
- en: '*PIM-SSM (PIM Source-Specific Multicast)*'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '*PIM-SSM（PIM源特定多播）*'
- en: Subset of PIM-SM. Used when a single source transmits to multiple groups (content
    delivery such as video or audio).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: PIM-SM的子集。在单一源向多个组传输时使用（如视频或音频等内容传输）。
- en: '*PIM-Bidir (Bidirectional PIM)*'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*PIM-Bidir（双向PIM）*'
- en: Used when all members of the group can be both receivers and sources.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当组中的所有成员既可以是接收者也可以是源时使用。
- en: Note
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more information on Multicast and Multicast routing, refer to *Deploying
    IPv6 Networks* (Cisco Press) by Ciprian Popoviciu, Patrick Grossetete, and Eric
    Levy-Abegnoli.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 关于多播和多播路由的更多信息，请参阅*Ciprian Popoviciu*、*Patrick Grossetete* 和 *Eric Levy-Abegnoli*
    合著的《*Deploying IPv6 Networks*》 (Cisco Press)。
- en: Routing Protocols
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 路由协议
- en: Forwarding an IPv6 datagram beyond a directly attached subnet requires a router.
    Routers look at the datagram’s destination IPv6 address and search for a matching
    prefix in their local routing tables. It is very important for the router to have
    all relevant destinations in its routing table. But how do they get there? We
    can enter them manually on all routers, which is called *static routing*, but
    this is not very economical. A much more efficient automatic approach can be achieved
    by deploying routing protocols. *Routing protocols* define exchange procedures
    to synchronize the routing table between routers dynamically (called *dynamic
    routing*). So the obvious advantage of using routing protocols is that they automatically
    adjust the routing tables to changes in the network without administrative intervention.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 要将一个 IPv6 数据报转发到一个直接连接的子网之外，需要使用路由器。路由器查看数据报的目标 IPv6 地址，并在其本地路由表中查找匹配的前缀。对于路由器来说，确保路由表中包含所有相关的目标非常重要。那么这些目标是如何进入路由表的呢？我们可以手动将其输入到所有路由器中，这叫做*静态路由*，但这并不经济。通过部署路由协议，可以实现更高效的自动化方法。*路由协议*定义了同步路由表的交换程序，使路由器之间能够动态更新（这叫做*动态路由*）。因此，使用路由协议的显著优势在于，它们能在不需要管理员干预的情况下，自动调整路由表以应对网络中的变化。
- en: Routing information needs to be distributed either within an *Autonomous System*
    (*AS*) or between Autonomous Systems. An AS is defined as a set of networks governed
    by a single authority. Routing protocols that distribute information within an
    AS are called *Interior Gateway Protocols* (*IGP*). OSPF version 3 for IPv6, RIPng,
    IPv6 support on integrated IS-IS, and EIGRP for IPv6 belong to this category.
    Protocols that distribute information between Autonomous Systems are called *Exterior
    Gateway Protocols* (*EGP*). BGP-4 and its extensions for IPv6 represent such a
    protocol.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 路由信息需要在*自治系统*（*AS*）内或自治系统之间进行分发。自治系统被定义为由单一管理机构控制的一组网络。将信息分发到 AS 内的路由协议被称为*内部网关协议*（*IGP*）。IPv6
    的 OSPF 版本 3、RIPng、IS-IS 集成的 IPv6 支持和 EIGRP for IPv6 都属于这一类别。将信息分发到自治系统之间的路由协议被称为*外部网关协议*（*EGP*）。BGP-4
    及其针对 IPv6 的扩展就属于这种协议。
- en: This section gives a short overview of common routing protocols such as RIPng,
    OSPF for IPv6, IS-IS, EIGRPv6, and BGP-4 support for IPv6\. They represent the
    most important routing protocols in use today. I don’t describe the protocols
    in detail, but simply mention the most important features that provide IPv6 support.
    This is followed by a final summary of what routing protocol choices you will
    have to make for your future network environment with IPv6.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 本节简要概述了常见的路由协议，如 RIPng、IPv6 的 OSPF、IS-IS、EIGRPv6 和 IPv6 的 BGP-4 支持。它们是当前使用的最重要的路由协议。我不会详细描述这些协议，而是简单提及提供
    IPv6 支持的最重要特性。接着，最后总结一下你在未来的 IPv6 网络环境中需要做出的路由协议选择。
- en: This chapter in previous editions of the book included in-depth coverage of
    OSPFv3 and IS-IS. At the time of writing this third edition there are many excellent
    books on the market that are focused on routing protocols (which was not so much
    the case back in 2005). I have therefore decided to shorten this chapter, as I
    do not see routing to be part of *IPv6 Essentials* anymore.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 本书前几版的这一章节详细讨论了 OSPFv3 和 IS-IS。写作第三版时，市场上已经有许多优秀的书籍专注于路由协议（而在 2005 年时并非如此）。因此，我决定缩短这一章节，因为我认为路由已经不再是*IPv6
    基础*的一部分。
- en: 'Most of the routing protocols mentioned here can be used only for the exchange
    of IPv6 routing information. If IPv4 and IPv6 are deployed on the same network,
    separate routing protocols must be implemented: one for IPv4 and one for IPv6—for
    example, OSPFv2 for IPv4 routing and OSPFv3 for IPv6 routing. Currently, the exceptions
    are the routing protocols BGP-4 and IS-IS. They can exchange routing information
    for both IP protocols within the same instance. In the future, OSPFv3 will also
    support both address families in one process (RFC 5838, “Support of Address Families
    for OSPFv3.”)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这里提到的大多数路由协议仅用于交换IPv6路由信息。如果IPv4和IPv6在同一网络中部署，则必须实现独立的路由协议：一个用于IPv4，一个用于IPv6——例如，IPv4路由使用OSPFv2，IPv6路由使用OSPFv3。目前，例外的是路由协议BGP-4和IS-IS。它们可以在同一实例中交换两个IP协议的路由信息。未来，OSPFv3也将支持在一个进程中同时处理两个地址族（RFC
    5838，“OSPFv3的地址族支持”）。
- en: Note
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The term *router* in this book stands for any device capable of IPv6 packet
    forwarding and/or processing the appropriate routing protocol.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的*路由器*一词指的是任何能够进行IPv6数据包转发和/或处理相关路由协议的设备。
- en: The Routing Table
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 路由表
- en: Each router maintains a routing table (also known as forwarding table) for each
    protocol it is configured to route. So a dual-stack router will usually have two
    routing tables, an IPv4 routing table and an IPv6 routing table. An IPv6 routing
    table is not so much different from an IPv4 routing table. The structure of an
    IPv6 address is simpler in the way that the first 64 bits are network information
    and the last 64 bits are the interface ID.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 每个路由器都为其配置的每个协议维护一个路由表（也称为转发表）。因此，双栈路由器通常会有两个路由表，一个是IPv4路由表，一个是IPv6路由表。IPv6路由表与IPv4路由表没有太大区别。IPv6地址的结构较为简单，前64位是网络信息，后64位是接口ID。
- en: In this section when we mention routing table, we usually refer to the IPv6
    routing table. Each entry in the IPv6 routing table represents an IPv6 destination,
    from now on called an IPv6 route. Each IPv6 route in the table is stored in the
    form of an IPv6 address prefix and its length. For each IPv6 route, additional
    information is stored in the routing table. The next hop information, for instance,
    tells the router where to forward a packet destined for this particular IPv6 route.
    Another type of information would be the metric of the IPv6 route, allowing the
    router to select the best path (smallest metric) to each IPv6 route in case of
    multiple entries.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，当我们提到路由表时，通常指的是IPv6路由表。IPv6路由表中的每个条目表示一个IPv6目标地址，从现在开始称为IPv6路由。表中的每个IPv6路由都以IPv6地址前缀及其长度的形式存储。对于每个IPv6路由，路由表中还会存储附加信息。例如，下一跳信息告诉路由器将数据包转发到该特定IPv6路由的哪个位置。另一种信息可能是IPv6路由的度量值，允许路由器在有多个条目的情况下选择最佳路径（最小度量值）以到达每个IPv6路由。
- en: Routing table lookup and content
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 路由表查找和内容
- en: For each incoming IPv6 packet, the router inspects the Destination address and
    looks it up in the routing table. For each IPv6 route in the routing table, the
    router applies the prefix length to the Destination address to calculate a Destination
    address prefix. If this calculated prefix corresponds with the prefix of the IPv6
    route, a match was found. To optimize the lookup, the searching algorithm looks
    through the entries based on prefix length, starting with longest prefix. If a
    match was found, the rest of the routing table can be ignored, as the longest
    matched prefix is always the preferred IPv6 route. Of course, this is a simplified
    representation of the lookup process. The actual algorithms behind it are complex
    and highly optimized.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个进入的IPv6数据包，路由器会检查目标地址，并在路由表中查找该地址。对于路由表中的每个IPv6路由，路由器将前缀长度应用于目标地址，以计算目标地址前缀。如果计算出的前缀与IPv6路由的前缀匹配，则表示找到了匹配项。为了优化查找，搜索算法会根据前缀长度按从最长前缀开始的顺序查找条目。如果找到了匹配项，剩余的路由表可以被忽略，因为最长匹配的前缀总是首选的IPv6路由。当然，这是查找过程的简化表示。实际的算法背后非常复杂，并且经过高度优化。
- en: Once the router has found a matching entry, the datagram is forwarded according
    to the next-hop information associated with this entry. In addition, the value
    of the hop limit within the datagram’s IPv6 header is decremented by one. If no
    match is found in the routing table, there may be a default route (see below),
    or if there is no default route or the hop limit value has reached zero, the datagram
    is dropped. [Figure 5-5](ch05.html#an_ipv6_routing_table "Figure 5-5. An IPv6
    routing table") shows an example of such a routing table.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦路由器找到匹配条目，数据报将根据与此条目关联的下一跳信息转发。此外，数据报IPv6头部中的跳数限制值会减少1。如果在路由表中未找到匹配项，可能会有默认路由（见下文），或者如果没有默认路由或者跳数限制值已达到零，则数据报将被丢弃。[图
    5-5](ch05.html#an_ipv6_routing_table "图 5-5. 一个IPv6路由表")展示了这样的路由表示例。
- en: '![An IPv6 routing table](images/ipv6_0505.png.jpg)Figure 5-5. An IPv6 routing
    table'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '![一个IPv6路由表](images/ipv6_0505.png.jpg)图 5-5. 一个IPv6路由表'
- en: 'For each route, the router keeps the following entries in the routing table:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每条路由，路由器会在路由表中保留以下条目：
- en: '*IPv6 prefix and prefix length*'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '*IPv6前缀和前缀长度*'
- en: The prefix length defines the number of relevant bits of the IPv6 prefix. Normally
    the nonrelevant bits are set to zero in the routing table. The prefix length is
    also used to determine whether the Destination address of an incoming datagram
    matches this route.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 前缀长度定义了IPv6前缀的相关位数。通常在路由表中，非相关位被设置为零。前缀长度还用于确定传入数据报的目标地址是否与此路由匹配。
- en: '*Next Hop address*'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '*下一跳地址*'
- en: The IPv6 address (normally link-local) of the first router along the path to
    the IPv6 route. If the route is directly connected to the router through a local
    interface, there is no need for a Next Hop address.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 路径中第一个路由器的IPv6地址（通常是链路本地地址）。如果该路由直接通过本地接口连接到路由器，则无需提供下一跳地址。
- en: '*Next Hop interface*'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '*下一跳接口*'
- en: The local interface of the router that is used to reach the Next Hop address.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器用于到达下一跳地址的本地接口。
- en: '*Metric*'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '*度量*'
- en: A number indicating the total distance to the destination. This metric depends
    on the routing protocol that has put this entry into the routing table. Metric
    calculations done by the different routing protocols cannot be compared to each
    other. If the same route is known by different routing protocols, the router must
    prefer one routing protocol over the other. This is done by assigning a priority
    value to each routing protocol (e.g., Cisco Systems calls this priority the *administrative
    distance*). Directly connected routes always have the best priority and are assigned
    the metric of the Next Hop interface (normally set to zero).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表示到目标的总距离的数字。此度量值取决于将此条目放入路由表的路由协议。不同路由协议的度量计算不能互相比较。如果相同的路由被不同的路由协议知晓，路由器必须优先选择其中一个路由协议。这是通过为每个路由协议分配一个优先级值来完成的（例如，Cisco系统将此优先级称为*管理距离*）。直接连接的路由总是具有最佳优先级，并且分配给下一跳接口的度量值（通常设置为零）。
- en: '*Timer*'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*定时器*'
- en: The amount of time since the information about the route was last updated.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 距离路由信息最后更新时间的时长。
- en: '*Route Source, also known as protocol*'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '*路由源，也称为协议*'
- en: The entity that provided information for this entry. For example, this may be
    a static entry, a directly connected route, or a route from a routing protocol,
    such as RIPng, OSPF for IPv6, BGP, etc.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 提供此条目信息的实体。例如，这可以是静态条目、直接连接的路由，或由路由协议提供的路由，如RIPng、OSPF for IPv6、BGP等。
- en: Default route
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 默认路由
- en: A *default route* represents a route to all Destination addresses that are not
    explicitly listed in the routing table. It can be used when a router does not
    need to know all destinations specifically—for example, a router connecting a
    remote branch office to the main site. It does not need to know all routes of
    the entire autonomous systems. It only needs to know the local routes of the remote
    office; all other routes can be reached only via the connection to the main site,
    hence a default route.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '*默认路由*表示所有未在路由表中明确列出的目标地址的路由。当路由器不需要了解所有目标地址时，可以使用默认路由——例如，连接远程分支办公室到主站点的路由器。它不需要了解整个自治系统的所有路由，只需知道远程办公室的本地路由；所有其他路由只能通过连接到主站点的路由访问，因此使用默认路由。'
- en: A default route must be entered into the routing table just like any other route.
    The Next Hop address of the default route is also called the *default router*
    or *default gateway*. The entire data traffic for unknown routes is sent to the
    default router. It is assumed that the default router knows all the routes or
    has a default router itself. It is at the discretion of the network designer to
    determine whether and how such a chain of default routers should be implemented.
    The top router of such a chain is typically a boundary router to another network
    area or autonomous system. It is here that the default route is entered statically
    and then distributed over the appropriate network area via a routing protocol.
    The advantage of distributing the default route is to reduce the number of routing
    updates to be distributed throughout the network area. Default routes should not
    be propagated further than intended—that is, they should not leave the network
    area or the autonomous system. A metric is assigned to the default route at its
    origin to establish precedence among multiple default routers. Default routes
    and distribution must be planned and implemented with care to avoid routing inconsistencies.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 默认路由必须像其他路由一样被输入到路由表中。默认路由的下一跳地址也称为*默认路由器*或*默认网关*。所有未知路由的数据流量都将发送到默认路由器。假定默认路由器知道所有路由或本身有一个默认路由器。是否以及如何实现这种默认路由器链条，由网络设计师自行决定。此类链条的顶端路由器通常是通向另一个网络区域或自治系统的边界路由器。正是在这里，默认路由静态地输入并通过路由协议分发到相应的网络区域。分发默认路由的优势在于减少需要分发到整个网络区域的路由更新数量。默认路由不应传播得超过预期的范围——即不应离开网络区域或自治系统。默认路由在其源处分配一个度量值，以在多个默认路由器之间建立优先级。默认路由和分发必须谨慎规划和实施，以避免路由不一致。
- en: Any prefix with a length of zero is considered to be a default route, but normally
    an IPv6 prefix of `0:0:0:0:0:0:0:0` (or simply `::`) with a prefix length of zero
    is used. A Destination address of an incoming datagram will always match the default
    route, as the number of relevant bits for comparison is zero. The default route,
    however, is always the last route in the routing table, and hence a match is found
    only if no other routes in the routing table produce a match.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 任何长度为零的前缀都被视为默认路由，但通常会使用IPv6前缀`0:0:0:0:0:0:0:0`（或简写为`::`）且前缀长度为零。传入数据报的目的地址将始终匹配默认路由，因为进行比较的相关位数为零。然而，默认路由始终是路由表中的最后一条路由，因此只有在路由表中的其他路由无法匹配时，才会找到匹配项。
- en: Note
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The most common use of a default route is on the endsystems attached to the
    network, such as PCs, servers, printers, etc. Each system must have a *default
    gateway* to send traffic to destinations outside the local subnet. Unlike with
    IPv4, there is no DHCPv6 option for a default gateway. An IPv6 node learns the
    default route through the Router Advertisement.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 默认路由最常见的用途是在附加到网络的终端系统上，如PC、服务器、打印机等。每个系统必须有一个*默认网关*，以将流量发送到本地子网以外的目的地。与IPv4不同，IPv6中没有针对默认网关的DHCPv6选项。IPv6节点通过路由器公告来学习默认路由。
- en: RIPng
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: RIPng
- en: History is repeating itself. Just as with IPv4, the first dynamic routing protocol
    to reach production was RIP, in this instance called *RIPng*. RIPng is a routing
    protocol based on a distance-vector algorithm known as the Bellman-Ford algorithm.
    Most of the concepts for RIPng have been taken over from RIPv1 and RIPv2, which
    have been implemented for IPv4 for quite some time. RIPv1 is defined in RFC 1058;
    RIPv2 in RFC 2453\. RIPng is defined in RFC 2080 (January 1997). It is rarely
    used for reasons explained below.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 历史正在重演。就像在IPv4中一样，第一个进入生产环境的动态路由协议是RIP，在这里它被称为*RIPng*。RIPng是一个基于距离矢量算法的路由协议，这种算法被称为Bellman-Ford算法。RIPng的大多数概念来自于RIPv1和RIPv2，这两个协议已经为IPv4实现了相当长一段时间。RIPv1在RFC
    1058中定义；RIPv2在RFC 2453中定义。RIPng在RFC 2080（1997年1月）中定义。由于下面将解释的原因，它很少被使用。
- en: Distance-Vector Algorithm for RIPng
  id: totrans-132
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: RIPng的距离矢量算法
- en: RIPng uses a simple mechanism to determine the metric (cost) of a route. It
    basically counts the number of routers (hops) to the destination. Each router
    counts as one hop. Routes with a distance greater than or equal to 16 are considered
    to be unreachable. The router periodically distributes information about its routes
    to its directly connected neighbors using RIPng response messages. Upon receiving
    RIPng response messages from its neighbor, the router adds the distance between
    the neighbor and itself (usually one, as in one hop) to the metric of each route
    received. The router then processes the newly received route entry using the Bellman-Ford
    algorithm.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: RIPng使用一种简单的机制来确定路由的度量值（成本）。它基本上计算到目的地的路由器数目（跳数）。每个路由器算作一个跳数。度量值大于或等于16的路由被认为是无法到达的。路由器定期通过RIPng响应消息将其路由信息分发给直接连接的邻居。收到邻居的RIPng响应消息后，路由器将邻居与自己之间的距离（通常是1，即一个跳数）加到每个接收到的路由的度量值上。然后，路由器使用贝尔曼-福特算法处理新接收到的路由条目。
- en: When the routers are first initialized, they know only their directly connected
    routes. This information is passed to all neighbors, processed, and then distributed
    to their neighbors. Eventually, all IPv6 routes are known by all routers. The
    routers keep sending response messages periodically to prevent valid routes from
    expiring. The time it takes for all routers to learn about the new routes is called
    *convergence time*.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 当路由器第一次初始化时，它们只知道直接连接的路由。这些信息会传递给所有邻居，经过处理后再分发给他们的邻居。最终，所有IPv6路由都被所有路由器知晓。路由器定期发送响应消息，以防止有效路由过期。所有路由器学习新路由所需的时间被称为*收敛时间*。
- en: Limitations of the protocol
  id: totrans-135
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 协议的限制
- en: 'RIPng, like the earlier versions of RIP, is primarily designed for use as an
    IGP in networks of moderate size. The limitations specified for RIP versions 1
    and 2 apply to RIPng as well. They are described in the following list:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: RIPng，像早期版本的RIP一样，主要设计用于中等规模网络中的IGP。RIP版本1和2的限制同样适用于RIPng。这些限制在下面的列表中描述：
- en: '*The RIPng diameter is limited*.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '*RIPng的直径是有限制的*。'
- en: The longest path to any IPv6 route is limited to a metric of 15 when propagated
    with RIPng. Normally this corresponds with a path over a maximum of 15 hops. The
    protocol allows for larger costs to be assigned to any link, limiting the number
    of hops even further. Routes with a metric of 16 or greater are unreachable.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 通过RIPng传播的任何IPv6路由的最长路径的度量值被限制为15。通常，这意味着路径上最多有15个跳数。该协议允许为任何链路分配更大的成本，从而进一步限制跳数。度量值为16或更大的路由被认为是不可达的。
- en: '*Routing loops can cause high convergence time*.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '*路由环路可能导致较高的收敛时间*。'
- en: When IPv6 routes that are no longer valid are being propagated in a looped environment,
    RIPng continues to increase the metric by one. The routes would be passed around
    indefinitely (“counting to infinity”). The mechanism of limiting the metric to
    16 prevents this from happening. The routes will circle until they reach the maximum
    metric and are eventually eliminated.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 当IPv6路由在环路环境中不再有效时，RIPng会持续将度量值增加1。这些路由将被无限传播（“计数到无穷大”）。限制度量值为16的机制可以防止这种情况发生。路由将循环，直到达到最大度量值，并最终被淘汰。
- en: '*The metric does not reflect line speed*.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '*度量值不反映线路速度*。'
- en: RIPng uses a fixed metric normally set to one for each link crossed. A route
    cannot be chosen based on bandwidth or real-time parameters such as measured delay,
    load, or reliability.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: RIPng使用一个固定的度量值，通常设置为每跨越一个链路就为1。路由不能根据带宽或实时参数（如测量的延迟、负载或可靠性）来选择。
- en: Changes in topology and preventing instability
  id: totrans-143
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 拓扑变化和防止不稳定性
- en: A change in topology happens when a route is newly added or has gone down. Newly
    added routes are advertised within the next response message sent by the router
    having the direct connection to that route. Its neighbors process the route and
    pass it on to their neighbors. Eventually, all routers know about the newly added
    route.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 当拓扑发生变化时，路由被新添加或下线。新添加的路由将在与该路由有直接连接的路由器发送的下一条响应消息中进行通告。它的邻居处理该路由并将其传递给他们的邻居。最终，所有路由器都知道新添加的路由。
- en: What happens if a route goes down or a router crashes? These routes will eventually
    time out, as they are no longer being advertised. The questions are just how long
    this process will take and whether this time is acceptable for the network.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一条路由下线或路由器崩溃会发生什么？这些路由最终会超时，因为它们不再被通告。问题是这个过程需要多长时间，以及这个时间对网络是否可接受。
- en: 'In certain scenarios, RIP has serious limitations. To overcome some of these
    limitations, two processes have been defined: with *split horizon* a router never
    advertises a route back over its next hop interface. An additional option is *split
    horizon with poison reverse*. With this option, a router always advertises a route
    back over its next hop interface with a metric of 16\. Although RIPng supports
    IPv6, we do not recommend using it.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些场景下，RIP存在严重的限制。为克服这些限制，定义了两个过程：通过*分割地平线*，路由器从不通过其下一跳接口广告路由。另一种选项是*分割地平线与毒性反转*。使用该选项时，路由器总是通过其下一跳接口广告路由，且度量为16。尽管RIPng支持IPv6，但我们不推荐使用它。
- en: OSPF for IPv6 (OSPFv3)
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OSPF for IPv6（OSPFv3）
- en: OSPF for IPv6 modifies the existing OSPF for IPv4 to support IPv6\. The fundamentals
    of OSPF for IPv4 remain unchanged. Some changes have been necessary to accommodate
    the increased address size of IPv6 and the changes in protocol semantics between
    IPv4 and IPv6\. OSPF for IPv6 is defined in RFC 5340, which emphasizes the differences
    between OSPF for IPv4 and OSPF for IPv6\. It contains a large number of references
    to the documentation of OSPF for IPv4, which makes it hard to read.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: OSPF for IPv6修改了现有的OSPF for IPv4，以支持IPv6。OSPF for IPv4的基本原理保持不变。为了适应IPv6地址大小的增加和IPv4与IPv6之间协议语义的变化，做出了一些必要的修改。OSPF
    for IPv6定义在RFC 5340中，强调了OSPF for IPv4和OSPF for IPv6之间的差异。它包含大量对OSPF for IPv4文档的引用，这使得它难以阅读。
- en: Overview of OSPF for IPv6
  id: totrans-149
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: OSPF for IPv6概述
- en: 'OSPF for IPv4 (OSPFv2) is standardized in RFC 2328\. In addition to this document,
    several extensions to OSPF have been defined. RFC 1584 describes IPv4 multicast
    extensions to OSPF. RFC 3101 adds Not-So-Stubby Areas (NSSAs) to OSPF. RFC 5340
    modifies OSPF to support the exchange of routing information for IPv6\. OSPF for
    IPv6 has a new version number: version 3.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: OSPF for IPv4（OSPFv2）在RFC 2328中进行了标准化。除了该文档外，还定义了若干OSPF扩展。RFC 1584描述了OSPF的IPv4多播扩展。RFC
    3101为OSPF添加了“非完全骨干区域”（NSSA）。RFC 5340修改了OSPF以支持IPv6的路由信息交换。OSPF for IPv6有一个新的版本号：版本3。
- en: OSPF is classified as an IGP, which are used within autonomous systems. It was
    designed to overcome some of the limitations introduced by RIP, such as the small
    diameter, long convergence time, and a metric that does not reflect the characteristics
    of the network. In addition, OSPF handles a much larger routing table to accommodate
    large number of routes.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: OSPF被分类为内部网关协议（IGP），用于自治系统内部。它的设计旨在克服RIP引入的一些限制，例如小直径、长收敛时间和无法反映网络特征的度量。此外，OSPF能够处理更大的路由表，以适应大量的路由。
- en: Differences between OSPF for IPv4 and OSPF for IPv6
  id: totrans-152
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: OSPF for IPv4和OSPF for IPv6的区别
- en: 'Most of the concepts of OSPF for IPv4 have been retained; following is a brief
    overview of the changes:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分OSPF for IPv4的概念被保留；以下是一些变化的简要概述：
- en: '*Protocol processing per-link, not per-subnet*'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '*协议处理按链路进行，而非按子网进行*'
- en: IPv6 connects interfaces to links. Multiple IP subnets can be assigned to a
    single link, and two nodes can talk directly over a single link even if they do
    not share a common IP subnet. OSPF for IPv6 runs per-link instead of per-subnet.
    The terms *network* and *subnet* used in OSPF for IPv4 should be replaced with
    the term *link*, i.e., an OSPF interface now connects to a link instead of an
    IP subnet.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6将接口连接到链路。可以将多个IP子网分配到单个链路上，即使两个节点不共享相同的IP子网，它们也可以通过单个链路直接通信。OSPF for IPv6按链路进行，而非按子网进行。在OSPF
    for IPv4中使用的术语*网络*和*子网*应替换为*链路*，即OSPF接口现在连接到链路而非IP子网。
- en: '*Removal of addressing semantics*'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '*移除地址语义*'
- en: IPv6 addresses are no longer present in OSPF packet headers. They are only allowed
    as payload information.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6地址不再出现在OSPF数据包头部。它们仅允许作为有效载荷信息存在。
- en: Router-LSA and Network-LSA do not contain IPv6 addresses. OSPF Router ID, Area
    ID, and Link State ID remain at 32 bits, so they cannot take the value of an IPv6
    address. Designated Routers (DRs) and Backup Designated Routers (BDRs) are now
    always identified by their Router ID and not their IP address.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器-LSA和网络-LSA不包含IPv6地址。OSPF路由器ID、区域ID和链路状态ID仍为32位，因此不能取IPv6地址的值。指定路由器（DR）和备份指定路由器（BDR）现在总是通过其路由器ID进行标识，而不是其IP地址。
- en: '*Flooding scope*'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '*泛洪范围*'
- en: 'Each LSA type contains an explicit code to specify its flooding scope. This
    code is embedded in the LS type field. Three flooding scopes have been introduced:
    link-local, area, and AS.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 每种LSA类型都包含一个明确的代码，用于指定其泛洪范围。该代码嵌入在LS类型字段中。已引入三种泛洪范围：链路-local、区域和自治系统（AS）。
- en: '*Explicit support for multiple instances per link*'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '*明确支持每个链路的多个实例*'
- en: Multiple OSPF protocol instances can now run over a single link. This allows
    for separate Autonnomous Systems, each running OSPF, to use a common link. Another
    use of this feature is to have a single link belong to multiple areas.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在多个 OSPF 协议实例可以在单一链路上运行。这允许不同的自治系统（每个系统都运行 OSPF）共享同一链路。该功能的另一个用途是使单一链路属于多个区域。
- en: '*Use of link-local addresses*'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '*链路本地地址的使用*'
- en: OSPF assumes that each interface has been assigned a link-local unicast address.
    All OSPF packets use the link-local address as the Source address. The routers
    learn the link-local addresses of all their neighbors and use these addresses
    as the next hop address. Packets sent on virtual links, however, must use either
    the global or local IP address as the source for OSPF packets.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: OSPF 假定每个接口都已分配链路本地单播地址。所有 OSPF 数据包都使用链路本地地址作为源地址。路由器学习到所有邻居的链路本地地址，并将这些地址用作下一跳地址。然而，在虚拟链路上发送的数据包必须使用全局或本地
    IP 地址作为 OSPF 数据包的源地址。
- en: '*Authentication*'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '*身份验证*'
- en: Because OSPF for IPv6 runs over IPv6, it relies on the IP Authentication Header
    and the IP Encapsulating Security Payload to ensure integrity and authentication
    of routing exchanges. The authentication of OSPF for IPv4 has been removed. One
    integrity check remains, which comes in the form of the checksum that is calculated
    over the entire OSPF packet.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 OSPF for IPv6 运行在 IPv6 上，它依赖于 IP 身份验证头（IP Authentication Header）和 IP 封装安全有效负载（IP
    Encapsulating Security Payload）来确保路由交换的完整性和身份验证。IPv4 版本的 OSPF 身份验证已被移除。唯一的完整性检查仍然存在，形式为对整个
    OSPF 数据包进行计算的校验和。
- en: '*OSPF packet format changes*'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '*OSPF 数据包格式变更*'
- en: See the section [Encapsulation in IP datagrams](ch05.html#encapsulation_in_ip_datagrams
    "Encapsulation in IP datagrams").
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 参见章节 [IP 数据报中的封装](ch05.html#encapsulation_in_ip_datagrams "IP 数据报中的封装")。
- en: '*LSA format changes*'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '*LSA 格式变更*'
- en: Type 3 (Summary Link) has been renamed Inter-Area-Prefix-LSA.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 类型 3（汇总链路）已更名为区域间前缀 LSA（Inter-Area-Prefix-LSA）。
- en: Type 4 (AS Summary Link) has been renamed Inter-Area-Router-LSA.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 类型 4（AS 汇总链路）已更名为区域间路由器 LSA（Inter-Area-Router-LSA）。
- en: Two new LSAs carry IPv6 prefix information in their payload. Link-LSA (type
    8) carries the IPv6 address information of the local links, and Intra-Area-Prefix-LSA
    (type 9) carries the IPv6 prefixes of the router and network links.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 两种新的 LSA 承载 IPv6 前缀信息。链路 LSA（类型 8）承载本地链路的 IPv6 地址信息，区域内前缀 LSA（类型 9）承载路由器和网络链路的
    IPv6 前缀。
- en: For other changes, such as Link State ID and the Options field, see the section
    “The Link State Database.”
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 有关其他变化，例如链路状态 ID 和选项字段，请参见章节 “链路状态数据库”。
- en: '*Handling unknown LSA types*'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '*处理未知 LSA 类型*'
- en: Instead of simply discarding them, OSPF for IPv6 introduces a more flexible
    way of handling unknown LSA types. A new LSA handling bit has been added to the
    LS Type field to allow flooding of unknown LSA types.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: OSPF for IPv6 引入了一种更灵活的方式来处理未知 LSA 类型，而不是简单地丢弃它们。新的 LSA 处理位已被添加到 LS 类型字段中，以允许洪泛未知的
    LSA 类型。
- en: '*Stub area support*'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '*Stub 区域支持*'
- en: The concept of stub areas has been retained in OSPF for IPv6\. An additional
    rule specifies the flooding of unknown LSAs within the stub area.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: OSPF 在 IPv6 中保留了 Stub 区域的概念。新增的规则指定了在 Stub 区域内洪泛未知 LSA。
- en: Encapsulation in IP datagrams
  id: totrans-178
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: IP 数据报中的封装
- en: The routers use OSPF packets to exchange LSA information and to establish and
    maintain neighbor relations (adjacencies). OSPF packets are directly encapsulated
    in IPv6, specified by protocol number 89 in the Next Header field of the IPv6
    header. This means that OSPF does not run over TCP or UDP.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器使用 OSPF 数据包交换 LSA 信息，并建立和维护邻居关系（邻接）。OSPF 数据包直接封装在 IPv6 中，通过 IPv6 头部的 Next
    Header 字段中的协议号 89 指定。这意味着 OSPF 并不通过 TCP 或 UDP 运行。
- en: OSPF doesn’t use fragmentation, therefore relying entirely on IP fragmentation
    when sending packets larger than the MTU. Fragmentation should be avoided whenever
    possible. Potentially large OSPF packets such as Database Description packets
    or Link State Update packets can easily be split into multiple packets by OSPF
    itself.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: OSPF 不使用分片，因此当发送大于 MTU 的数据包时，完全依赖 IP 分片。应尽量避免分片。潜在的大型 OSPF 数据包，如数据库描述包或链路状态更新包，可以轻松由
    OSPF 自身拆分成多个数据包。
- en: 'OSPF messages normally use the link-local IPv6 address of the outgoing interface
    as their Source addresses. The exceptions are messages sent on a virtual link.
    They use the local or global unicast address of the virtual link as their source.
    Depending on the situation, OSPF messages can be sent as a unicast to a specific
    neighbor or as a multicast to multiple neighbors. The following two multicast
    addresses are set aside for this purpose:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: OSPF 消息通常使用出接口的链路本地 IPv6 地址作为源地址。例外情况是通过虚拟链路发送的消息，它们使用虚拟链路的本地或全局单播地址作为源地址。根据情况，OSPF
    消息可以作为单播发送到特定邻居，也可以作为组播发送到多个邻居。以下两个组播地址专门用于此目的：
- en: '*AllSPFRouters (* `ff02::5`*)*'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '*AllSPFRouters*（`ff02::5`）'
- en: All routers running OSPF must listen to this multicast address. Hello packets
    are always sent to this address, with the exception of nonbroadcast-capable networks.
    This address is also used for some packets during LSA flooding.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 所有运行 OSPF 的路由器必须监听此组播地址。Hello 数据包总是发送到该地址，除非是不可广播的网络。此地址在 LSA 泛洪过程中也用于一些数据包。
- en: '*AllDRouters (* `ff02::6`*)*'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '*AllDRouters*（`ff02::6`）'
- en: Both the DR and the BDR on a multiaccess medium must listen to this multicast
    address. This address is used for some packets during LSA flooding.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在多访问介质上，DR 和 BDR 必须监听这个组播地址。此地址在 LSA 泛洪过程中用于一些数据包。
- en: OSPF packets sent to the multicast address have link-local scope, and their
    IPv6 hop limit is set to 1\. They will never be sent over multiple hops.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 发送到组播地址的 OSPF 数据包具有链路本地作用域，并且它们的 IPv6 跳数限制设置为 1。它们永远不会跨越多个跳数发送。
- en: Support for multiple address families
  id: totrans-187
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 支持多个地址族
- en: In the original OSPFv3 specification, there was no support for IPv4\. This means
    that in a dual-stacked network you have to run OSPFv2 for IPv4 and OSPFv3 for
    IPv6\. OSPFv2 has some limitations, especially for mobile operations. OSPFv3 can
    overcome some of these limitations. RFC 5838, “Support of Address Families in
    OSPFv3,” adds multiprotocol support for OSPFv3\. With this RFC implemented, you
    can run two instances of OSPFv3, one for IPv4 and one for IPv6\. Each OSPFv3 instance
    maintains its own adjacencies, link state database, and shortest path computation.
    The protocols are differentiated by using the Instance ID field in the packet
    header. Address-family enabled routers can establish peer relations based on IPv6
    link-local addresses and advertise IPv4 routes. This way IPv4 routers in different
    subnets can peer with each other through the IPv6 network.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在原始的 OSPFv3 规范中，不支持 IPv4。这意味着在双栈网络中，你必须为 IPv4 运行 OSPFv2，为 IPv6 运行 OSPFv3。OSPFv2
    存在一些限制，特别是对于移动操作。OSPFv3 可以克服其中的一些限制。RFC 5838，“OSPFv3 中的地址族支持”，为 OSPFv3 增加了多协议支持。实现该
    RFC 后，你可以运行两个 OSPFv3 实例，一个用于 IPv4，一个用于 IPv6。每个 OSPFv3 实例维护自己的邻接关系、链路状态数据库和最短路径计算。通过在数据包头中使用实例
    ID 字段来区分这些协议。启用地址族的路由器可以基于 IPv6 链路本地地址建立对等关系，并通告 IPv4 路由。通过这种方式，位于不同子网的 IPv4 路由器可以通过
    IPv6 网络与彼此建立对等关系。
- en: The alternative to this choice is to use IS-IS (described next), which also
    has multiple address family support. Some larger organizations have chosen to
    migrate their OSPFv2 environment to IS-IS for this reason, to have one protocol
    to manage their transitional dual-stack network.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 这一选择的替代方案是使用 IS-IS（接下来会描述），它也支持多地址族。一些大型组织选择将他们的 OSPFv2 环境迁移到 IS-IS，原因是希望使用一种协议来管理他们的过渡双栈网络。
- en: Routing IPv6 with IS-IS
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 IS-IS 路由 IPv6
- en: IPv6 support with IS-IS is defined in RFC 5308\. This document is based on the
    specifications for integrated IS-IS as defined in RFC 1195\. Without in-depth
    knowledge of integrated IS-IS, the IPv6 extension cannot be understood.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6 支持与 IS-IS 在 RFC 5308 中定义。本文档基于 RFC 1195 中定义的集成 IS-IS 规范。没有深入了解集成 IS-IS
    的知识，无法理解 IPv6 扩展。
- en: IS-IS originally defines the exchange of routing information between *Intermediate
    Systems* (ISs, otherwise known as routers) for the OSI network layer protocols
    *CLNP* (*Connectionless Network Protocol*) and *CONP* (*Connection-Oriented Network
    Protocol*). Other protocols use other routing protocols. Having separate routing
    protocols for each network layer is sometimes referred to as “ships in the night.”
    Each routing protocol uses its own resources, such as CPU and memory, and therefore
    operate independent from each other.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: IS-IS 最初定义了 *中间系统*（IS，亦称为路由器）之间交换路由信息，适用于 OSI 网络层协议 *CLNP*（*无连接网络协议*）和 *CONP*（*面向连接网络协议*）。其他协议使用不同的路由协议。每个网络层有独立的路由协议，有时被称为“夜空中的船只”。每个路由协议使用自己的资源，如
    CPU 和内存，因此它们是相互独立的。
- en: 'Integrated IS-IS is an interior routing protocol based on link state updates.
    OSPF and IS-IS have many similarities: if you know one, the other is easy to grasp.
    OSPF runs within an AS, and i/IS-IS runs within a routing domain.'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 集成IS-IS是一种基于链路状态更新的内部路由协议。OSPF和IS-IS有许多相似之处：如果你掌握了其中一个，另一个也容易理解。OSPF在AS内部运行，而IS-IS在路由域内部运行。
- en: Integrated IS-IS provides for the inclusion of variable-length fields (Type,
    Length, Value fields, or TLVs) in all IS-IS packets (Hello, LSP, and SNP). Relevant
    addressing information is stored in TLV fields. Hello packets and LSP packets
    carry a field specifying the network layer protocols. Each supported network layer
    protocol is specified by its NLPID, assigned by ISO. The value of the IPv6 NLPID
    is 142 (`0x8E`).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 集成IS-IS支持在所有IS-IS数据包（Hello、LSP和SNP）中包含可变长度字段（类型、长度、值字段，或TLV）。相关的寻址信息存储在TLV字段中。Hello数据包和LSP数据包携带一个字段，指定网络层协议。每个支持的网络层协议通过其NLPID来指定，NLPID由ISO分配。IPv6的NLPID值为142（`0x8E`）。
- en: 'The RFC defines two new TLVs for IPv6\. They are described in the following
    list:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: RFC定义了两个新的IPv6 TLV。它们在下面的列表中描述。
- en: '*The IPv6 Reachability TLV (type 236)*'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '*IPv6可达性TLV（类型236）*'
- en: 'Defines the IPv6 prefix advertised within L1-LSP and L2-LSP. Within an L2-LSP,
    it can also be used to advertise an IPv6 prefix external to the routing domain
    by setting the external bit in the Control field. The following fields make up
    this TLV: Prefix Length, IPv6 Prefix, Metric (4 bytes), and the Control field.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 定义在L1-LSP和L2-LSP中广告的IPv6前缀。在L2-LSP中，它还可以通过在控制字段中设置外部位来用于广告路由域外的IPv6前缀。以下字段构成该TLV：前缀长度、IPv6前缀、度量（4字节）和控制字段。
- en: '*IPv6 Interface Address TLV (type 232)*'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '*IPv6接口地址TLV（类型232）*'
- en: Defines the IPv6 addresses of one or more interfaces of the router. It is advertised
    in Hello packets, L1-LSP, and L2-LSP. For Hello packets, it must contain the link-local
    IPv6 address assigned to the interface that is sending the Hello packet. In LSP,
    it must contain the global/unique-local addresses assigned to the router.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 定义路由器一个或多个接口的IPv6地址。它在Hello数据包、L1-LSP和L2-LSP中进行广告。在Hello数据包中，必须包含分配给发送Hello数据包的接口的链路本地IPv6地址。在LSP中，必须包含分配给路由器的全局/唯一本地地址。
- en: EIGRP for IPv6
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: EIGRP for IPv6
- en: Enhanced Interior Gateway Protocol (EIGRP) is an interior routing protocol (IGP)
    developed by Cisco Systems, Inc. It runs in an autonomous system called EIGRP
    domain. The main objective of EIGRP was to eliminate limitations of a distance
    vector routing protocol (see the discussion of RIP, earlier in this section) without
    developing another link state based protocol. Link state protocols with their
    complexity and database demand higher CPU performance and more memory of the routers.
    EIGRP was therefore developed as a hybrid protocol combining the best of both
    worlds. It uses a so-called *Diffuse Update Algorithm (DUAL)* to calculate the
    routes. It allows for fast convergence and ensures loop-free operations at every
    instant throughout route computation. Only routers affected by a change are involved.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 增强型内部网关协议（EIGRP）是思科系统公司开发的内部路由协议（IGP）。它在一个自治系统中运行，称为EIGRP域。EIGRP的主要目标是消除距离矢量路由协议的局限性（参见本节前面关于RIP的讨论），而不需要开发另一个基于链路状态的协议。链路状态协议由于其复杂性和数据库需求，要求路由器更高的CPU性能和更多的内存。因此，EIGRP作为一种混合协议开发，结合了两者的优点。它使用所谓的*扩散更新算法（DUAL）*来计算路由。它允许快速收敛，并确保在每一时刻的路由计算中保持无环操作。只有受变化影响的路由器参与其中。
- en: EIGRP has always supported different network layer protocols. For each network
    layer protocol, EIGRP runs a separate instance in a “ships in the night” fashion.
    There are modules for IPv4, IPX, Appletalk, and now also for IPv6\. The basic
    functions for all protocols are the same. The semantics of the different protocols
    are implemented using protocol-dependent TLVs (Type, Length, Value) fields.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: EIGRP一直支持不同的网络层协议。对于每个网络层协议，EIGRP以“夜间航行”的方式运行一个独立的实例。它有IPv4、IPX、Appletalk模块，现在也支持IPv6。所有协议的基本功能是相同的。不同协议的语义通过协议相关的TLV（类型、长度、值）字段实现。
- en: Cisco is opening up EIGRP as an open stack. It is in draft status at the time
    of writing. It remains to be seen if it is standardized and if other vendors are
    picking up on it.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 思科正在开放EIGRP作为一个开放栈。本文撰写时它处于草案状态。是否会标准化，以及是否有其他厂商支持，仍有待观察。
- en: BGP-4 Support for IPv6
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: BGP-4对IPv6的支持
- en: There is no actual BGP for IPv6\. The IPv6 support derives from the capability
    of BGP-4 to exchange information about network layer protocols other than IPv4\.
    These multiprotocol extensions of BGP-4 are defined in RFC 4760\. The base RFC
    that defines BGP-4 is RFC 4271\. BGP-4 is the primary interdomain routing protocol
    used in the Internet.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 对 IPv6 来说没有实际的 BGP。IPv6 的支持来源于 BGP-4 能够交换除 IPv4 之外的其他网络层协议的信息。BGP-4 的这些多协议扩展定义在
    RFC 4760 中。定义 BGP-4 的基础 RFC 是 RFC 4271。BGP-4 是互联网中使用的主要域间路由协议。
- en: BGP-4 overview
  id: totrans-206
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: BGP-4 概述
- en: Each AS runs its interior routing protocol (RIP, OSPF, etc.) to distribute all
    routing information within the AS. BGP is an exterior routing protocol whose primary
    function is to exchange information about the reachability of networks between
    Autonomous Systems. Each AS receives a unique AS number assigned by the numbering
    authority, such as IANA and RIRs like ARIN, RIPE NCC etc.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 每个自治系统（AS）运行其内部路由协议（RIP、OSPF等），以分发所有的路由信息。BGP 是一种外部路由协议，其主要功能是交换自治系统之间关于网络可达性的信息。每个自治系统都会收到由编号管理机构（如
    IANA 和 RIRs，例如 ARIN、RIPE NCC 等）分配的唯一 AS 编号。
- en: BGP messages are carried on top of TCP connections, which can be established
    over either IPv4 or IPv6\. The source and destination IP addresses of the datagram
    depend on the peer configuration. They are always unicast. BGP connections use
    the well-known TCP port 179\. Remember that only one TCP connection is established
    between two peering routes.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: BGP 消息通过 TCP 连接传输，TCP 连接可以通过 IPv4 或 IPv6 建立。数据报文的源地址和目的地址取决于对等方配置，它们始终是单播的。BGP
    连接使用著名的 TCP 端口 179。请记住，两个对等路由器之间只会建立一个 TCP 连接。
- en: BGP Multiprotocol Extension for IPv6
  id: totrans-209
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: BGP 多协议扩展用于 IPv6
- en: 'BGP-4 carries only three pieces of information that are truly IPv4-specific:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: BGP-4 仅携带三项真正与 IPv4 特定相关的信息：
- en: '`NLRI` (feasible and withdrawn) in the `UPDATE` message contains an IPv4 prefix.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UPDATE` 消息中的 `NLRI`（可达和撤销）包含一个 IPv4 前缀。'
- en: '`NEXT_HOP` path attribute in the `UPDATE` message contains an IPv4 address.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UPDATE` 消息中的 `NEXT_HOP` 路径属性包含一个 IPv4 地址。'
- en: BGP Identifier is in the `OPEN` message and in the `AGGREGATOR` attribute.
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BGP 标识符位于 `OPEN` 消息和 `AGGREGATOR` 属性中。
- en: To make BGP-4 available for other network layer protocols, the multiprotocol
    NLRI and its next-hop information must be added. RFC 4760 extends BGP to support
    multiple network layer protocols. IPv6 is one of the protocols supported, as emphasized
    in a separate document (RFC 2545). To accommodate the new requirement for multiprotocol
    support, BGP-4 adds two new attributes to advertise and withdraw multiprotocol
    NLRI. The BGP Identifier stays unchanged. BGP-4 routers with IPv6 extensions therefore
    still need a local IPv4 address. To establish a BGP connection exchanging IPv6
    prefixes, the peering routers need to advertise the optional parameter BGP capability
    to indicate IPv6 support. BGP connections and route selection remain unchanged.
    Each implementer needs to extend the RIB to accommodate IPv6 routes. Policies
    need to take IPv6 NLRI and next-hop information into consideration for route selection.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使 BGP-4 能支持其他网络层协议，必须添加多协议 NLRI 及其下一跳信息。RFC 4760 扩展了 BGP，支持多种网络层协议。IPv6 是其中一个受支持的协议，这一点在单独的文档中有强调（RFC
    2545）。为了适应多协议支持的新需求，BGP-4 添加了两个新属性，用于广告和撤销多协议 NLRI。BGP 标识符保持不变。因此，具有 IPv6 扩展的
    BGP-4 路由器仍然需要一个本地的 IPv4 地址。为了建立交换 IPv6 前缀的 BGP 连接，对等路由器需要广告可选参数 BGP 能力以指示对 IPv6
    的支持。BGP 连接和路由选择保持不变。每个实现者需要扩展 RIB 以适应 IPv6 路由。策略需要考虑 IPv6 NLRI 和下一跳信息以进行路由选择。
- en: An `UPDATE` message advertising only IPv6 NLRI sets the unfeasible route length
    field to 0 and carries no IPv4 NLRI. All advertised or withdrawn IPv6 routes are
    carried within the `MP_REACH_NLRI` and `MP_UNREACH_NLRI`. The `UPDATE` must carry
    the path attributes `ORIGIN` and `AS_PATH`; in IBGP connections it must also carry
    `LOCAL_PREF`. The `NEXT_HOP` attribute should not be carried. If the `UPDATE`
    message contains the `NEXT_HOP` attribute, the receiving peer must ignore it.
    All other attributes can be carried and are recognized.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 一个只广告 IPv6 NLRI 的 `UPDATE` 消息将不可达路由长度字段设置为 0，并且不携带任何 IPv4 NLRI。所有广告或撤销的 IPv6
    路由都通过 `MP_REACH_NLRI` 和 `MP_UNREACH_NLRI` 承载。`UPDATE` 必须携带路径属性 `ORIGIN` 和 `AS_PATH`；在
    IBGP 连接中，它还必须携带 `LOCAL_PREF`。`NEXT_HOP` 属性不应被携带。如果 `UPDATE` 消息包含 `NEXT_HOP` 属性，接收方必须忽略它。所有其他属性可以携带并且是可识别的。
- en: An `UPDATE` message can advertise both IPv6 NLRI and IPv4 NLRI having the same
    path attributes. In this case, all fields can be used. For IPv6 NLRI, however,
    the `NEXT_HOP` attribute should be ignored. IPv4 and IPv6 NLRI are separated in
    the corresponding RIB.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`UPDATE` 消息可以同时通告IPv6 NLRI和IPv4 NLRI，它们具有相同的路径属性。在这种情况下，所有字段都可以使用。然而，对于IPv6
    NLRI，`NEXT_HOP` 属性应被忽略。IPv4和IPv6 NLRI在相应的RIB中是分开的。'
- en: Routing Protocol Choices for Network Designs with IPv6
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IPv6网络设计的路由协议选择
- en: While creating your network design for your future network including IPv6, you
    have many choices to make. Take your time to analyze and understand the new features
    of IPv6, because only then can you unfold its potential. If you simply try to
    mirror your IPv4 designs to the IPv6 world, you lose the opportunity to create
    networks that will not only be ready to support similar network services, but
    which scale to support future applications and services.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在为未来的网络设计包括IPv6时，你需要做出许多选择。花时间分析并理解IPv6的新特性，因为只有这样你才能发掘它的潜力。如果你仅仅试图将IPv4设计镜像到IPv6世界中，你将失去创造不仅能够支持类似网络服务，而且能够扩展以支持未来应用和服务的网络的机会。
- en: Routing principles in general are not different in an IPv6 network. We have
    some features that should optimize routing efficiency, such as a fixed length
    IPv6 header, the use of Extension headers that are only inserted if the options
    are needed, and the fact that IPv6 routers do not fragment anymore. We can eventually
    use the flow label to optimize data flows (once the community has agreed on a
    common practice).
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，IPv6网络中的路由原则并没有不同。我们有一些特性应当优化路由效率，例如固定长度的IPv6头部、仅在需要选项时才插入的扩展头部，以及IPv6路由器不再进行分片的事实。我们最终可以使用流标签来优化数据流（当社区就共同实践达成一致时）。
- en: The original plan for IPv6 was to not allocate Provider Independent (PI) addresses.
    It was an early design goal for IPv6 to not only solve the address situation,
    but also the problem with overflowing Internet routing tables. So the IPv6 address
    space is distributed to the RIRs based on geography in order to keep the root
    routing tables as small as possible. However, it turned out that the zero PI space
    wasn’t a sustainable policy in the real world. So we are back to having PI space,
    which partially breaks the hierarchical model based on geography and thereby creates
    more entries in global routing tables. Also, the IPv6 routing tables do not contain
    32-bit address entries, but 128-bit address entries. And during the transition
    time in dual-stack networks, routers will maintain two routing tables, one for
    IPv4 and one for IPv6\. The vendors will have to make sure that forwarding is
    efficient, done in hardware, and that the routers make efficient use of the resources
    so the routing tables use the minimum possible memory.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6的最初计划是不会分配提供者独立（PI）地址。IPv6的早期设计目标不仅要解决地址问题，还要解决互联网路由表溢出的难题。因此，IPv6地址空间根据地理位置分配给RIR（区域互联网注册机构），以保持根路由表尽可能小。然而，事实证明，零PI空间在现实世界中并不是一个可持续的政策。所以我们回到了有PI地址空间的状态，这在一定程度上打破了基于地理的分层模型，从而导致全球路由表中条目的增加。此外，IPv6路由表不包含32位地址条目，而是128位地址条目。在双栈网络的过渡期间，路由器将维护两个路由表，一个用于IPv4，另一个用于IPv6。厂商必须确保转发是高效的，且在硬件中完成，同时路由器能够高效利用资源，以便路由表使用最小的内存。
- en: To summarize the information about the different routing protocols, we provide
    the following overview.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 为了总结不同路由协议的信息，我们提供了以下概述。
- en: 'For IPv6 networks, the following IGPs are available:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 对于IPv6网络，以下是可用的IGP（内部网关协议）：
- en: '*RIPng (RFC 2080)*'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '*RIPng（RFC 2080）*'
- en: RIP is a distance-vector protocol. It uses the Bellman-Ford algorithm. It is
    an easy-to-use protocol but it is far less efficient than OSPF and IS-IS. It has
    all the limitations that RIPv4 always had, such as a limited diameter, routing
    loops can create long convergence times, and the metrics don’t represent line
    speeds because they are based on hop counts. It is not a recommended routing protocol
    for enterprise networks.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: RIP是一种距离矢量协议。它使用贝尔曼-福特算法。它是一个易于使用的协议，但效率远不如OSPF和IS-IS。它具有RIPv4一直存在的所有限制，比如有限的直径、路由环路可能导致长时间的收敛，以及度量值并不代表线路速度，因为它们是基于跳数的。它不是企业网络推荐的路由协议。
- en: '*OSPFv3 (RFC 5340)*'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '*OSPFv3（RFC 5340）*'
- en: OSPFv3 is a link-state based protocol. It uses the Dijkstra Algorithm to calculate
    a tree of shortest paths (SPF). It uses link-local addresses to exchange routing
    information (which is very helpful in the case of renumbering) and OSPFv2 authentication
    was removed, because it now uses standard IPv6 authentication. OSPFv3 as defined
    in RFC 5340 runs as a separate process. You still need OSPFv2 to manage your IPv4
    network and each version maintains its separate routing tables. RFC 5838 defines
    extensions that support multiple address families in OSPFv3\. At the time of writing,
    there is limited vendor support. Ask for the vendor’s roadmaps.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: OSPFv3 是一种基于链路状态的协议。它使用 Dijkstra 算法计算最短路径树（SPF）。它使用链路本地地址交换路由信息（在重新编号时非常有帮助），并且
    OSPFv2 身份验证已被移除，因为现在使用标准的 IPv6 身份验证。按照 RFC 5340 的定义，OSPFv3 作为一个独立的进程运行。你仍然需要 OSPFv2
    来管理 IPv4 网络，每个版本都维护独立的路由表。RFC 5838 定义了支持 OSPFv3 多地址族的扩展。撰写时，供应商支持有限。请咨询供应商的路线图。
- en: '*IS-IS (RFC 5308)*'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '*IS-IS (RFC 5308)*'
- en: IS (Intermediate System) is OSI’s term for router. IS-IS is a link-state protocol
    and also uses the Dijkstra Algorithm. It is an ISO protocol and does not rely
    on IP to exchange routing information. It is similar to OSPF but is considered
    to be easier to configure and manage by many administrators. IPv6 is fully integrated,
    and does not run as a separate process like in the current OSPF versions. For
    many years it has mainly been used in provider networks and wasn’t so common in
    the United States. In the last years it became more common and has started to
    be used more and more in the enterprise space.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: IS（中间系统）是 OSI 对路由器的术语。IS-IS 是一种链路状态协议，同样使用 Dijkstra 算法。它是 ISO 协议，不依赖 IP 来交换路由信息。它与
    OSPF 相似，但许多管理员认为它更容易配置和管理。IPv6 已完全集成，并不像当前版本的 OSPF 那样作为独立进程运行。多年来，它主要用于服务提供商网络，在美国不太常见。近几年，它变得越来越常见，并且在企业领域的使用也越来越多。
- en: '*EIGRP for IPv6*'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '*EIGRP for IPv6*'
- en: EIGRP was developed by Cisco Systems. It is a hybrid protocol taking the best
    of both the distance-vector and link-state based world and is based on the Diffuse
    Update Algorithm (DUAL). It runs as a separate process, so to manage IPv4 and
    IPv6 two instances must be used. For larger environments we recommend the use
    of OSPF or IS-IS. Besides being more scalable, EIGRPv6 is currently only supported
    on Cisco gear, which creates a vendor lock-in and can also cause delays when updates
    are necessary, which are often faster in a competitive multivendor-supported standard.
    Cisco is opening up EIGRP and it is in draft status for standardization. It remains
    to be seen if it will be adopted by other vendors.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: EIGRP 是由思科系统公司开发的。它是一种混合协议，结合了距离向量和链路状态两种协议的优点，基于扩散更新算法（DUAL）。它作为独立进程运行，因此要管理
    IPv4 和 IPv6，必须使用两个实例。对于较大的环境，我们建议使用 OSPF 或 IS-IS。除了更具可扩展性，EIGRPv6 目前仅在思科设备上受支持，这会造成供应商锁定，并且在需要更新时可能会造成延迟，而在竞争激烈的多供应商支持的标准中，更新通常更快。思科正在开放
    EIGRP，并且它处于标准化草案状态。是否会被其他供应商采纳还有待观察。
- en: For your dual-stack network of the future the choices are most probably OSPFv2
    and OSPFv3 versus IS-IS. RIPng doesn’t scale in enterprise networks, and EIGRP
    is currently a proprietary solution that comes with a vendor lock-in.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 对于未来的双栈网络，选择最有可能的是 OSPFv2 和 OSPFv3 与 IS-IS 相比。RIPng 在企业网络中无法扩展，而 EIGRP 目前是一个专有解决方案，带有供应商锁定。
- en: There are probably not any real technically based pros or cons for OSPF versus
    IS-IS. Some companies decide to run both OSPF versions and have no issue with
    that. As multifamily support for OSPFv3 is on the horizon, this may become another
    option. Other companies prefer to migrate their OSPFv2 to IS-IS in order to have
    one single instance in the future. We expect IS-IS to become more and more popular
    in enterprise multiprotocol environments. Having one single instance also means
    that IPv4 and IPv6 are sharing fate. If you have a clear requirement that the
    routing of IPv4 and IPv6 should be independent of each other, two instances of
    OSPF may be your choice. The routing protocol decision will also be influenced
    by other factors such as building new know-how if you want to integrate IS-IS
    and have used OSPF so far. You will also have to learn about OSPFv3, but the difference
    to OSPFv2 is not so big. It also depends on corporate culture and market factors
    such as available know-how and resources on the market.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: OSPF 与 IS-IS 之间可能没有明显的技术优缺点。一些公司决定同时运行两种 OSPF 版本，并且没有遇到问题。随着 OSPFv3 对多家庭支持的到来，这可能成为另一种选择。其他公司则倾向于将
    OSPFv2 迁移到 IS-IS，以便未来只使用一个实例。我们预计 IS-IS 在企业多协议环境中将越来越受欢迎。拥有单一实例也意味着 IPv4 和 IPv6
    的命运将紧密相连。如果你有明确的需求，要求 IPv4 和 IPv6 的路由相互独立，那么使用两个 OSPF 实例可能是你的选择。路由协议的决策还会受到其他因素的影响，比如如果你希望整合
    IS-IS 而且之前使用的是 OSPF，那么你需要学习新的技术。你还需要了解 OSPFv3，但与 OSPFv2 的差别并不大。决定还取决于公司文化和市场因素，比如市场上可用的技术和资源。
- en: Quality of Service
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务质量
- en: In the beginning, the Internet was designed to be a simple communications platform,
    mainly used to support file transfer and email. Over the past 25+ years, it has
    grown to be a very complex global communications infrastructure with a multitude
    of applications and services. IPv4 is based on a simple packet switching model,
    delivering packets with best effort and no guarantee for delivery. TCP adds guaranteed
    delivery but has no options to control parameters such as delay and jitter or
    to do bandwidth allocation.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 一开始，互联网被设计为一个简单的通信平台，主要用于支持文件传输和电子邮件。在过去的 25 年里，它发展成了一个极其复杂的全球通信基础设施，拥有众多的应用和服务。IPv4
    基于一个简单的分组交换模型，以最佳努力的方式传递数据包，并没有交付保证。TCP 提供了可靠的交付，但没有控制延迟、抖动等参数的选项，也没有带宽分配的功能。
- en: Multimedia services (such as voice over IP and videoconferencing) can have significant
    bandwidth demands and are often very sensitive to timely delivery. The Type of
    Service byte (ToS) in the IPv4 header was designed to provide prioritized treatment
    of certain traffic. However, it was never widely implemented, one reason being
    that its use would delay the forwarding of packets on routers. As there were almost
    no real-time services in those days, there was little pressure to find better
    solutions.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 多媒体服务（如 VoIP 和视频会议）可能会有显著的带宽需求，并且通常对及时交付非常敏感。IPv4 头部中的服务类型字节（ToS）旨在为某些流量提供优先处理。然而，它从未得到广泛实施，原因之一是它的使用会延迟路由器转发数据包。由于当时几乎没有实时服务，因此没有太大的压力去寻找更好的解决方案。
- en: The development of IPv6, combined with the growing demand for real-time services—and,
    therefore, Quality of Service (QoS) features—was an opportunity to look for other
    solutions. Despite the availability of several different approaches, the topic
    of QoS is still a matter of research, and there are many ideas under development.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6 的发展，加上对实时服务日益增长的需求——因此，也包括对服务质量（QoS）特性的需求——为寻找其他解决方案提供了机会。尽管已经有了几种不同的方法，QoS
    话题仍然是一个研究领域，许多新的思路正在开发中。
- en: Let me begin by saying that implementing QoS with IPv6 is not really different
    from implementing QoS with IPv4\. This section aims to give a short introduction
    into QoS for readers that are not familiar with the concepts and then discuss
    the features in IPv6 that support QoS.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 让我先说，使用 IPv6 实现 QoS 并不比使用 IPv4 实现 QoS 更为复杂。本节旨在为不熟悉概念的读者简要介绍 QoS，并讨论支持 QoS 的
    IPv6 特性。
- en: QoS Basics
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: QoS 基础
- en: The default IP model treats all packets alike. They are all forwarded with best-effort
    treatment according to the *first-come, first-served* principle. Which path a
    packet takes through the network depends on the available routers, routing tables,
    and general network load.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的 IP 模型对所有数据包一视同仁。它们都按照 *先到先得* 的原则，以最佳努力的方式转发。数据包在网络中选择的路径取决于可用的路由器、路由表以及整个网络的负载情况。
- en: 'QoS protocols have the task of providing different data streams with priorities
    and guaranteeing qualities such as bandwidth and delay times. There are currently
    two main architectures: Integrated Services (IntServ) and Differentiated Services
    (DiffServ). Both architectures use traffic policies and can be combined to allow
    for QoS in the LAN as well as in the WAN.'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: QoS协议的任务是为不同的数据流提供优先级，并保证诸如带宽和延迟时间等质量。目前有两种主要架构：集成服务（IntServ）和区分服务（DiffServ）。这两种架构都使用流量策略，并可以结合使用，以在局域网（LAN）和广域网（WAN）中实现QoS。
- en: Traffic policies can be used to make the transmission of data dependent on certain
    criteria—for example, whether there are enough resources available to forward
    the data according to its QoS requirements. Traffic policies can also monitor
    data streams and make adjustments or restrictions if necessary. Besides ensuring
    QoS requirements for delay-sensitive traffic, they can also be used for commercial
    reasons, such as controlling cost depending on different service levels.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 流量策略可用于根据特定标准使数据传输成为可能——例如，是否有足够的资源来根据数据的QoS要求转发数据。流量策略还可以监控数据流，并在必要时进行调整或限制。除了确保延迟敏感流量的QoS要求外，它们还可以用于商业目的，如根据不同服务级别控制成本。
- en: Integrated Services
  id: totrans-242
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 集成服务
- en: The Integrated Services architecture (IntServ) is based on the paradigm that
    bandwidth and all related resources per flow are reserved on an end-to-end basis.
    This presupposes that routers store information about flows and analyze each packet
    to determine whether it belongs to a specific flow in order to forward the packet
    according to the criteria for that specific flow.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 集成服务架构（IntServ）基于每个流在端到端的基础上预留带宽和所有相关资源的范式。这要求路由器存储关于流的信息，并分析每个数据包以确定其是否属于特定流，从而根据该特定流的标准转发数据包。
- en: RSVP (Resource Reservation Protocol, RFC 2205) is part of the IntServ architecture.
    RFC 2210, “The Use of RSVP with IETF Integrated Services,” describes the use of
    RSVP with IntServ. RSVP is a signaling protocol used to reserve bandwidth and
    other QoS resources across an IP network. IntServ combined with RSVP can be complex
    to implement and, because of its limited scalability, is inadequate to offer a
    general QoS solution for the global Internet.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: RSVP（资源预留协议，RFC 2205）是IntServ架构的一部分。RFC 2210，“RSVP与IETF集成服务的使用”，描述了RSVP与IntServ的结合使用。RSVP是一个信令协议，用于在IP网络中预留带宽和其他QoS资源。IntServ结合RSVP的实现可能较为复杂，且由于其有限的可扩展性，不足以为全球互联网提供通用的QoS解决方案。
- en: Note
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To find an updated list of IntServ service and parameter names and their associated
    values, go to [http://bit.ly/1na8Lmh](http://bit.ly/1na8Lmh).
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 若要查看更新的IntServ服务和参数名称及其关联值，请访问[http://bit.ly/1na8Lmh](http://bit.ly/1na8Lmh)。
- en: If you are interested in further reading about RSVP and other QoS signaling
    protocols, refer to the informational RFC 4094, “Analysis of Existing Quality-of-Service
    Signaling Protocols.”
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有兴趣进一步阅读关于RSVP和其他QoS信令协议的内容，请参阅信息性RFC 4094，“现有服务质量信令协议分析”。
- en: Differentiated Services
  id: totrans-248
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 区分服务
- en: While IntServ offers the capability to allocate bandwidth to different flows,
    the Differentiated Services (DiffServ) architecture was designed to make a less
    granular differentiation of classes in order to increase its scalability and usability
    in large networks and in the Internet.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管IntServ提供了为不同流分配带宽的能力，但区分服务（DiffServ）架构的设计目标是实现较不精细的类别区分，以增加其在大型网络和互联网中的可扩展性和可用性。
- en: Differentiated Services is specified in RFCs 2474 and 2475\. RFC 2474, “Definition
    of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers,”
    specifies the DS field. This is implemented in the ToS field in the IPv4 header
    and the Traffic Class field in the IPv6 header. The DS field is used by DiffServ
    routers to determine the QoS forwarding requirements of packets. Communicating
    nodes can categorize their communication through a so-called *Per-Hop Behavior*
    (*PHB*). Based on the PHB, packets receive specific treatment on DiffServ routers.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 区分服务在RFC 2474和2475中进行了规范。RFC 2474，“IPv4和IPv6头部中区分服务字段（DS字段）的定义”，规范了DS字段。这在IPv4头部的ToS字段和IPv6头部的流量类别字段中得以实现。DiffServ路由器使用DS字段来确定数据包的QoS转发要求。通信节点可以通过所谓的*每跳行为*（*PHB*）来分类其通信。基于PHB，数据包在DiffServ路由器上将获得特定的处理。
- en: A *DiffServ (DS) domain* is a contiguous group of DS routers that work with
    a common service policy implemented on all routers. A DS domain is defined by
    DS boundary routers. The boundary routers classify incoming data streams and ensure
    that all packets traversing the domain are labeled appropriately and use a Per-Hop
    Behavior from the set available for the domain. Routers within the domain choose
    the forwarding rules based on the DiffServ values in packets, which they map to
    the corresponding PHBs. The Differentiated Services Codepoint (*DSCP*; refer to
    [Figure 5-6](ch05.html#format_of_the_ds_field "Figure 5-6. Format of the DS field"),
    shown later) value can use either the default mapping (`DSCP=0`) or an individually
    configured mapping for the domain. A DS domain usually consists of one network
    or a set of networks, which constitute an administrative unit.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一个*DiffServ (DS)域*是一个连续的DS路由器组，它们在所有路由器上实现了相同的服务策略。DS域由DS边界路由器定义。边界路由器对传入的数据流进行分类，并确保所有经过该域的包都被适当地标记，并使用该域可用的Per-Hop
    Behavior (PHB)集合中的一个行为。域内的路由器根据包中的DiffServ值选择转发规则，将其映射到相应的PHB。区分服务代码点（*DSCP*；参见后文的[图5-6](ch05.html#format_of_the_ds_field
    "图5-6。DS字段的格式")）值可以使用默认映射（`DSCP=0`）或为该域单独配置的映射。一个DS域通常由一个网络或一组网络组成，这些网络构成了一个管理单元。
- en: A *DS region* is a set of contiguous DS domains. DS regions can ensure DS services
    for domain spanning paths. The single domains can use individual PHB definitions
    and PHB-codepoint mappings internally. Between the domains within a region, Traffic
    Conditioners are responsible for providing correct translation of the different
    PHBs and mappings. If the policies, PHB groups, and codepoint mappings are the
    same in all the domains within the region, no Traffic Conditioners are needed.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 一个*DS区域*是由一组连续的DS域组成。DS区域可以确保跨域路径的DS服务。单个域内部可以使用各自的PHB定义和PHB代码点映射。在区域内的域之间，流量调节器负责提供不同PHB和映射的正确转换。如果区域内所有域中的策略、PHB组和代码点映射都相同，则不需要流量调节器。
- en: '*Packet classifiers* choose packets from a data stream based on information
    in the packet headers and according to predefined rules. There are two types of
    classifiers: the Behavior Aggregate classifier (BA) classifies packets based on
    the DS field, and the Multi Field classifier (MF) classifies packets based on
    either different header fields or a combination of header fields, such as Source
    or Destination address, DS field, protocol number, source or destination port,
    or information such as incoming interface.'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '*包分类器*根据包头中的信息和预定义规则从数据流中选择包。分类器有两种类型：行为聚合分类器（BA）根据DS字段对包进行分类，多个字段分类器（MF）根据不同的头字段或头字段的组合（如源地址、目的地址、DS字段、协议号、源或目的端口，或如入接口等信息）对包进行分类。'
- en: QoS in IPv6 Protocols
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IPv6协议中的QoS
- en: The designers of IPv6 have focused not on requiring specific mechanisms for
    QoS, but on offering as much flexibility as possible to support different QoS
    mechanisms. This section describes the elements in the IPv6 header and the Extension
    headers that can be used for QoS services.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6的设计者们并未专注于要求特定的QoS机制，而是尽可能提供更多的灵活性以支持不同的QoS机制。本节描述了IPv6头部和扩展头部中可用于QoS服务的元素。
- en: IPv6 Header
  id: totrans-256
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: IPv6头部
- en: 'There are two fields in the IPv6 header that can be used for QoS: the Traffic
    Class and the Flow Label field.'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6头部中有两个字段可以用于QoS：流量类和流标签字段。
- en: Traffic Class
  id: totrans-258
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 流量类
- en: The use of the 1-byte Traffic Class field is specified in RFC 2474\. As already
    mentioned, this RFC introduces the term *DS field* for the Traffic Class field.
    The goal of this specification is that DiffServ routers have a known set of DS
    routines, which are determined by the value in the DS field. These DSCP values
    are mapped to Per-Hop Behaviors (PHB) and can be either performance- or class-based.
    [Figure 5-6](ch05.html#format_of_the_ds_field "Figure 5-6. Format of the DS field")
    shows the DS field.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 1字节流量类字段的使用在RFC 2474中进行了规定。如前所述，该RFC为流量类字段引入了*DS字段*的术语。该规范的目标是，DiffServ路由器拥有一套已知的DS例程，这些例程由DS字段中的值决定。这些DSCP值映射到Per-Hop
    Behaviors (PHB)，并且可以是基于性能的或基于类别的。[图5-6](ch05.html#format_of_the_ds_field "图5-6。DS字段的格式")展示了DS字段。
- en: '![Format of the DS field](images/ipv6_0506.png)Figure 5-6. Format of the DS
    field'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '![DS字段的格式](images/ipv6_0506.png)图5-6。DS字段的格式'
- en: The DSCP field within the DS field (the six most significant bits of the DS
    field) is used for the codepoint, which specifies the PHB. With this field, 64
    different codepoints can be specified. This codepoint pool has been divided into
    three parts to control the assignment of PHBs. [Table 5-1](ch05.html#the_codepoint_pools
    "Table 5-1. The codepoint pools") shows the division of the DSCP pools.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: DS字段中的DSCP字段（DS字段的六个最重要的位）用于代码点，指定PHB。通过这个字段，可以指定64个不同的代码点。这个代码点池已被分为三部分，以控制PHB的分配。[表5-1](ch05.html#the_codepoint_pools
    "表5-1. 代码点池")显示了DSCP池的划分。
- en: Table 5-1. The codepoint pools
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 表5-1. 代码点池
- en: '| Pool | Codepoint space | Assignment policy |'
  id: totrans-263
  prefs: []
  type: TYPE_TB
  zh: '| 池 | 代码点空间 | 分配政策 |'
- en: '| --- | --- | --- |'
  id: totrans-264
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 1 | xxxxx0 | Standard use |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
  zh: '| 1 | xxxxx0 | 标准使用 |'
- en: '| 2 | xxxx11 | Experimental/local use |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| 2 | xxxx11 | 实验/本地使用 |'
- en: '| 3 | xxxx01 | Experimental/local use; potential standard use in the future
    |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| 3 | xxxx01 | 实验/本地使用；未来可能用于标准化 |'
- en: A pool of 32 recommended codepoints (pool 1) is assigned through formal standardization;
    a pool of 16 more codepoints (pool 2) is reserved for experimental or local use;
    the final pool of 16 codepoints (pool 3) is initially available for experimental
    or local use but should be used as an overflow pool if pool 1 is used up.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 通过正式标准化分配了32个推荐的代码点池（池1）；另外16个代码点池（池2）保留用于实验或本地使用；最后的16个代码点池（池3）最初用于实验或本地使用，但如果池1用完，应作为溢出池使用。
- en: The PHBs specify how packets should be forwarded. A default PHB denominated
    by an all-zeros DS codepoint must be provided by any DS router. The default PHB
    describes the common, best-effort forwarding behavior available in existing routers.
    Such packets are forwarded without adhering to any priority policy; in other words,
    the network will deliver as many of these packets as possible as soon as possible,
    based on existing resources such as memory or processing capacity. Packets received
    with an undefined codepoint should also be forwarded as though they were marked
    for the default behavior.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: PHB指定了数据包应该如何被转发。任何DS路由器必须提供一个由全零DS代码点表示的默认PHB。默认PHB描述了现有路由器中可用的普通最优转发行为。这类数据包在转发时不遵循任何优先级策略；换句话说，网络将尽可能尽快地交付这些数据包，基于现有资源，如内存或处理能力。收到未定义代码点的数据包也应按照默认行为转发。
- en: The DS field does not specify PHBs; it specifies codepoints. The number of codepoints
    is limited to 64, whereas the number of PHBs is unlimited. There are recommended
    mappings of codepoints to PHBs. These mappings can be defined individually within
    administrative domains, which makes the number of possible PHBs unlimited. The
    coding rules for PHB IDs are specified in RFC 3140, “Per Hop Behavior Identification
    Codes.”
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: DS字段不指定PHB；它指定的是代码点。代码点的数量限制为64个，而PHB的数量没有限制。已经推荐了代码点到PHB的映射。这些映射可以在管理域内单独定义，从而使得PHB的数量没有限制。PHB
    ID的编码规则在RFC 3140《每跳行为标识码》规范中进行了说明。
- en: RFC 2597 defines a PHB group called *Assured Forwarding (AF)*. Assured Forwarding
    PHB group is a means for a provider DS domain to offer different levels of forwarding
    assurances for IP packets received from a customer DS domain. Four AF classes
    are defined, where each AF class is in each DS node allocated a certain amount
    of forwarding resources (buffer space and bandwidth). IP packets that wish to
    use the services provided by the AF PHB group are assigned by the customer or
    the provider DS domain into one or more of these AF classes according to the services
    that the customer has subscribed to. RFC 3246 defines a PHB called *Expedited
    Forwarding (EF)*. The intent of the EF PHB is to provide a building block for
    low loss, low delay, and low jitter services.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 2597定义了一个名为*Assured Forwarding (AF)*的PHB组。Assured Forwarding PHB组是提供商DS域为来自客户DS域的IP数据包提供不同级别的转发保证的一种方式。定义了四个AF类，每个AF类在每个DS节点中分配了一定数量的转发资源（缓冲空间和带宽）。希望使用AF
    PHB组提供的服务的IP数据包，按客户或提供商DS域将其分配到这些AF类中的一个或多个，具体取决于客户订阅的服务。RFC 3246定义了一个名为*Expedited
    Forwarding (EF)*的PHB。EF PHB的目的是为低丢包、低延迟和低抖动服务提供构建模块。
- en: Note
  id: totrans-272
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Recommended codepoints and PHB IDs are assigned by IANA. The list of codepoints
    can be found at [http://www.iana.org/assignments/dscp-registry](http://www.iana.org/assignments/dscp-registry),
    and the list of PHB IDs at [http://www.iana.org/assignments/phbid-codes](http://www.iana.org/assignments/phbid-codes).
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐的代码点和 PHB ID 由 IANA 分配。代码点的列表可以在 [http://www.iana.org/assignments/dscp-registry](http://www.iana.org/assignments/dscp-registry)
    找到，PHB ID 的列表可以在 [http://www.iana.org/assignments/phbid-codes](http://www.iana.org/assignments/phbid-codes)
    找到。
- en: '[Figure 5-7](ch05.html#the_ds_field_in_a_trace_file "Figure 5-7. The DS field
    in a trace file") shows the DS field in a trace file.'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-7](ch05.html#the_ds_field_in_a_trace_file "图 5-7. 跟踪文件中的 DS 字段") 显示了跟踪文件中的
    DS 字段。'
- en: '![The DS field in a trace file](images/ipv6_0507.png.jpg)Figure 5-7. The DS
    field in a trace file'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '![跟踪文件中的 DS 字段](images/ipv6_0507.png.jpg)图 5-7. 跟踪文件中的 DS 字段'
- en: This is a RIPng (RIP Next Generation) Response from our router. It is sent to
    the RIP Routers Multicast address of `ff02::9`. The DS field is set to `0xE0`
    (decimal notation `224`, binary notation `1110 0000`).
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 这是来自我们路由器的 RIPng（RIP 下一代）响应。它被发送到 RIP 路由器组播地址 `ff02::9`。DS 字段被设置为 `0xE0`（十进制表示为
    `224`，二进制表示为 `1110 0000`）。
- en: The remaining two bits of the DS field (see [Figure 5-6](ch05.html#format_of_the_ds_field
    "Figure 5-6. Format of the DS field")) are not used according to RFC 2474, and
    are specified in RFC 3168, “The Addition of Explicit Congestion Notification (ECN)
    to IP.” They provide four possible codepoints (`00` to `11`) that are used for
    Congestion Notification. Traditionally the overload of a router could only be
    determined based on packet loss. With the use of these Congestion Notification
    codepoints, a router can signal overload before packet loss. This method is similar
    to Frame Relay’s use of BECNs and FECNs (Backwards and Forwards Explicit Congestion
    Notification, respectively).
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: DS 字段的其余两个比特（见 [图 5-6](ch05.html#format_of_the_ds_field "图 5-6. DS 字段的格式")）根据
    RFC 2474 没有被使用，并且在 RFC 3168 中进行了说明，“将显式拥塞通知（ECN）添加到 IP 中”。它们提供了四个可能的代码点（`00` 到
    `11`），用于拥塞通知。传统上，路由器的过载只能通过数据包丢失来确定。使用这些拥塞通知代码点后，路由器可以在数据包丢失之前就发出过载信号。这种方法类似于帧中继使用的
    BECN 和 FECN（分别为向后和向前显式拥塞通知）。
- en: 'The two bits are used as follows:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个比特的使用方式如下：
- en: '00: Packet does not use ECN.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 00：数据包未使用 ECN。
- en: '01/10: Sender and receiver are ECN-enabled.'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 01/10：发送方和接收方启用了 ECN。
- en: '11: Router signals congestion.'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 11：路由器信号表示拥塞。
- en: It should be mentioned that it has become more and more common that even cheaper
    switches can interpret the DSCP values and put packets in different queues as
    a consequence.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 应该提到的是，越来越多的廉价交换机也能够解释 DSCP 值，并因此将数据包放入不同的队列。
- en: Flow Label
  id: totrans-283
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 流标签
- en: The 20-bit Flow Label field in the IPv6 header may be used by a source to label
    packets for which it requests special handling by the IPv6 routers, such as nondefault
    QoS or real-time service. A flow label is assigned to a flow by the flow’s source
    node. Between a sender and a receiver, there can be multiple flows active in parallel,
    along with the exchange of packets with no QoS requirements. New flow labels must
    be chosen randomly from the range `00001` to `FFFFF`. The purpose of the random
    allocation is to make any combination of bits within the Flow Label field suitable
    for use as a hash key by routers for looking up the state associated with the
    flow.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: IPv6 头中的 20 位流标签字段可以由源节点用来标记数据包，要求 IPv6 路由器进行特殊处理，例如非默认 QoS 或实时服务。流标签由流的源节点分配。在发送方和接收方之间，可以并行存在多个流，同时交换没有
    QoS 要求的数据包。新的流标签必须在 `00001` 到 `FFFFF` 范围内随机选择。随机分配的目的是使流标签字段中的任意比特组合都适合作为哈希键，由路由器查找与该流相关联的状态。
- en: Hosts or routers that do not support the functions of the Flow Label field (most
    of today’s applications, which will not be modified to use the Flow Label, or
    which do not need QoS handling) are required to set the field to all zeros when
    sending a packet, to pass the field on unchanged when forwarding a packet, and
    to ignore the field content when receiving a packet.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 不支持流标签字段功能的主机或路由器（今天大多数应用程序不会修改以使用流标签，或不需要 QoS 处理）在发送数据包时需要将该字段设置为全零，在转发数据包时将字段内容保持不变，接收数据包时忽略该字段内容。
- en: All packets belonging to the same flow must be sent with the same IP Source
    address, IP Destination address, identical source and destination ports, and a
    nonzero flow label. If any of these packets includes a Hop-By-Hop Options header,
    they all must be originated with the same Hop-By-Hop Options header contents (excluding
    the Next Header field of the Hop-By-Hop Options header, which is allowed to differ).(((“Hop-by-Hop
    Options header”))) If any packet includes a Routing Extension header, they all
    must be created with the same contents in all Extension headers up to and including
    the Routing Extension header (again excluding the Next Header field in the Routing
    Extension header). The routers or receivers are allowed to verify that these conditions
    are satisfied. If a violation of these consistency rules is detected, a corresponding
    error message is returned, indicating the exact location of the rule violation.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 所有属于同一流的包必须使用相同的IP源地址、IP目标地址、相同的源端口和目标端口，以及非零的流标签。如果这些包中有任何一个包含了“逐跳选项头”（Hop-By-Hop
    Options header），它们必须都具有相同的逐跳选项头内容（不包括逐跳选项头中的下一头字段，该字段可以不同）。如果任何包中包含路由扩展头（Routing
    Extension header），那么它们必须在所有扩展头中，直到包括路由扩展头，都具有相同的内容（同样，不包括路由扩展头中的下一头字段）。路由器或接收方可以验证这些条件是否得到满足。如果发现这些一致性规则被违反，将返回相应的错误消息，指出规则违反的确切位置。
- en: The handling of the flow label on routers is efficient, and when IPsec is used,
    it is always available because the IPv6 header is not encrypted by ESP or authenticated
    by AH (in transport mode). This implies that the integrity of the information
    in the DS field cannot be guaranteed by IPsec.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器上对流标签的处理是高效的，且当使用IPsec时，它始终可用，因为IPv6头部不会被ESP加密或通过AH进行身份验证（在传输模式下）。这意味着IPsec无法保证DS字段中信息的完整性。
- en: RFC 6437, “IPv6 Flow Label Specification,” is a new specification of the Flow
    Label. A *flow* is defined as a sequence of packets from a sender to a specific
    unicast, anycast, or multicast address labeled as a flow by the sender. A flow
    is not necessarily associated with a transport connection. A host running multiple
    sessions with another host should be able to assign a different flow label to
    each session. Where the original specification defines a flow based on five criteria,
    the new specification defines a flow based on three criteria (Source and Destination
    address and Flow Label). The reason for this is that these three fields are always
    available for examination by routers, whereas the source and destination port
    number can be hidden by ESP.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 6437《IPv6流标签规范》是对流标签的新规范。*流*被定义为从发送方到特定的单播、任何播或多播地址的包序列，这些包由发送方标记为一个流。流不一定与传输连接相关联。运行多个会话的主机应能够为每个会话分配不同的流标签。原始规范基于五个标准定义了流，而新规范则基于三个标准（源和目标地址以及流标签）定义流。原因是这三个字段始终可以被路由器检查，而源端口和目标端口号则可能被ESP隐藏。
- en: The use of the Flow Label
  id: totrans-289
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 流标签的使用
- en: The Flow Label is the only new field in the IPv6 header. 20 Bits are set aside,
    but in practice it is not used. There was a lot of debate in the IETF about the
    best use of this label and, partially through these uncertainties and other more
    pressing priorities, it has been ignored by most vendors. RFC 6294, “Survey of
    Proposed Use Cases for the IPv6 Flow Label,” discusses the variety of proposals
    that have been published, and whether they are compatible with the existing standard.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 流标签是IPv6头部中唯一的新增字段。保留了20位，但实际上并未使用。在IETF中，关于如何最佳使用此标签曾有过很多争论，部分原因是这些不确定性以及其他更为紧迫的优先事项，导致大多数厂商忽视了它。RFC
    6294《IPv6流标签提案使用案例调查》讨论了已发布的各种提案，以及它们是否与现有标准兼容。
- en: In the meantime two specifications were published that offer alternative uses.
    RFC 7098, “Using the IPv6 Flow Label for Load Balancing in Server Farms,” describes
    how the flow label can be used for load balancing and how it can enhance layer
    3/4 load balancers. RFC 6438, “Using the IPv6 Flow Label for Equal Cost Multipath
    Routing and Link Aggregation in Tunnels,” describes how to use the flow label
    for load balancing by equal cost multipath routing and for link aggregation, particularly
    for IP-in-IPv6 tunneled traffic.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，发布了两项规范，提供了替代用途。RFC 7098《使用 IPv6 流标签进行服务器集群的负载均衡》描述了如何使用流标签进行负载均衡，以及它如何增强第
    3 层/第 4 层负载均衡器。RFC 6438《在隧道中使用 IPv6 流标签进行等成本多路径路由和链路聚合》描述了如何通过等成本多路径路由和链路聚合来使用流标签进行负载均衡，特别是针对
    IPv6 隧道流量的 IP-in-IPv6。 |
- en: IPv6 Extension header
  id: totrans-292
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: IPv6 扩展头部 |
- en: The Hop-By-Hop Options header can be used to transport a maximum of one router
    alert signaling message per IP packet (RFC 2711) to every router on the path of
    QoS-sensitive traffic, indicating that each router should specifically process
    the IP packet. The use of the Hop-By-Hop Options header allows fast processing
    by the router because no analysis of higher-level protocol headers is required.
    Routers that are unable to recognize the router alert option type are required
    to ignore this option and continue processing the header. Also, routers are not
    allowed to change the option while the packet is in transit. Router alert types
    that have been defined so far are shown in [Table 5-2](ch05.html#currently_defined_router_types
    "Table 5-2. Currently defined router types").
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: Hop-By-Hop Options 头部可用于每个 IP 数据包传输最多一个路由器警告信号消息（RFC 2711），发送给 QoS 敏感流量路径上的每个路由器，指示每个路由器应特别处理该
    IP 数据包。使用 Hop-By-Hop Options 头部使得路由器能够快速处理数据包，因为不需要分析更高层的协议头。无法识别路由器警告选项类型的路由器应忽略该选项并继续处理头部。此外，路由器在数据包传输过程中不得更改该选项。至今已定义的路由器警告类型列在[表
    5-2](ch05.html#currently_defined_router_types "表 5-2：当前已定义的路由器类型")中。 |
- en: Table 5-2. Currently defined router types
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 表 5-2：当前已定义的路由器类型 |
- en: '| Value | Description |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| 值 | 描述 |'
- en: '| --- | --- |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 0 | IP packet contains a Multicast Listener Discovery message. |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| 0 | IP 数据包包含多播监听器发现消息。 |'
- en: '| 1 | IP packet contains an RSVP message. |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| 1 | IP 数据包包含 RSVP 消息。 |'
- en: '| 2 | IP packet contains an Active Networks message—the sender is attempting
    to load a program into the router for executing customized functions. |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| 2 | IP 数据包包含活动网络消息——发送方正在尝试将程序加载到路由器中，以执行定制的功能。 |'
- en: '| 3–35 | IP packet contains an Aggregated Reservation Nesting Level (RFC 3175,
    RSVP). |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| 3–35 | IP 数据包包含聚合预留嵌套级别（RFC 3175，RSVP）。 |'
- en: '| 36–65,535 | Reserved to IANA for future use. |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| 36–65,535 | 保留给 IANA 用于未来使用。 |'
- en: Note
  id: totrans-302
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意 |
- en: A detailed description of these headers can be found in [Chapter 3](ch03.html
    "Chapter 3. The Structure of the IPv6 Protocol"). An updated list of router alert
    types can be found at [http://www.iana.org/assignments/ipv6-routeralert-values](http://www.iana.org/assignments/ipv6-routeralert-values).
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这些头部的详细描述可以在[第 3 章](ch03.html "第 3 章：IPv6 协议结构")中找到。有关路由器警告类型的最新列表，可以在[http://www.iana.org/assignments/ipv6-routeralert-values](http://www.iana.org/assignments/ipv6-routeralert-values)查看。
    |
- en: Provisioning
  id: totrans-304
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 |
- en: Two main network services are indispensable when it comes to operating an IP
    network, DHCPv6 for addressing systems and DNS for locating services. I expect
    DHCPv6 to be widely used in IPv6 enterprise networks, even though IPv6 provides
    SLAAC. The reason is that most organizations want to have the possibility to log
    and account for address use. This is not easily doable when using SLAAC. And when
    running IPv6 networks with the long addresses and even more while operating dual-stack
    networks and expecting applications running over both protocol versions to be
    accessible for all users, DNS becomes more important than ever.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 在操作 IP 网络时，有两项主要的网络服务是必不可少的，分别是用于系统地址分配的 DHCPv6 和用于定位服务的 DNS。我预计 DHCPv6 将在 IPv6
    企业网络中得到广泛应用，尽管 IPv6 提供了 SLAAC。原因在于，大多数组织希望能够记录和计算地址的使用情况，而使用 SLAAC 时这一点并不容易实现。而且，在运行具有长地址的
    IPv6 网络，尤其是在操作双栈网络并期望跨两个协议版本运行的应用能够供所有用户访问时，DNS 的重要性比以往任何时候都更为突出。 |
- en: DHCP
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DHCP |
- en: DHCP is widely used to configure hosts with their IPv4 addresses and additional
    information. If you have an IPv6 network, you do not need DHCP to configure your
    hosts with address information. The Stateless Address Autoconfiguration mechanism
    (SLAAC) will configure your hosts for their IPv6 addresses without the need to
    set up a DHCP server. All you need to do is configure your IPv6-enabled routers
    with the prefix information for the links to which they are attached. But you
    might still choose to have DHCP servers in many cases. Host configuration that
    includes the assignment of IPv6 addresses using DHCP is called *Stateful Address
    Autoconfiguration* or *Stateful DHCPv6*. Maybe you have a specific IPv6 addressing
    scheme; or you need dynamic assignment of DNS servers; or you wish to implement
    dynamic updates to DNS (RFC 2136); or you need traceability-reporting features
    for the use of your IP addresses. In these cases, you can use DHCP for address
    configuration. You can also combine SLAAC and DHCPv6 configuration by using SLAAC
    for the IPv6 address configuration and DHCP servers to provide additional configuration
    information including DNS server IP addresses, DNS domains, or other DHCPv6 options.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP 被广泛用于为主机配置其 IPv4 地址和附加信息。如果你拥有一个 IPv6 网络，则无需 DHCP 来配置主机的地址信息。无状态地址自动配置机制（SLAAC）将自动为主机配置其
    IPv6 地址，而无需设置 DHCP 服务器。你所需要做的只是为启用 IPv6 的路由器配置与其附加链接的前缀信息。但在许多情况下，你仍然可能选择使用 DHCP
    服务器。通过 DHCP 分配 IPv6 地址的主机配置称为*有状态地址自动配置*或*有状态 DHCPv6*。也许你有一个特定的 IPv6 地址分配方案；或者你需要动态分配
    DNS 服务器；或者你希望实现 DNS 动态更新（RFC 2136）；或者你需要为使用的 IP 地址提供可追溯性报告功能。在这些情况下，你可以使用 DHCP
    进行地址配置。你还可以通过使用 SLAAC 配置 IPv6 地址，并使用 DHCP 服务器提供附加的配置信息（包括 DNS 服务器 IP 地址、DNS 域名或其他
    DHCPv6 选项）来结合使用 SLAAC 和 DHCPv6 配置。
- en: RFC 3736 offers an additional configuration option. It defines a Stateless DHCP
    service for IPv6\. A Stateless DHCP server can configure hosts that already have
    an IP address with additional information such as DNS or SIP servers. It cannot
    do address assignment, though. Stateless DHCP is explained later in this chapter,
    after this section on Stateful DHCPv6.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 3736 提供了一个额外的配置选项。它定义了一个无状态 DHCP 服务用于 IPv6。无状态 DHCP 服务器可以为已经拥有 IP 地址的主机配置附加信息，如
    DNS 或 SIP 服务器，但无法进行地址分配。无状态 DHCP 在本章稍后会解释，紧接着有状态 DHCPv6 部分之后。
- en: DHCPv6 and DHCPv4 are independent. If you want to configure hosts with DHCP
    in a dual-stack network, currently you will need two separate DHCP services running,
    one for each protocol. In this case, you will also have to watch out for configuration
    conflicts. In the DHCPv4 world, the client is configured to know whether to use
    DHCP. In the DHCPv6 world, the Router Advertisement has options to inform the
    client whether to use DHCP. There may be differing configuration information arriving
    at the client from different sources, or a node may have multiple interfaces,
    e.g., one being IPv4-only and one being dual-stacked. DHCPv6 uses a unique identifier
    (DUID), which does not exist for DHCPv4\. In the realm of DHCPv4, MAC address
    and client ID resemble the DUID in DHCPv6 but are not synonymous. There is RFC
    4361, which makes the DUID available for DHCPv4.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: DHCPv6 和 DHCPv4 是独立的。如果你想在双栈网络中使用 DHCP 配置主机，目前需要运行两个独立的 DHCP 服务，每个协议一个。在这种情况下，你还必须注意配置冲突。在
    DHCPv4 环境中，客户端被配置为知道是否使用 DHCP。在 DHCPv6 环境中，路由器广告有选项通知客户端是否使用 DHCP。来自不同来源的配置信息可能会到达客户端，或者一个节点可能有多个接口，例如一个仅为
    IPv4，另一个为双栈。DHCPv6 使用唯一标识符（DUID），而 DHCPv4 中没有该标识符。在 DHCPv4 中，MAC 地址和客户端 ID 类似于
    DHCPv6 中的 DUID，但并不完全相同。RFC 4361 提供了一个使 DUID 在 DHCPv4 中可用的方案。
- en: In RFC 4477, the DHCP working group is further assessing requirements and evaluating
    solutions, which will allow dual-stack hosts to be configured for both protocols
    by one or more DHCP server. The RFC describes issues identified with dual IP version
    DHCP interactions. The most important aspect is how to handle potential problems
    in clients processing configuration information received from both DHCPv4 and
    DHCPv6 servers. It includes a possible solution that would be to specify IPv4
    options for DHCPv6 servers so that in a dual-stack environment you could run a
    DHCPv6 server and have it also configure IPv4 options for the dual-stack clients.
    In such a scenario, having DUIDs for DHCPv4 would be helpful.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在 RFC 4477 中，DHCP 工作组进一步评估了需求并评估了解决方案，这将允许双栈主机通过一个或多个 DHCP 服务器为两种协议进行配置。该 RFC
    描述了双 IP 版本 DHCP 交互中识别到的问题。最重要的方面是如何处理客户端处理从 DHCPv4 和 DHCPv6 服务器接收到的配置信息时可能出现的问题。它包括一个可能的解决方案，即为
    DHCPv6 服务器指定 IPv4 选项，以便在双栈环境中运行 DHCPv6 服务器，并让它也为双栈客户端配置 IPv4 选项。在这种情况下，拥有 DHCPv4
    的 DUID 会很有帮助。
- en: 'DHCPv6 is specified in RFC 3315\. All references in this chapter relate to
    DHCPv6\. For the development of DHCPv6, the following guidelines were originally
    defined:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: DHCPv6 在 RFC 3315 中进行了规范。本章中的所有引用都与 DHCPv6 相关。为了开发 DHCPv6，最初定义了以下指南：
- en: It must be possible to combine DHCP and SLAAC.
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须能够结合使用 DHCP 和 SLAAC。
- en: The configuration of DHCP and the interaction with other mechanisms (e.g., SLAAC)
    are the responsibility of the administrator.
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP 的配置及其与其他机制（例如 SLAAC）的交互是管理员的责任。
- en: The clients do not need to be configured manually.
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端不需要手动配置。
- en: DHCP must be able to configure multiple addresses per interface.
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP 必须能够为每个接口配置多个地址。
- en: A DHCP server is not needed in every subnet. Relay agents must be able to forward
    DHCP packets.
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每个子网中并不需要一个 DHCP 服务器。中继代理必须能够转发 DHCP 数据包。
- en: A client must be able to deal with multiple DHCP replies coming back from different
    DHCP servers.
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端必须能够处理来自不同 DHCP 服务器的多个 DHCP 回复。
- en: It must be possible to have subnets where only some of the clients are configured
    by DHCP.
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须能够拥有仅部分客户端通过 DHCP 配置的子网。
- en: DHCP must be able to do dynamic DNS updates to register allocated addresses
    in DNS. The administrator can decide to update DNS manually.
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP 必须能够进行动态 DNS 更新，以便将分配的地址注册到 DNS 中。管理员可以决定手动更新 DNS。
- en: DHCP must support and simplify the renumbering of a network.
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP 必须支持并简化网络的重新编号。
- en: The DHCPv6 specification includes authentication for DHCPv6 messages, which
    must be supported on the DHCPv6 client and server. Refer to the respective section
    on DHCPv6 authentication in this chapter.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: DHCPv6 规范包括对 DHCPv6 消息的认证，必须在 DHCPv6 客户端和服务器上支持。请参阅本章中关于 DHCPv6 认证的相关章节。
- en: DHCP Terms
  id: totrans-322
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DHCP 术语
- en: 'Let us define some common terms used for DHCPv6:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们定义一些用于 DHCPv6 的常见术语：
- en: '*DHCP Client*'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '*DHCP 客户端*'
- en: A DHCP client sends requests to a DHCP server to get configuration information.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP 客户端向 DHCP 服务器发送请求以获取配置信息。
- en: '*DHCP Server*'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '*DHCP 服务器*'
- en: A DHCP server is preconfigured to reply to client requests. It knows the configuration
    for each client. When it receives a client request, it sends the information back
    to the client. A DHCP server may or may not be on the same link as the client.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP 服务器预先配置以响应客户端请求。它知道每个客户端的配置。当它接收到客户端请求时，它将信息发送回客户端。DHCP 服务器可能位于与客户端相同的链路上，也可能不在。
- en: '*DHCP Relay Agent*'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '*DHCP 中继代理*'
- en: If there is no DHCP server on the client link, a relay agent must be configured
    on the client link. The relay agent receives the client request and forwards it
    to one or more DHCP server(s) on another subnet. When the relay agent receives
    the answer from the DHCP server, it forwards it to the client.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户端链路上没有 DHCP 服务器，则必须在客户端链路上配置中继代理。中继代理接收客户端请求并将其转发到另一个子网中的一个或多个 DHCP 服务器。当中继代理从
    DHCP 服务器收到回答时，它会将其转发给客户端。
- en: '*DHCP Unique Identifier (DUID)*'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '*DHCP 唯一标识符 (DUID)*'
- en: Each DHCP client and server has a DUID. DHCP servers use DUIDs to identify clients
    for the selection of configuration parameters and in the association of IAs (see
    below) with clients. DHCP clients use DUIDs to identify a server in messages where
    a server needs to be identified.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 DHCP 客户端和服务器都有一个 DUID。DHCP 服务器使用 DUID 来识别客户端，以便选择配置参数并将 IA（见下文）与客户端关联。DHCP
    客户端在需要识别服务器的消息中使用 DUID 来标识服务器。
- en: '*Identity Association (IA)*'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '*身份关联 (IA)*'
- en: A collection of addresses assigned to a client. Each IA has an associated Identity
    Association Identifier (IAID), which is assigned by the client. A client can have
    multiple IAs—for example, one for each interface.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 分配给客户端的一组地址。每个IA有一个与之关联的身份关联标识符（IAID），由客户端分配。客户端可以有多个IA——例如，每个接口一个IA。
- en: '*Identity Association Identifier (IAID)*'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '*身份关联标识符（IAID）*'
- en: An identifier for an IA chosen by the client. Each IA has an IAID, which is
    chosen to be unique among all IAIDs for IAs belonging to that client.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端选择的IA标识符。每个IA都有一个IAID，IAID被选择为在该客户端的所有IA中唯一。
- en: '*Transaction ID*'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '*事务ID*'
- en: A value used to match requests and replies.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 用于匹配请求和回复的值。
- en: 'DHCP uses the following multicast addresses:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP使用以下多播地址：
- en: '*All_DHCP_Relay_Agents_and_Servers* (`ff02::1:2`)'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '*所有_DHCP_中继代理和服务器* (`ff02::1:2`)'
- en: All DHCP agents (servers and relays) are members of this multicast group. DHCP
    clients use this link-scoped multicast address to reach DHCP agents on their link.
    So clients do not need to know the agent’s link-local address.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 所有DHCP代理（服务器和中继）都是该多播组的成员。DHCP客户端使用这个链接范围的多播地址来联系它们的链接上的DHCP代理。因此，客户端不需要知道代理的链路本地地址。
- en: '*All_DHCP_Servers address* (`ff05::1:3`)'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '*所有_DHCP_服务器地址* (`ff05::1:3`)'
- en: All DHCP servers within a site are members of this multicast group. This site-scoped
    address is used by DHCP relays to reach all DHCP servers within a site. They either
    do not know the server’s unicast address, or they want to reach all DHCP servers
    within the site.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 站点内的所有DHCP服务器都是该多播组的成员。这个站点范围的地址由DHCP中继用来联系站点内的所有DHCP服务器。它们要么不知道服务器的单播地址，要么希望联系站点内的所有DHCP服务器。
- en: 'The following UDP ports are used with DHCPv6:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 以下UDP端口用于DHCPv6：
- en: '*UDP port 546—Client port*'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '*UDP端口 546—客户端端口*'
- en: Clients listen on port 546 for DHCP messages. DHCP servers and relays use it
    as the destination port to reach DHCP clients.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端监听端口546以接收DHCP消息。DHCP服务器和中继使用该端口作为目标端口来联系DHCP客户端。
- en: '*UDP port 547—Server/Agent por*'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '*UDP端口 547—服务器/代理端口*'
- en: DHCP servers and relays listen on port 547 for DHCP messages. DHCP clients use
    this port as the destination port to reach DHCP servers and relay agents. DHCP
    relays use this port as the destination port to reach DHCP servers.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP服务器和中继监听端口547以接收DHCP消息。DHCP客户端使用该端口作为目标端口来联系DHCP服务器和中继代理。DHCP中继使用该端口作为目标端口来联系DHCP服务器。
- en: The message types shown in [Table 5-3](ch05.html#dhcpv6_message_types "Table 5-3. DHCPv6
    message types") have been specified in RFC 3315.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 如[表5-3](ch05.html#dhcpv6_message_types "表5-3. DHCPv6消息类型")所示的消息类型已经在RFC 3315中定义。
- en: Table 5-3. DHCPv6 message types
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 表5-3. DHCPv6消息类型
- en: '| Message type | Description |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| 消息类型 | 描述 |'
- en: '| --- | --- |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| SOLICIT (1) | Used by clients to locate DHCP servers. |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '| SOLICIT (1) | 客户端用来查找DHCP服务器。 |'
- en: '| ADVERTISE (2) | Used by servers as a response to Solicit. |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
  zh: '| ADVERTISE (2) | 服务器对Solicit消息的响应。 |'
- en: '| REQUEST (3) | Used by clients to get information from servers. |'
  id: totrans-354
  prefs: []
  type: TYPE_TB
  zh: '| REQUEST (3) | 客户端用来从服务器获取信息。 |'
- en: '| CONFIRM (4) | Used by clients to verify that their address and configuration
    parameters are still valid for their link. |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
  zh: '| CONFIRM (4) | 客户端用来验证其地址和配置参数是否仍然有效。 |'
- en: '| RENEW (5) | Used by clients to extend the lifetime of their IP address and
    renew their configuration parameters with their original DHCP server when their
    lease is about to expire. |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
  zh: '| RENEW (5) | 客户端用来延长其IP地址的有效期并与原DHCP服务器续订其配置参数，尤其是在租约即将到期时。 |'
- en: '| REBIND (6) | Used by clients to extend the lifetime of their address(es)
    and renew their configuration parameters with any DHCP server when their lease
    is about to expire and they have not received a reply to their Renew message.
    |'
  id: totrans-357
  prefs: []
  type: TYPE_TB
  zh: '| REBIND (6) | 客户端用来在租约即将到期且未收到Renew消息回复时，延长地址的有效期并与任何DHCP服务器续订其配置参数。 |'
- en: '| REPLY (7) | Used by DHCP servers to respond to Solicit messages with a Rapid
    Commit Option, as well as to Request, Renew, and Rebind messages. A Reply to an
    Information Request message contains only configuration parameters, but no IP
    address. A Reply to a Confirm message contains a confirmation that the client’s
    IP address(es) are still valid for the link (or a Decline). A server sends a Reply
    as an acknowledgment for a Release or Decline message. |'
  id: totrans-358
  prefs: []
  type: TYPE_TB
  zh: '| REPLY (7) | DHCP服务器用来回应Solicit消息（带有快速提交选项），以及回应Request、Renew和Rebind消息。回应信息请求消息时仅包含配置参数，但不包括IP地址。回应确认消息时，包含客户端IP地址是否仍然有效的确认信息（或拒绝信息）。服务器向Release或Decline消息发送回应以确认。
    |'
- en: '| RELEASE (8) | Used by clients to release their IP address. The message is
    sent to the server from which the address was received. |'
  id: totrans-359
  prefs: []
  type: TYPE_TB
  zh: '| RELEASE (8) | 由客户端用于释放其IP地址。该消息发送到客户端接收地址的服务器。 |'
- en: '| DECLINE (9) | Used by clients to indicate to the server that one or more
    addresses assigned to them are already in use on the link. This is determined
    by the client through Duplicate Address Detection (DAD). |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
  zh: '| DECLINE (9) | 由客户端用于向服务器指示其分配的一个或多个地址在链路上已被占用。客户端通过重复地址检测（DAD）来确定这一点。 |'
- en: '| RECONFIGURE (10) | Used by DHCP servers to inform clients that the server
    has new or updated configuration information. The clients then must initiate a
    Renew or Information Request message in order to obtain the updated information.
    |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| RECONFIGURE (10) | 由DHCP服务器用于通知客户端服务器有新的或更新的配置信息。客户端必须启动续租或信息请求消息，以获取更新的信息。
    |'
- en: '| INFORMATION REQUEST (11) | Sent by clients to request additional configuration
    parameters (without IP address information). |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '| INFORMATION REQUEST (11) | 由客户端发送，要求额外的配置参数（不包括IP地址信息）。 |'
- en: '| RELAY-FORW (12) | Used by DHCP relays to forward client messages to servers.
    The relay encapsulates the client message in an option in the Relay Forward message.
    The message can be sent directly to a DHCP server or via other relay agents. If
    a DHCP message is relayed multiple times, it is encapsulated multiple times. |'
  id: totrans-363
  prefs: []
  type: TYPE_TB
  zh: '| RELAY-FORW (12) | 由DHCP中继用于将客户端消息转发到服务器。中继将客户端消息封装在中继转发消息的一个选项中。该消息可以直接发送到DHCP服务器，或者通过其他中继代理发送。如果DHCP消息被多次中继，则会多次封装。
    |'
- en: '| RELAY-REPL (13) | Used by DHCP servers to send messages to clients through
    a relay. The client message is encapsulated as an option in the Relay Reply message.
    The relay decapsulates the message and forwards it to the client. The Relay Reply
    message takes the same path back through which the Relay Forward message traveled
    and may therefore also be encapsulated multiple times if there is more than one
    relay agent on the path. |'
  id: totrans-364
  prefs: []
  type: TYPE_TB
  zh: '| RELAY-REPL (13) | 由DHCP服务器通过中继向客户端发送消息。客户端消息作为选项封装在中继回复消息中。中继解封装消息并将其转发给客户端。中继回复消息沿着中继转发消息的路径返回，因此，如果路径上有多个中继代理，它也可能被多次封装。
    |'
- en: The DHCP server-initiated configuration exchange is a great new feature. It
    can be used, for example, when links in the DHCP domain have to be renumbered
    or when new services or applications have been added and need to be configured
    on the clients. When services or applications need to be configured on the client,
    the DHCP server sends out a Reconfigure message (type 10) to the unicast address
    of each client. A client receiving this message must initiate a Renew or Information
    Request message exchange to get the updated information. Haven’t we been waiting
    for this? This is an IPv6 implementation feature that solves a long-standing problem
    we had with DHCPv4\. It can be done with DHCPv4, but it has rarely been implemented.
    The IPv4 way of doing this is defined in RFC 3203\. A DHCPv4 server sends a DHCPforcerenew
    message, which triggers the client to the Renew state in which it tries to renew
    its lease.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 由DHCP服务器发起的配置交换是一个非常好的新特性。例如，当DHCP域中的链路需要重新编号，或当新增服务或应用程序需要在客户端配置时，可以使用该功能。当服务或应用程序需要在客户端配置时，DHCP服务器会向每个客户端的单播地址发送一个重新配置消息（类型10）。接收到该消息的客户端必须发起续租或信息请求消息交换，以获取更新的信息。我们不是一直在等待这个吗？这是IPv6的实现特性，解决了我们在DHCPv4中遇到的一个长期存在的问题。尽管在DHCPv4中也可以做到这一点，但它很少被实现。IPv4实现方式在RFC
    3203中有定义。DHCPv4服务器发送一个DHCPforcerenew消息，触发客户端进入续租状态，在该状态下客户端尝试续租其租约。
- en: DHCPv6 header format
  id: totrans-366
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DHCPv6头部格式
- en: The general DHCPv6 header format is much simpler than the one used with DHCPv4\.
    I describe it next.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 一般的DHCPv6头部格式比DHCPv4使用的格式简单得多。接下来我将描述它。
- en: Client-server messages
  id: totrans-368
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 客户端-服务器消息
- en: All DHCP messages exchanged between server and client have a fixed header with
    a variable part for options.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 所有客户端与服务器之间交换的DHCP消息都具有固定头部，选项部分则是可变的。
- en: '[Figure 5-8](ch05.html#format_of_the_dhcp_header "Figure 5-8. Format of the
    DHCP header") shows the header format.'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '[图5-8](ch05.html#format_of_the_dhcp_header "图5-8. DHCP头部格式")显示了头部格式。'
- en: '![Format of the DHCP header](images/ipv6_0508.png)Figure 5-8. Format of the
    DHCP header'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '![DHCP头部格式](images/ipv6_0508.png)图5-8. DHCP头部格式'
- en: The Message Type field defines the type of message. You saw the list of message
    types in [Table 5-3](ch05.html#dhcpv6_message_types "Table 5-3. DHCPv6 message
    types"). For each request, the client generates a new transaction ID and writes
    it into the Transaction ID field. It is used in all messages relating to this
    specific request. When troubleshooting DHCP, it is important to check the transaction
    ID and make sure to associate the corresponding requests and replies.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 消息类型字段定义了消息的类型。你可以在[表 5-3](ch05.html#dhcpv6_message_types "表 5-3. DHCPv6 消息类型")中看到消息类型的列表。对于每个请求，客户端会生成一个新的事务
    ID，并将其写入事务 ID 字段。它用于与该特定请求相关的所有消息。在排查 DHCP 问题时，检查事务 ID 并确保将对应的请求和回复关联起来是非常重要的。
- en: Options are used to provide configuration information and parameters. The options
    fields have an identical base format, which is shown in [Figure 5-9](ch05.html#dhcp_option_fields
    "Figure 5-9. DHCP option fields").
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 选项用于提供配置信息和参数。选项字段具有相同的基础格式，如[图 5-9](ch05.html#dhcp_option_fields "图 5-9. DHCP
    选项字段")所示。
- en: '![DHCP option fields](images/ipv6_0509.png)Figure 5-9. DHCP option fields'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '![DHCP 选项字段](images/ipv6_0509.png)图 5-9. DHCP 选项字段'
- en: The *Option Code field* defines the type of the option. Find an overview of
    the available option types in [Table 5-4](ch05.html#dhcp_options "Table 5-4. DHCP
    options"). The *Option Length field* indicates the length of the option in bytes.
    The *Option Data field* finally contains the information configured for the option.
    Its format and length varies depending on the option type.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '*选项代码字段*定义了选项的类型。可以在[表 5-4](ch05.html#dhcp_options "表 5-4. DHCP 选项")中找到可用选项类型的概览。*选项长度字段*指示选项的字节长度。*选项数据字段*最终包含为该选项配置的信息。其格式和长度根据选项类型的不同而变化。'
- en: The options defined in RFC 3315 are a base set of options. In the future, additional
    options will be defined and specified in separate RFCs. [Table 5-4](ch05.html#dhcp_options
    "Table 5-4. DHCP options") shows an overview.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 3315 中定义的选项是一个基础选项集。未来将定义并在单独的 RFC 中指定额外的选项。[表 5-4](ch05.html#dhcp_options
    "表 5-4. DHCP 选项")显示了一个概览。
- en: Table 5-4. DHCP options
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 表 5-4. DHCP 选项
- en: '| Option | Value | Description |'
  id: totrans-378
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 值 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Client Identifier | 1 | Used for the client DUID. A DUID is a unique identifier
    (described later in this chapter). |'
  id: totrans-380
  prefs: []
  type: TYPE_TB
  zh: '| 客户端标识符 | 1 | 用于客户端的 DUID。DUID 是一个唯一标识符（在本章稍后描述）。 |'
- en: '| Server Identifier | 2 | Used for the server DUID. |'
  id: totrans-381
  prefs: []
  type: TYPE_TB
  zh: '| 服务器标识符 | 2 | 用于服务器的 DUID。 |'
- en: '| Identity Association for Nontemporary Addresses (IA_NA) | 3 | Used to indicate
    the IA_NA, the parameters, and the nontemporary addresses associated with it.
    |'
  id: totrans-382
  prefs: []
  type: TYPE_TB
  zh: '| 非临时地址身份关联（IA_NA） | 3 | 用于指示 IA_NA、其参数及与之关联的非临时地址。 |'
- en: '| Identity Association for Temporary Addresses (IA_TA) | 4 | Used to indicate
    the IA_TA, the parameters, and the temporary addresses associated to it. All addresses
    contained in this option are used as temporary addresses by the client (according
    to RFC 3041, “Privacy Extensions for Stateless Address Autoconfiguration”). |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
  zh: '| 临时地址身份关联（IA_TA） | 4 | 用于指示 IA_TA、其相关参数及临时地址。此选项中包含的所有地址都被客户端用作临时地址（根据 RFC
    3041《无状态地址自动配置的隐私扩展》）。 |'
- en: '| IA Address | 5 | Used to indicate the addresses associated with an IA_NA
    or IA_TA. |'
  id: totrans-384
  prefs: []
  type: TYPE_TB
  zh: '| IA 地址 | 5 | 用于指示与 IA_NA 或 IA_TA 关联的地址。 |'
- en: '| Option Request | 6 | Used in a message between client and server to identify
    a list of options. Can be contained in a Request, Renew, Rebind, Confirm, or Information
    Request message. The server can use this option in a Reconfigure message to indicate
    which options have been changed or added. |'
  id: totrans-385
  prefs: []
  type: TYPE_TB
  zh: '| 选项请求 | 6 | 用于客户端与服务器之间的消息，以标识一组选项列表。可以包含在请求、续约、重绑定、确认或信息请求消息中。服务器可以在重配置消息中使用此选项来指示哪些选项已更改或添加。
    |'
- en: '| Preference | 7 | Sent by the server to influence the choice of a client for
    a DHCP server. |'
  id: totrans-386
  prefs: []
  type: TYPE_TB
  zh: '| 优先级 | 7 | 由服务器发送，用于影响客户端选择 DHCP 服务器。 |'
- en: '| Elapsed Time | 8 | Contains the time when the client started the DHCP transaction.
    Indicated in hundredths of a second. In the first message sent by a client it
    is set to `0`. Can be used by a secondary DHCP server to detect whether a primary
    server responds in time. |'
  id: totrans-387
  prefs: []
  type: TYPE_TB
  zh: '| 经过时间 | 8 | 包含客户端启动 DHCP 事务的时间。以百分之一秒为单位。在客户端发送的第一条消息中，设置为 `0`。可以被第二级 DHCP
    服务器用于检测主服务器是否及时响应。 |'
- en: '| Relay Message | 9 | Contains the original message in a Relay Forward or Relay
    Reply message (remember that the original message is encapsulated in a Relay Forward
    or Reply message). |'
  id: totrans-388
  prefs: []
  type: TYPE_TB
  zh: '| 中继消息 | 9 | 包含中继转发或中继回复消息中的原始消息（请记住，原始消息已封装在中继转发或回复消息中）。 |'
- en: '| Authentication | 11 | Contains information to authenticate the identity and
    the content of DHCP messages. |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '| 认证 | 11 | 包含用于验证DHCP消息的身份和内容的信息。 |'
- en: '| Server Unicast | 12 | The server sends this option to the client to indicate
    that unicast can be used for communication. The option contains the IP address
    of the DHCP server, which is to be used by the client. |'
  id: totrans-390
  prefs: []
  type: TYPE_TB
  zh: '| 服务器单播 | 12 | 服务器向客户端发送此选项，以指示可以使用单播进行通信。该选项包含DHCP服务器的IP地址，客户端将使用该地址。 |'
- en: Note
  id: totrans-391
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find an updated list of all defined DHCPv6 options at [http://bit.ly/1na92Wj](http://bit.ly/1na92Wj).
    For general DHCP information refer to the DHCP working group at [http://www.ietf.org/html.charters/dhc-charter.html](http://www.ietf.org/html.charters/dhc-charter.html).
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[http://bit.ly/1na92Wj](http://bit.ly/1na92Wj)找到所有已定义的DHCPv6选项的更新列表。有关一般的DHCP信息，请参考DHCP工作组的页面：[http://www.ietf.org/html.charters/dhc-charter.html](http://www.ietf.org/html.charters/dhc-charter.html)。
- en: Relay Agent—server message format
  id: totrans-393
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 中继代理—服务器消息格式
- en: Relay Agents forward client and server messages if the two are not on the same
    link. A DHCP message can be forwarded by more than one Relay Agent to one or more
    server(s). The reply by the server has to follow the same path back through which
    the original request came in, and it has to be forwarded by the same Relay Agents.
    [Figure 5-10](ch05.html#header_fields_in_relay_agent_and_server "Figure 5-10. Header
    fields in Relay Agent and server messages") shows the header fields in the Relay
    Agent and server messages.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户端和服务器不在同一链路上，中继代理将转发客户端和服务器消息。一个DHCP消息可以被多个中继代理转发给一个或多个服务器。服务器的回复必须遵循原始请求的返回路径，并且必须由相同的中继代理转发。[图
    5-10](ch05.html#header_fields_in_relay_agent_and_server "图 5-10. 中继代理和服务器消息中的头字段")显示了中继代理和服务器消息中的头字段。
- en: '![Header fields in Relay Agent and server messages](images/ipv6_0510.png)Figure 5-10. Header
    fields in Relay Agent and server messages'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '![中继代理和服务器消息中的头字段](images/ipv6_0510.png)图 5-10. 中继代理和服务器消息中的头字段'
- en: Relay Forward and Relay Reply messages have the same format and are identified
    by the value in the *Message Type field*. Type 12 is a Relay Forward message,
    type 13 a Relay Reply message.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 中继转发和中继回复消息具有相同的格式，并通过*消息类型字段*中的值来标识。类型12是中继转发消息，类型13是中继回复消息。
- en: The *Hop Count field* in a Relay Forward message shows how many Relays have
    already forwarded this message. Each forwarding Relay increases the value by one.
    The Relay can be preconfigured with a Hop Count Limit to limit the number of Relays
    that forward the message. When a Relay receives a message in which the Hop Count
    has reached the value configured in the Hop Count Limit, it discards the message.
    The default value for the Hop Count Limit is 32\. In a Relay Reply message, the
    Hop Count field value is taken from the Hop Count field in the corresponding Relay
    Forward message.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 中继转发消息中的*跳数字段*显示消息已被多少个中继转发。每个转发的中继都会将值增加1。中继可以预配置跳数限制，以限制转发消息的中继数量。当中继收到的消息中跳数已经达到配置的跳数限制时，它会丢弃该消息。跳数限制的默认值为32。在中继回复消息中，跳数字段的值取自相应的中继转发消息中的跳数字段。
- en: The *Link Address field* contains a global IPv6 address. Based on this field
    in a Relay Forward message, the server can identify the link where the requesting
    client sits. The RFC also mentions the site-local address as a possible value
    for this field because the DHCPv6 RFC was published before the site-local address
    was deprecated. In a Relay Reply message, the value in this field is taken from
    the corresponding Relay Forward message.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '*链路地址字段*包含一个全局IPv6地址。基于中继转发消息中的这个字段，服务器可以识别请求客户端所在的链路。RFC还提到，站点本地地址作为该字段的可能值，因为DHCPv6
    RFC在站点本地地址被弃用之前就已发布。在中继回复消息中，该字段的值取自相应的中继转发消息。'
- en: The *Peer Address field* contains the address of the client or the Relay from
    which the message was received. This field is copied from the Relay Forward message
    into the corresponding field in the Relay Reply message.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '*对端地址字段*包含接收消息的客户端或中继的地址。该字段从中继转发消息复制到中继回复消息中的相应字段。'
- en: The variable size *Options field* contains a Relay Message Option (option type
    9). In a Relay Forward message, it contains the client request; in a Relay Reply
    message, it contains the server reply.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 可变大小的*选项字段*包含一个中继消息选项（选项类型 9）。在中继转发消息中，它包含客户端请求；在中继回复消息中，它包含服务器回复。
- en: This field can also contain additional information that can be preconfigured
    on Relay Agents and that they insert when forwarding the message. This is specified
    in RFC 6422, “Relay-Supplied DHCP Options.” It is described in the section [Relay
    Agent communication](ch05.html#relay_agent_communication "Relay Agent communication").
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 该字段还可以包含中继代理上预先配置的附加信息，且它们在转发消息时插入这些信息。这在 RFC 6422 中有说明，“中继提供的 DHCP 选项”。此内容在[中继代理通信](ch05.html#relay_agent_communication
    "中继代理通信")部分进行了描述。
- en: DHCP Unique Identifier (DUID)
  id: totrans-402
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DHCP 唯一标识符（DUID）
- en: 'Each DHCP client and server has a DHCP Unique Identifier (DUID) that is used
    to identify each other. A server uses the client DUID to choose the corresponding
    client configuration to be sent. The DUID has to be unique across all servers
    and clients and should not be changed after initial assignment. RFC 3315 specifies
    three different types of DUIDs. Additional types may be specified in the future.
    A DUID contains a 2-byte type code followed by a variable number of bytes containing
    the identifier. The three types specified currently are as follows:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 DHCP 客户端和服务器都有一个 DHCP 唯一标识符（DUID），用于彼此识别。服务器使用客户端的 DUID 选择要发送的相应客户端配置。DUID
    必须在所有服务器和客户端中是唯一的，且在初始分配后不应更改。RFC 3315 定义了三种不同类型的 DUID，未来可能会定义其他类型。DUID 包含一个 2
    字节类型代码，后跟一个可变长度的字节序列，表示标识符。目前指定的三种类型如下：
- en: Link-layer address plus time (DUID-LLT)
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 链路层地址加时间（DUID-LLT）
- en: Vendor-specific unique ID based on enterprise number (DUID-EN)
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于企业编号的供应商唯一 ID（DUID-EN）
- en: Link-layer address (DUID-LL)
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 链路层地址（DUID-LL）
- en: Identity Association
  id: totrans-407
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 身份关联
- en: An *Identity Association* (IA) is an object used by the server and the client
    to identify and manage a group of addresses. Each IA is identified by a corresponding
    IAID and contains individual configuration information. A client has at least
    one IA per interface, which is to be configured by a DHCP server. The client uses
    the IA to get the right configuration for the interface from the server. Each
    IA has to be associated to only one interface. It is the client that chooses the
    IAID, and it must be unique among all IAIDs for IAs belonging to that client.
    The configuration information of an IA contains one or more IPv6 addresses plus
    the T1/T2 timers (Renewal and Rebinding timers, explained in [Renew/Rebind](ch05.html#renew_solidus_rebind
    "Renew/Rebind")).
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '*身份关联*（IA）是客户端和服务器用于标识和管理一组地址的对象。每个 IA 都有一个相应的 IAID 并包含单独的配置信息。每个客户端在每个接口上至少有一个
    IA，由 DHCP 服务器进行配置。客户端通过 IA 从服务器获取适合该接口的配置。每个 IA 只能与一个接口关联。IAID 由客户端选择，并且在该客户端的所有
    IA 中必须是唯一的。IA 的配置信息包含一个或多个 IPv6 地址以及 T1/T2 定时器（续租和重新绑定定时器，详见[续租/重新绑定](ch05.html#renew_solidus_rebind
    "续租/重新绑定")）。'
- en: 'A DHCP server chooses the configuration information for the IA according to
    the address allocation policies defined by the administrator. It chooses the configuration
    based on the following criteria:'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP 服务器根据管理员定义的地址分配策略选择 IA 的配置信息。它根据以下标准选择配置：
- en: The link to which the client is connected
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端连接的链路
- en: The DUID of the client
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端的 DUID
- en: Other information provided by the options from the client
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端提供的其他信息来自选项
- en: Other information taken from the options, which have been added by Relay Agents
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他信息来自选项，这些选项已由中继代理添加
- en: DHCP communication
  id: totrans-414
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DHCP 通信
- en: There are different processes in the DHCP communication. There is the client-server
    interaction and the forwarding of messages over Relay Agents. The following sections
    describe these processes in more detail. Many processes are similar to DHCPv4,
    differing only in IPv6-related adaptation. Other processes are new—for instance,
    the way messages are forwarded over Relay Agents.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP 通信中有不同的过程。包括客户端-服务器交互和通过中继代理转发消息。以下各节将更详细地描述这些过程。许多过程与 DHCPv4 相似，仅在 IPv6
    相关的适配上有所不同。其他过程是新的，例如消息通过中继代理转发的方式。
- en: Client and server communication
  id: totrans-416
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 客户端与服务器的通信
- en: A client uses multicast Solicit messages to find a DHCP server. If a client
    wishes to contact a specific DHCP server, it uses the server DUID in a Server
    Identifier Option (option type 2). All DHCP servers will receive this message,
    but only the server specified by the DUID will reply. In some cases, a client
    can use a unicast address to reach a specific server. This is possible only if
    the server is configured to send a Server Unicast Option (option type 12) indicating
    that unicast communication is possible and stating the IP address to be used.
    In this case, it has to be considered that these unicast messages will not be
    forwarded over Relay Agents, so any additional configuration done on the Relay
    Agent will not be inserted into the unicast DHCP messages. If a DHCP server receives
    a unicast message from a client to which it has not sent the Unicast option, it
    replies with a Reply message containing the Status Code “use multicast” (option
    13, code 5).
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端使用多播 Solicit 消息来查找 DHCP 服务器。如果客户端希望联系特定的 DHCP 服务器，它使用服务器 DUID 在 Server Identifier
    选项（选项类型 2）中指定。所有 DHCP 服务器都会接收到该消息，但只有由 DUID 指定的服务器会作出回复。在某些情况下，客户端可以使用单播地址与特定服务器建立联系。只有当服务器被配置为发送
    Server Unicast 选项（选项类型 12），并指示可以进行单播通信及要使用的 IP 地址时，这才可能。在这种情况下，必须注意，这些单播消息不会通过中继代理转发，因此在中继代理上进行的任何额外配置都不会插入到单播
    DHCP 消息中。如果 DHCP 服务器收到来自客户端的单播消息，而该客户端未收到单播选项，它将回复一个包含状态码“使用多播”（选项 13，代码 5）的 Reply
    消息。
- en: 'The client receives one or more Advertise messages in answer to its Solicit
    message. If it receives more than one, it applies the following criteria to choose
    a DHCP server:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端收到一个或多个 Advertise 消息作为对其 Solicit 消息的答复。如果收到多个，它会应用以下标准来选择 DHCP 服务器：
- en: The message with the highest Server Preference value is preferred.
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首选具有最高服务器首选值的消息。
- en: If there are several messages with an equal Server Preference value, it chooses
    the one with the preferred configuration.
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有多个具有相同服务器首选值的消息，它将选择具有优选配置的消息。
- en: The client may also choose a message with a lower Server Preference value if
    it contains more appropriate configuration parameters.
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果包含更合适的配置参数，客户端也可能选择首选服务器偏好值较低的消息。
- en: The list of servers and their corresponding Preference values are stored at
    the client. Should it not receive replies from its preferred DHCP server, it will
    choose the next one in the list. If a client does not receive an answer from a
    DHCP server within a certain amount of time, it either initiates a new Discovery
    process by sending out another Solicit message or ends the configuration and creates
    an error message.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器列表及其对应的首选项值存储在客户端。如果客户端没有从其首选的 DHCP 服务器收到回复，它将选择列表中的下一个服务器。如果客户端在一定时间内没有收到
    DHCP 服务器的答复，它要么通过发送另一个 Solicit 消息来启动新的发现过程，要么结束配置并生成错误消息。
- en: In reply to the Advertise message, the client sends a Request message to one
    of the DHCP servers including its IA Option, its client DUID, and an Option Request
    option, which contains the desired DHCP options. The server replies with a Reply
    message containing the requested options. If the server received the Request forwarded
    by a Relay Agent in a Relay Forward message, it will reply with a Relay Reply
    message forwarded over the same Relay Agents like the incoming Request message.
    The server flags the addresses given out in the Reply message as allocated. If
    the client receives multiple Replies, it chooses the most appropriate one and
    uses these addresses. The addresses allocated by other servers through their Advertise
    messages remain allocated but are not used. They will be reused by the DHCP server
    when their lifetimes have expired.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 在回复 Advertise 消息时，客户端向其中一个 DHCP 服务器发送 Request 消息，包括其 IA 选项、客户端 DUID 和 Option
    Request 选项，其中包含所需的 DHCP 选项。服务器以包含请求选项的 Reply 消息作出回复。如果服务器收到通过中继代理转发的 Request 消息（在
    Relay Forward 消息中），它将通过与传入 Request 消息相同的中继代理转发一个 Relay Reply 消息。服务器会将 Reply 消息中分配的地址标记为已分配。如果客户端收到多个
    Reply，它会选择最合适的一个，并使用这些地址。其他服务器通过其 Advertise 消息分配的地址仍然保持分配状态，但不会被使用。当这些地址的有效期过期后，它们将由
    DHCP 服务器重新使用。
- en: The client has to perform Duplicate Address Detection (DAD) for each address
    allocated by the DHCP server.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端必须对每个由 DHCP 服务器分配的地址执行重复地址检测（DAD）。
- en: Note
  id: totrans-425
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For an explanation of DAD, refer to the section [Neighbor Discovery](ch04.html#neighbor_discovery
    "Neighbor Discovery") in [Chapter 4](ch04.html "Chapter 4. ICMPv6").
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 有关DAD的解释，请参阅[邻居发现（Neighbor Discovery）](ch04.html#neighbor_discovery "Neighbor
    Discovery")部分，见[第4章](ch04.html "Chapter 4. ICMPv6")。
- en: 'A typical DHCP communication performed by a client that does Stateful Address
    Autoconfiguration looks as follows:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 执行状态地址自动配置的客户端进行的典型DHCP通信如下所示：
- en: Client sends Solicit message.
  id: totrans-428
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端发送请求（Solicit）消息。
- en: Server(s) reply with Advertise message.
  id: totrans-429
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器(s)以广告（Advertise）消息回复。
- en: Client sends Request message to one server.
  id: totrans-430
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端向一个服务器发送请求（Request）消息。
- en: Server replies with Reply message.
  id: totrans-431
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器以回复（Reply）消息进行回应。
- en: This communication can be shortened to only two messages with the *Rapid Commit
    option*. In this case, the client sends a Solicit message with the Rapid Commit
    option included. The server replies with a Reply message that also contains the
    Rapid Commit option. If the client sent out a Solicit message with a Rapid Commit
    option, it will ignore any Replies that do not contain a Rapid Commit option.
    If the client does not receive any Reply including a Rapid Commit option, it may
    accept an incoming Advertise message and continue the regular configuration process.
    If a server receives a Solicit message with a Rapid Commit option and is not configured
    to use it, it replies with a regular Advertise message. While it is true that
    Rapid Commit offers a more efficient approach to address assignment by using only
    two messages, depending on the configuration and the number of DHCP servers, it
    could result in wasted address space or a situation where multiple DHCPv6 servers
    believe that they each assigned addresses to requesting clients. Once a DHCP server
    has allocated an address in a Reply message with a Rapid Commit option, it has
    to commit the IP address to the client. Obviously with the vast address space
    in a /64, this may not be a big concern.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 通过*快速提交（Rapid Commit）选项*，该通信可以缩短为仅包含两条消息。在这种情况下，客户端发送一条包含快速提交选项的请求消息。服务器回复一条包含快速提交选项的回复消息。如果客户端发送了一条包含快速提交选项的请求消息，它将忽略任何不包含快速提交选项的回复。如果客户端没有收到包含快速提交选项的回复，它可以接受传入的广告消息并继续常规配置过程。如果服务器收到一条包含快速提交选项的请求消息，并且没有配置使用该选项，它将以常规的广告消息回复。虽然快速提交通过仅使用两条消息提供了更高效的地址分配方法，但根据配置和DHCP服务器的数量，它可能导致地址空间浪费或多个DHCPv6服务器认为自己为请求的客户端分配了地址。一旦DHCP服务器在带有快速提交选项的回复消息中分配了一个地址，它必须将该IP地址提交给客户端。显然，由于/64的广阔地址空间，这可能不是一个大问题。
- en: A client uses Request, Renew, Rebind, Release, and Decline messages as necessary
    for the lifetime of its server-assigned addresses. If the client switches link
    or subnet (for instance, in a wireless network or after waking up from sleep mode),
    it has to initiate a Confirm/Reply exchange. It does this by sending its IAs and
    the corresponding addresses and options. If the client does not receive an answer
    to its Confirm message, it should continue to use the previously allocated addresses.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端根据需要使用请求（Request）、续租（Renew）、重新绑定（Rebind）、释放（Release）和拒绝（Decline）消息，来管理其由服务器分配的地址的生命周期。如果客户端切换链路或子网（例如，在无线网络中或从睡眠模式中唤醒后），它必须启动确认/回复交换。它通过发送其IA（接口标识符）以及相应的地址和选项来完成此操作。如果客户端没有收到确认消息的答复，它应该继续使用先前分配的地址。
- en: To release one or more of its addresses, a client sends a Release message, which
    contains the IA and the corresponding addresses and options. The server answers
    with a Reply. If the client does not receive a Reply, it sends another Release
    message. This is not possible in all cases—for instance, if the client is shutting
    down. If a DHCP server did not receive a Release message, it will reuse the addresses
    when their lifetimes have expired.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 为了释放一个或多个地址，客户端发送释放（Release）消息，该消息包含IA及相应的地址和选项。服务器以回复消息进行回应。如果客户端没有收到回复，它会发送另一条释放消息。这并非在所有情况下都可能发生——例如，当客户端关闭时。如果DHCP服务器未收到释放消息，它将在地址的生命周期过期后重新使用这些地址。
- en: If a client notices that an allocated address is already in use (for instance,
    through DAD), it sends a Decline message to the server. This message contains
    a Transaction ID, the client identifier, the server identifier, and the address(es).
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户端注意到一个分配的地址已经在使用（例如，通过DAD检测），它会向服务器发送拒绝（Decline）消息。此消息包含事务ID、客户端标识符、服务器标识符以及地址。
- en: Renew/Rebind
  id: totrans-436
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 续租/重新绑定
- en: If a client wants to refresh the lifetime of its valid and preferred addresses,
    it sends a Renew (type 5) message containing the IA Address option and the addresses
    corresponding to this IA. The server identifies the corresponding lifetimes and
    sends a Reply message to the client. Doing this may also add new addresses or
    remove old addresses by setting their lifetime to 0.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户端想要刷新其有效和首选地址的生存时间，它会发送一个续租（Renew，类型 5）消息，消息中包含 IA 地址选项以及与此 IA 相对应的地址。服务器会识别相应的生存时间并向客户端发送一个应答消息。这样做也可能通过将旧地址的生存时间设置为
    0 来添加新地址或删除旧地址。
- en: If a server receives a Renew message for an IA for which it has no entry, it
    replies with a Reply message setting the Status code to “no binding” (option 13,
    code 3). If the client wants to renew an address that is not valid for its link,
    the server sends a Reply message setting the lifetimes for the addresses to 0.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 如果服务器收到一个续租消息，但该 IA 没有对应的条目，它会回复一个应答消息，并将状态码设置为“无绑定”（option 13，code 3）。如果客户端想续租一个不再有效的地址，服务器会发送一个应答消息，将地址的生存时间设置为
    0。
- en: The server controls the intervals in which a client has to renew its addresses
    through the Timers T1 and T2 preconfigured and associated to each IA. When the
    client reaches the time indicated by T1, it has to start the Renew process. When
    a client reaches the time indicated by T2, this indicates that its Renew messages
    have not been answered. In this case, it sends a Rebind message to all DHCP servers.
    The Rebind message contains an IA option with the currently allocated addresses
    and an Option Request option with all desired DHCP options.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器通过预配置的定时器 T1 和 T2 来控制客户端续租地址的间隔，这些定时器与每个 IA 相关联。当客户端达到 T1 所指示的时间时，它必须开始续租过程。当客户端达到
    T2 所指示的时间时，表示其续租消息未得到应答。在这种情况下，它会向所有 DHCP 服务器发送重绑定（Rebind）消息。重绑定消息包含一个 IA 选项，包含当前分配的地址，以及一个选项请求（Option
    Request）选项，包含所有所需的 DHCP 选项。
- en: 'When a server receives a Rebind message and finds the corresponding IA, it
    answers with a Reply message. If the addresses are not valid for the link anymore,
    it sets the lifetimes to 0\. If the client does not receive an answer to a Rebind
    message, it cannot make further use of the address(es). In this case, it has two
    options:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 当服务器接收到重绑定（Rebind）消息并找到相应的 IA（接口地址）时，它会回复一个应答（Reply）消息。如果这些地址不再对该链路有效，服务器会将生存时间（lifetime）设置为
    0。如果客户端没有收到重绑定消息的应答，它将无法继续使用该地址。在这种情况下，客户端有两个选项：
- en: Restart the address configuration by sending out a Solicit message to find a
    DHCP server.
  id: totrans-441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过发送一个请求消息来重新启动地址配置，以寻找一个 DHCP 服务器。
- en: If the client has other valid IAs, it can ignore the expired IA and use other
    addresses.
  id: totrans-442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果客户端有其他有效的 IA，它可以忽略过期的 IA 并使用其他地址。
- en: Information Request
  id: totrans-443
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 信息请求（Information Request）
- en: If the client already has IP addresses but wants to get other DHCP information,
    it sends an Information Request message. This message contains an Option Request
    option to indicate the desired DHCP options. If, for instance, the client is configured
    by Stateless Address Autoconfiguration and the router is configured to set the(((“O-Flag”)))
    O-Flag (other Stateful configuration) in the Router Advertisement, this causes
    the client to send an Information Request message to get additional information
    such as DNS, NTP, or SIP server configuration. The Information Request message
    is also sent by the client in answer to a Reconfigure message from the server.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户端已经拥有 IP 地址，但希望获取其他 DHCP 信息，它会发送一个信息请求消息。此消息包含一个选项请求（Option Request）选项，以指示所需的
    DHCP 选项。例如，如果客户端通过无状态地址自动配置（Stateless Address Autoconfiguration）进行配置，并且路由器配置为在路由器通告中设置（“O-Flag”）O-Flag（其他有状态配置），这将导致客户端发送信息请求消息以获取附加信息，如
    DNS、NTP 或 SIP 服务器配置。客户端还会在收到服务器的重新配置（Reconfigure）消息时发送信息请求消息。
- en: Reconfigure process
  id: totrans-445
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 重新配置过程
- en: The server sends a Reconfigure message to trigger the client to send a Renew
    or an Information Request message. This is useful when the server has been updated
    with new or modified information, to make sure the new information is propagated
    as quickly as possible. In the Reconfigure message, the Transaction ID is set
    to 0 and contains a Server Identifier option including the server DUID and a Client
    Identifier option containing the client DUID. Additionally, an Option Request
    option can be sent along to indicate to the client which options have been changed
    or added. The Option Request option contains an IA Address option (type 5) if
    the client needs to reconfigure its IP address. With the Reconfigure message option
    (type 19), the server indicates whether the client has to send a Renew or an Information
    Request message.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器发送一个重新配置（Reconfigure）消息，触发客户端发送一个续约（Renew）或信息请求（Information Request）消息。当服务器更新了新的或修改过的信息时，这非常有用，确保新信息能够尽快传播。在重新配置消息中，事务ID（Transaction
    ID）被设置为0，并包含一个服务器标识符（Server Identifier）选项，其中包括服务器的DUID和一个客户端标识符（Client Identifier）选项，包含客户端的DUID。此外，还可以发送一个选项请求（Option
    Request）选项，以指示客户端哪些选项已被更改或添加。如果客户端需要重新配置其IP地址，选项请求中将包含IA地址（IA Address）选项（类型5）。通过重新配置消息选项（类型19），服务器指示客户端是否需要发送续约或信息请求消息。
- en: Because of the danger of DoS attacks, the use of security mechanisms is mandatory
    in Reconfigure messages, which means that the server has to use DHCP authentication.
    The server sends a Reconfigure message to a unicast IPv6 address of each client.
    If it doesn’t know the unicast address of the client, it sends the message as
    a Relay Reply message to a Relay Agent. While a client is in a Reconfigure process,
    it does not accept further Reconfigure messages. A new process can be started
    only once the initial process has been completed.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 由于存在DoS攻击的风险，重新配置消息中必须使用安全机制，这意味着服务器必须使用DHCP认证。服务器将重新配置消息发送到每个客户端的单播IPv6地址。如果它不知道客户端的单播地址，它会将消息作为中继回复（Relay
    Reply）消息发送给中继代理（Relay Agent）。当客户端处于重新配置过程中时，不接受进一步的重新配置消息。只有在初始过程完成后，才能启动新的过程。
- en: Relay Agent communication
  id: totrans-448
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 中继代理通信
- en: The way a Relay Agent forwards DHCP messages with DHCPv6 is quite different
    from the way it is done with DHCPv4\. The following section describes the Relay
    Agent communication in detail.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 中继代理通过DHCPv6转发DHCP消息的方式与DHCPv4有很大不同。以下部分将详细描述中继代理通信。
- en: A Relay Agent uses the All_DHCP_Servers multicast address (`ff05::1:3`) to forward
    messages to DHCP servers. It can be configured to use a unicast address. The Relay
    Agent takes the message coming from the client and builds a Relay Forward message.
    [Figure 5-10](ch05.html#header_fields_in_relay_agent_and_server "Figure 5-10. Header
    fields in Relay Agent and server messages") shows the header of this message.
    In the Link Address field, it sets its global IPv6 address with the prefix for
    the link on which the client resides. From this address, the DHCP server determines
    for which prefix it has to allocate addresses. The Hop Count is set to 1\. The
    Source address from the original address (i.e., the client IP address) is copied
    into the Peer Address field of the Relay Forward message. The original DHCP message
    is copied into the Relay Message Option field. The Relay Agent can now add other
    information that has been preconfigured by the administrator.
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 中继代理使用All_DHCP_Servers组播地址（`ff05::1:3`）将消息转发给DHCP服务器。它也可以配置为使用单播地址。中继代理接收来自客户端的消息，并构建一个中继转发（Relay
    Forward）消息。[图 5-10](ch05.html#header_fields_in_relay_agent_and_server "图 5-10.
    中继代理和服务器消息中的头字段") 显示了此消息的头部。在链接地址（Link Address）字段中，它设置了其全局IPv6地址，该地址具有客户端所在链接的前缀。通过这个地址，DHCP服务器可以确定它需要为哪个前缀分配地址。跳数（Hop
    Count）被设置为1。来自原始地址（即客户端IP地址）的源地址被复制到中继转发消息的对等地址（Peer Address）字段中。原始的DHCP消息被复制到中继消息选项（Relay
    Message Option）字段中。中继代理现在可以添加管理员预配置的其他信息。
- en: When a Relay Agent receives a Relay Forward message from another Relay Agent
    and the value of the Hop Count field reaches the preconfigured value for the Hop
    Count Limit, it ignores the message. With the Hop Count Limit, the number of Relay
    Agents that forward a DHCP message can be limited. If the Hop Count is smaller
    than the Hop Count Limit, the message is forwarded. It encapsulates the packet
    into another Relay Forward header, increases the Hop Count by one, and copies
    the Source address of the previous Relay Agent into the Peer Address field. The
    Link Address field is set to 0\. The message received is copied into the Relay
    Message Option.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个中继代理从另一个中继代理接收到转发消息，且跳数字段的值达到预配置的跳数限制时，它会忽略该消息。通过跳数限制，可以限制转发DHCP消息的中继代理数目。如果跳数小于跳数限制，消息将被转发。它将数据包封装到另一个转发消息头中，将跳数加1，并将上一个中继代理的源地址复制到对等地址字段。链路地址字段设置为0。接收到的消息会被复制到转发消息选项中。
- en: As already mentioned, the Relay Reply message has to be forwarded over the same
    Relay Agents as the Relay Forward message. With the process just described, each
    Relay Agent encapsulates the received message into a new Relay Forward header,
    which makes it possible for the DHCP server to track the way back. In the last
    Relay Message Option, the server finds the original request from the client. It
    replies to it and copies the answer into the Relay Message Option of a Relay Reply
    message. It encapsulates this reply into as many Relay Reply headers as the Relay
    Forward message has received. So the Relay Reply travels the same way back through
    the same Relay Agents. Each Relay Agent on the path decapsulates the exterior
    header and forwards the message to the next Relay Agent. The last Relay Agent
    on the path receives a Relay Reply message, which contains the server reply in
    the Relay Message Option field. It removes the Relay Reply header and forwards
    the server reply to the client.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，转发回复消息必须通过与转发消息相同的中继代理进行转发。通过刚才描述的过程，每个中继代理将接收到的消息封装到一个新的转发消息头中，这使得DHCP服务器能够追踪回程。在最后一个转发消息选项中，服务器找到了来自客户端的原始请求。它对此作出回复，并将答案复制到转发回复消息的转发消息选项中。它将此回复封装为与转发消息收到的中继代理数目相同的转发回复头。因此，转发回复将沿着相同的路径通过相同的中继代理返回。路径上的每个中继代理都会去掉外部头并将消息转发给下一个中继代理。路径上的最后一个中继代理收到一个转发回复消息，其中包含了服务器回复的转发消息选项字段。它移除转发回复头，并将服务器的回复转发给客户端。
- en: '[Table 5-5](ch05.html#the_headers_in_relay_forward_and_relay "Table 5-5. The
    headers in Relay Forward and Relay Reply messages") shows the entries in the header
    fields for a packet that has been forwarded over two Relays, Relay A and Relay
    B.'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '[表5-5](ch05.html#the_headers_in_relay_forward_and_relay "表5-5. 转发和回复消息中的头部")展示了一个经过两个中继（中继A和中继B）转发的数据包头部字段条目。'
- en: Table 5-5. The headers in Relay Forward and Relay Reply messages
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 表5-5. 转发和回复消息中的头部
- en: '| Header field | Packet 2 | Packet 3 | Packet 4 | Packet 5 |'
  id: totrans-455
  prefs: []
  type: TYPE_TB
  zh: '| 头部字段 | 数据包2 | 数据包3 | 数据包4 | 数据包5 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-456
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '|   | Relay A to Relay B | Relay B to Server | Server to Relay B | Relay B
    to Relay A |'
  id: totrans-457
  prefs: []
  type: TYPE_TB
  zh: '|   | 中继A到中继B | 中继B到服务器 | 服务器到中继B | 中继B到中继A |'
- en: '| Message Type | Relay Forward(type 12) | Relay Forward(type 12) | Relay Reply(type
    13) | Relay Reply(type 13) |'
  id: totrans-458
  prefs: []
  type: TYPE_TB
  zh: '| 消息类型 | 转发消息（类型12） | 转发消息（类型12） | 回复消息（类型13） | 回复消息（类型13） |'
- en: '| Hop Count | 1 | 2 | 2 | 1 |'
  id: totrans-459
  prefs: []
  type: TYPE_TB
  zh: '| 跳数 | 1 | 2 | 2 | 1 |'
- en: '| Link Address | Relay A | 0 | 0 | Relay A |'
  id: totrans-460
  prefs: []
  type: TYPE_TB
  zh: '| 链路地址 | 中继A | 0 | 0 | 中继A |'
- en: '| Peer Address | Client C | Relay A | Relay A | Client C |'
  id: totrans-461
  prefs: []
  type: TYPE_TB
  zh: '| 对等地址 | 客户端C | 中继A | 中继A | 客户端C |'
- en: '| Relay Message Option | Client Request | Packet 2 | Packet 5 | DHCP Reply
    |'
  id: totrans-462
  prefs: []
  type: TYPE_TB
  zh: '| 转发消息选项 | 客户端请求 | 数据包2 | 数据包5 | DHCP回复 |'
- en: 'The communication looks as follows:'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 通信过程如下所示：
- en: Client C sends a DHCP Request (packet 1, not shown in [Table 5-5](ch05.html#the_headers_in_relay_forward_and_relay
    "Table 5-5. The headers in Relay Forward and Relay Reply messages")).
  id: totrans-464
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端C发送了一个DHCP请求（数据包1，在[表5-5](ch05.html#the_headers_in_relay_forward_and_relay
    "表5-5. 转发和回复消息中的头部")中未显示）。
- en: Relay Agent A forwards the client request in a Relay Forward message (type 12)
    to Relay Agent B (packet 2). It copies its address into the Link Address field.
    The client request is copied into the Relay Message Option.
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 中继代理A将客户端请求（类型12的转发消息）转发给中继代理B（数据包2）。它将自己的地址复制到链路地址字段。客户端请求被复制到转发消息选项中。
- en: Relay Agent B forwards the message to the DHCP server (packet 3). It sets the
    Link Address field to 0 and copies the address of Relay Agent A into the Peer
    Address field. Packet 2 received from Relay Agent A is copied into the Relay Message
    Option.
  id: totrans-466
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 中继代理 B 将消息转发给 DHCP 服务器（数据包 3）。它将链路地址字段设置为 0，并将中继代理 A 的地址复制到对等地址字段。中继代理 A 收到的数据包
    2 被复制到中继消息选项中。
- en: The DHCP server sends a Relay Reply (type 13) to Relay Agent B (packet 4). The
    Hop Count, Link Address, and Peer Address fields are copied from the Relay Forward
    message. The Relay Message Option contains the packet, which has to be sent from
    Relay Agent B to Relay Agent A (packet 5).
  id: totrans-467
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DHCP 服务器向中继代理 B 发送中继回复（类型 13）（数据包 4）。跳数、链路地址和对等地址字段从中继转发消息中复制。中继消息选项包含数据包，该数据包需要从中继代理
    B 发送到中继代理 A（数据包 5）。
- en: Relay Agent B decapsulates packet 5 and forwards it to Relay Agent A.
  id: totrans-468
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 中继代理 B 解封装数据包 5，并将其转发给中继代理 A。
- en: Relay Agent A takes the server reply from the Relay Message Option and forwards
    it to Client C.
  id: totrans-469
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 中继代理 A 从中继消息选项中获取服务器回复并将其转发给客户端 C。
- en: As mentioned before, the Relay Agent may have information for the client. But
    it has no way to send that information to the client. RFC 6422 specifies a *Relay-Supplied
    Options option* (*RSOO*, option code 66). The Relay encapsulates these additional
    options in an RSOO. The DHCP server can then add those options to the DHCP reply
    that is sent to the client. These options must be specifically defined as an RSOO-enabled
    option with reference to RFC 6422\. Options that have been defined before publication
    of RFC 6422 are not RSOO-enabled.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，中继代理可能拥有客户端的信息，但它无法将这些信息发送给客户端。RFC 6422 规定了*中继提供的选项选项*（*RSOO*，选项代码 66）。中继将这些附加选项封装在
    RSOO 中。然后，DHCP 服务器可以将这些选项添加到发送给客户端的 DHCP 回复中。这些选项必须被特别定义为启用了 RSOO 的选项，并参照 RFC
    6422。RFC 6422 发布之前定义的选项不是启用了 RSOO 的选项。
- en: Note
  id: totrans-471
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A list of RSOO-enabled options can be found at [http://bit.ly/1na9bZQ](http://bit.ly/1na9bZQ)
    (scroll way down).
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 启用 RSOO 的选项列表可以在 [http://bit.ly/1na9bZQ](http://bit.ly/1na9bZQ)（滚动到页面底部）找到。
- en: DHCPv6 communication in the trace file
  id: totrans-473
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 跟踪文件中的 DHCPv6 通信
- en: In this section I would like to show you a DHCPv6 trace file, captured in a
    classroom.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我想向你展示一个 DHCPv6 跟踪文件，该文件是在课堂上捕获的。
- en: As described in [Chapter 4](ch04.html "Chapter 4. ICMPv6"), the client learns
    through a Router Advertisement (RA) that it needs to use DHCPv6 in order to get
    an IPv6 address. [Figure 5-11](ch05.html#dhcpv6_flags_in_the_router_advertisement
    "Figure 5-11. DHCPv6 flags in the Router Advertisement") shows what the Router
    Advertisement looks like.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 如 [第 4 章](ch04.html "第 4 章. ICMPv6") 所述，客户端通过路由广告（RA）得知它需要使用 DHCPv6 以获取 IPv6
    地址。[图 5-11](ch05.html#dhcpv6_flags_in_the_router_advertisement "图 5-11. 路由广告中的
    DHCPv6 标志") 显示了路由广告的样子。
- en: '![DHCPv6 flags in the Router Advertisement](images/ipv6_0511.png.jpg)Figure 5-11. DHCPv6
    flags in the Router Advertisement'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: '![路由广告中的 DHCPv6 标志](images/ipv6_0511.png.jpg)图 5-11. 路由广告中的 DHCPv6 标志'
- en: During the boot process, the client sends out a Router Solicitation. If there
    is an IPv6 router and it has been accordingly configured,(((“O-Flag”))) the client
    will get a Router Advertisement with one or both DHCPv6 flags set to 1, the *Managed
    Configuration flag* (*M-Flag*) and the *Other Stateful Configuration flag* (*O-Flag*).
    When the client gets this it will initiate a DHCP request.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，客户端发送路由请求。如果存在一个 IPv6 路由器并且已正确配置（“O-Flag”），客户端将收到一个路由广告，其中一个或两个 DHCPv6
    标志被设置为 1，*管理配置标志*（*M-Flag*）和*其他状态配置标志*（*O-Flag*）。当客户端收到此消息时，它将启动 DHCP 请求。
- en: '[Figure 5-12](ch05.html#dhcpv6_communication_in_the_trace_fi "Figure 5-12. DHCPv6
    communication in the trace file") shows the communication.'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-12](ch05.html#dhcpv6_communication_in_the_trace_fi "图 5-12. 跟踪文件中的 DHCPv6
    通信") 显示了通信。'
- en: '![DHCPv6 communication in the trace file](images/ipv6_0512.png.jpg)Figure 5-12. DHCPv6
    communication in the trace file'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '![跟踪文件中的 DHCPv6 通信](images/ipv6_0512.png.jpg)图 5-12. 跟踪文件中的 DHCPv6 通信'
- en: As you can see in the uppermost part of the figure, I set a filter in Wireshark
    to only display DHCPv6 communication. The summary line therefore shows the four
    DHCPv6 packets described before, Solicit, Advertise, Request, and Reply. Packet
    number 47 is marked and the details of this reply packet are displayed in the
    lower part of the figure.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 如图最上方所示，我在 Wireshark 中设置了一个过滤器，只显示 DHCPv6 通信。因此，汇总行显示了之前描述的四个 DHCPv6 数据包：Solicit、Advertise、Request
    和 Reply。数据包编号 47 被标记，并在图的下方显示了该回复数据包的详细信息。
- en: 'Let me shortly describe the three packets of which you cannot see the details
    in the screenshot:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 让我简要描述一下在截图中看不到详细信息的三个数据包：
- en: In packet number 40 we see the Solicit message. The source address is the link-local
    address of the client and it goes to the well-known multicast address for All_DHCP_Relay_Agents_and_Servers
    (`ff02::1:2`). UDP source port is 546 and UDP destination port is 547.
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在数据包编号40中，我们看到了Solicit消息。源地址是客户端的链路本地地址，目的地址是All_DHCP_Relay_Agents_and_Servers的著名多播地址（`ff02::1:2`）。UDP源端口是546，UDP目标端口是547。
- en: Packet number 44 is the Advertise message of the DHCP server. The source address
    is the DHCP server’s address and the packet is sent to the link-local address
    of the client.
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据包编号44是DHCP服务器的Advertise消息。源地址是DHCP服务器的地址，数据包发送到客户端的链路本地地址。
- en: In packet 46, the client sends its DHCPv6 request to the multicast address `ff02::1:2`.
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在数据包46中，客户端将其DHCPv6请求发送到多播地址`ff02::1:2`。
- en: Packet number 47 is the Reply message of the DHCP server and this is the packet
    of which you can see the details in the screenshot. It is sent from the DHCP server’s
    address to the link-local address of the client. The UDP source port is 547 (server
    port) and the UDP destination port is 546 (client port). The first field in the
    DHCPv6 header shows the message type (7 for Reply, refer to [Table 5-4](ch05.html#dhcp_options
    "Table 5-4. DHCP options") for all option type numbers). The next field contains
    the transaction ID. For a given DHCP communication, the transaction ID must be
    the same (important to watch when troubleshooting). The Reply message contains
    the Server Identifier (option 2), Client Identifier (option type 1), Identity
    Association (option type 3) including the two timers T1 and T2, the IA address
    option (option type 5) including the IPv6 address and the lifetime parameters,
    the Domain Search List (option type 24), DNS recursive name server (option type
    23), and the fully qualified domain name (FQDN, option type 39).
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包编号47是DHCP服务器的Reply消息，这是截图中可以看到详细信息的数据包。它从DHCP服务器的地址发送到客户端的链路本地地址。UDP源端口是547（服务器端口），UDP目标端口是546（客户端端口）。DHCPv6头部的第一个字段显示消息类型（Reply为7，参考[表5-4](ch05.html#dhcp_options
    "表5-4. DHCP选项")获取所有选项类型编号）。下一个字段包含事务ID。对于给定的DHCP通信，事务ID必须相同（在故障排除时非常重要）。Reply消息包含服务器标识符（选项2）、客户端标识符（选项类型1）、身份关联（选项类型3），包括两个定时器T1和T2，IA地址选项（选项类型5），包括IPv6地址和生命周期参数，域名搜索列表（选项类型24），DNS递归名称服务器（选项类型23）以及完全限定域名（FQDN，选项类型39）。
- en: Stateless DHCP
  id: totrans-486
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 无状态DHCP
- en: In environments where Stateless Address Autoconfiguration is used for IP address
    information, there was no way to configure additional information on the client,
    such as DNS information or other options. Several solutions were discussed, one
    being to add such options to the Router Advertisement. Finally, RFC 3736 specified
    a new service called Stateless DHCP Service for IPv6\. A Stateless DHCP server
    has an implementation of only a subset of the DHCPv6 specification. Its use requires
    that hosts are already configured for an IPv6 address.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用无状态地址自动配置来获取IP地址信息的环境中，客户端无法配置额外的信息，如DNS信息或其他选项。讨论了几种解决方案，其中一种是将此类选项添加到路由器广告中。最终，RFC
    3736指定了一种新的服务，称为IPv6的无状态DHCP服务。无状态DHCP服务器仅实现DHCPv6规范的一个子集。其使用要求主机已配置IPv6地址。
- en: A Stateless DHCP server replies to Information Request messages (message type
    11) that contain an Option Request option (option type 6) with a Reply message
    (message type 7). The Stateless DHCP server can also act as a Relay Agent. This
    allows configuration of a part of the clients on a link using SLAAC while getting
    additional information from the Stateless DHCP server. Meanwhile, other clients
    use Stateful Address Autoconfiguration, and their DHCP messages are forwarded
    by the Stateless DHCP server acting as a Relay Agent.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 无状态DHCP服务器对包含选项请求选项（选项类型6）的信息请求消息（消息类型11）做出回复，并发送Reply消息（消息类型7）。无状态DHCP服务器还可以充当中继代理。这使得通过SLAAC配置链路上一部分客户端时，可以从无状态DHCP服务器获取额外信息。同时，其他客户端使用有状态地址自动配置，它们的DHCP消息由充当中继代理的无状态DHCP服务器转发。
- en: Finally both options were realized. Stateless DHCPv6 was developed and RFC 6106
    defines “Router Advertisement Options for Recursive DNS Server and DNS Search
    List.” It must be implemented on routers as well as on the client side in order
    to work. Currently, Microsoft is not supporting it on Windows. For scenarios such
    as ad hoc networks, this can be a good option to configure clients without a stateful
    or stateless DHCPv6 server. In a corporate environment, a DHCPv6 server may be
    chosen in most cases, because of the need for traceability and also in order to
    configure other additional options.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这两个选项都已实现。无状态 DHCPv6 被开发出来，RFC 6106 定义了“用于递归 DNS 服务器和 DNS 搜索列表的路由器广告选项”。为了使其生效，必须在路由器和客户端侧都实现。目前，微软在
    Windows 上不支持该功能。对于临时网络等场景，这可以作为一个不需要有状态或无状态 DHCPv6 服务器的客户端配置的良好选项。在企业环境中，大多数情况下会选择
    DHCPv6 服务器，因为它能够提供可追溯性，并且可以配置其他附加选项。
- en: Prefix Delegation
  id: totrans-490
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 前缀委派
- en: RFC 3633, “IPv6 Prefix Options,” defines options that can be used to send prefix
    information from a delegating router or a DHCPv6 server to a requesting router
    that has DHCPv6 client functionality. It is useful in environments where the delegating
    router has no information about the topology of a network connected to the requesting
    router. A delegating router or a DHCPv6 server in an ISP network uses this option
    to configure a router in a customer network for its prefix. The delegating router
    can, for example, assign a /48 prefix to the border router in the customer network.
    The border router can subdivide the /48 prefix to /64 subnets and advertise these
    prefixes with Router Advertisements. DHCP Prefix Delegation (DHCP-PD) is independent
    from DHCP address assignment, but the two can be combined.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 3633《IPv6 前缀选项》定义了可以用来从委派路由器或 DHCPv6 服务器向具有 DHCPv6 客户端功能的请求路由器发送前缀信息的选项。这在委派路由器无法了解与请求路由器相连网络拓扑的环境中非常有用。ISP
    网络中的委派路由器或 DHCPv6 服务器使用此选项为客户网络中的路由器配置其前缀。例如，委派路由器可以为客户网络中的边界路由器分配一个 /48 前缀。边界路由器可以将
    /48 前缀划分为 /64 子网，并通过路由器广告广播这些前缀。DHCP 前缀委派（DHCP-PD）独立于 DHCP 地址分配，但这两者可以结合使用。
- en: RFC 6603, “Prefix Exclude Option for DHCPv6-based Prefix Delegation,” updates
    RFC 3633\. The prefix exclusion mechanism is defined for deployments where DHCPv6-based
    prefix delegation is used, where a single aggregated route/prefix has to represent
    one customer, instead of using one prefix for the link between the delegating
    router and the requesting router and another prefix for the customer network.
    This mechanism allows a delegating router to use a prefix out of the delegated
    prefix set on the link through which it exchanges DHCPv6 messages with the requesting
    router. It is intended for use in networks where each requesting router is on
    its own Layer 2 domain.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 6603《基于 DHCPv6 的前缀委派的前缀排除选项》更新了 RFC 3633。前缀排除机制适用于使用基于 DHCPv6 的前缀委派的部署场景，其中单一的汇总路由/前缀必须代表一个客户，而不是使用一个前缀来连接委派路由器和请求路由器之间的链路，另一个前缀用于客户网络。该机制允许委派路由器在与请求路由器交换
    DHCPv6 消息的链路上，使用委派前缀集中的一个前缀。此机制适用于每个请求路由器都处于其自身的第二层域的网络。
- en: Security considerations
  id: totrans-493
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安全性考虑
- en: 'Attacks based on DHCP functionality are possible in the IPv4 world as well
    as in the IPv6 world. The points of attack to be watched are the same:'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 DHCP 功能的攻击在 IPv4 世界和 IPv6 世界中都可能发生。需要关注的攻击点是相同的：
- en: External, unknown DHCP servers allocating false addresses to DHCP clients
  id: totrans-495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部未知的 DHCP 服务器向 DHCP 客户端分配虚假的地址
- en: Faulty or malicious DHCP servers in the intranet that assign false addresses
    or other false configuration information to DHCP clients
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内网中存在故障或恶意的 DHCP 服务器，它们向 DHCP 客户端分配虚假的地址或其他虚假的配置信息。
- en: Unknown external clients that attach to the corporate network and receive internal
    addresses
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到公司网络的未知外部客户端并获得内部地址
- en: Intentional exhaustion of IP addresses by malicious clients, resulting in valid
    clients being unable to obtain a valid IP address and/or configuration options
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恶意客户端故意耗尽 IP 地址，导致有效客户端无法获取有效的 IP 地址和/或配置信息
- en: Malicious client(s) transmitting such high volumes of requests that a DHCP server
    is unable to respond to valid requests
  id: totrans-499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恶意客户端通过发送大量请求使 DHCP 服务器无法响应有效请求
- en: To protect your network from external DHCP servers from outside the corporate
    network, a firewall closing the ports for DHCP is a good protection. It is important
    to protect your network from internal DHCP servers. It doesn’t even need to be
    a malicious attack. Very often the problems come from improperly configured test
    servers. A client can be attacked by a malicious DHCP server configuring it with
    false information. For instance, a bad DNS or NTP server can be configured, or
    it can be configured in a way that it cannot communicate in the local network
    anymore. To protect from such attacks, Authentication should be used (see below).
    Another protection is to use DHCP Guard, which is described in the section [First-hop
    security](ch06.html#first-hop_security "First-hop security") in [Chapter 6](ch06.html
    "Chapter 6. Security with IPv6").
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止来自公司外部的 DHCP 服务器攻击网络，可以通过防火墙关闭 DHCP 端口来提供有效的保护。保护内网免受内部 DHCP 服务器的攻击同样重要。甚至不需要是恶意攻击，很多问题都来自于配置不当的测试服务器。恶意的
    DHCP 服务器可能会通过伪造信息攻击客户端。例如，可能配置错误的 DNS 或 NTP 服务器，或者可能配置为无法再与本地网络通信。为了防范此类攻击，应使用认证机制（见下文）。另一种保护方式是使用
    DHCP Guard，详细内容可参见 [第6章](ch06.html "第6章. IPv6 安全")中 [首次跳跃安全](ch06.html#first-hop_security
    "首次跳跃安全") 部分的描述。
- en: With DHCPv4, the ways to protect from such attacks are limited. Firewalls only
    protect from outside attacks. The possibility to use Authentication for DHCP communication
    exists only in the form of vendor solutions in addition to DHCPv4.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 DHCPv4，防止此类攻击的方式有限。防火墙仅能防御外部攻击。除了 DHCPv4 外，只有通过厂商解决方案的形式才能使用 DHCP 通信的认证功能。
- en: The specification for DHCPv6 includes an Authentication mechanism, which is
    based on Authentication for DHCPv4 (RFC 3118). New hosts must be authorized and
    authenticated before they receive configuration information from a DHCP server,
    the sender of a message must be authenticated, and the content of the message
    must be protected.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: DHCPv6 的规范包括一个认证机制，该机制基于 DHCPv4 的认证（RFC 3118）。新的主机必须在接收来自 DHCP 服务器的配置信息之前获得授权和认证，消息的发送者必须经过认证，并且消息的内容必须得到保护。
- en: The following section gives an overview of the Authentication mechanisms specified
    in RFC 3315\. If you are not familiar with security concepts and terms, please
    refer to [Chapter 6](ch06.html "Chapter 6. Security with IPv6") first.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分概述了 RFC 3315 中指定的认证机制。如果你不熟悉安全概念和术语，请首先参考 [第6章](ch06.html "第6章. IPv6 安全")。
- en: Security for messages between Relay Agents and DHCP servers
  id: totrans-504
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 中继代理与 DHCP 服务器之间消息的安全
- en: For a secure exchange of messages between Relay Agents and DHCP servers, IPsec
    (in transport mode with ESP) is used. Between each Relay Agent and its communication
    peers, an independent two-way trust relationship has to be established. If the
    content of the message is not considered confidential, encryption is not required
    (null encryption). As the Relay Agents and the DHCP servers are within the corporate
    network, private keys can be used.
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保中继代理与 DHCP 服务器之间的安全消息交换，使用 IPsec（传输模式和 ESP）。在每个中继代理与其通信对等方之间，必须建立独立的双向信任关系。如果消息内容不被认为是机密的，则不需要加密（无加密）。由于中继代理和
    DHCP 服务器位于企业内部网络中，因此可以使用私钥。
- en: In addition to this, DHCP servers and Relay Agents are configured with the addresses
    of trusted communication peers. It is therefore not possible for an unknown DHCP
    server or Relay Agent to intrude into the communication.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，DHCP 服务器和中继代理会配置可信通信对等方的地址。因此，未知的 DHCP 服务器或中继代理无法侵入通信。
- en: DHCP Authentication
  id: totrans-507
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: DHCP 认证
- en: The authentication of DHCP messages can be accomplished through the use of the
    Authentication option (option 11). The authentication information carried in the
    Authentication option can be used to reliably identify the source of a DHCP message
    and to confirm that the contents of the DHCP message have not been changed.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP 消息的认证可以通过使用认证选项（选项 11）来实现。认证选项中携带的认证信息可以用来可靠地识别 DHCP 消息的来源，并确认 DHCP 消息的内容没有被篡改。
- en: '[Figure 5-13](ch05.html#the_format_of_the_authentication_option "Figure 5-13. The
    format of the Authentication option") shows the format of the Authentication option.'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-13](ch05.html#the_format_of_the_authentication_option "图 5-13. 认证选项的格式")
    显示了认证选项的格式。'
- en: '![The format of the Authentication option](images/ipv6_0513.png)Figure 5-13. The
    format of the Authentication option'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: '![认证选项的格式](images/ipv6_0513.png)图5-13。认证选项的格式'
- en: 'Multiple authentication protocols can be used with the Authentication option.
    Two such protocols are specified in RFC 3315: the Delayed Authentication Protocol
    and the Reconfigure Key Authentication Protocol (section 21 in RFC 3315). If the
    Delayed Authentication Protocol is chosen, Protocol number 2 is used. If the Reconfigure
    Key Authentication Protocol is chosen, Protocol number 3 is used. Additional protocols
    may be specified in the future with separate RFCs.'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用多种认证协议与认证选项一起使用。RFC 3315中规定了两种此类协议：延迟认证协议和重新配置密钥认证协议（RFC 3315第21节）。如果选择延迟认证协议，则使用协议号2。如果选择重新配置密钥认证协议，则使用协议号3。未来可能会通过独立的RFC指定其他协议。
- en: Unfortunately, there is limited support for DHCPv6 authentication. Specifically,
    Microsoft does not support it on Windows.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，DHCPv6认证的支持有限。具体来说，Microsoft在Windows上不支持此功能。
- en: Further development
  id: totrans-513
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 进一步发展
- en: IP address management is an important aspect of efficient network management.
    There is intense work going on in the IETF DHCP working group to optimize DHCP.
    The DHCP working group is the best place to find updated information not only
    on the current status of DHCP (for IPv4 and IPv6) but also on possible future
    developments.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: IP地址管理是高效网络管理的重要方面。IETF DHCP工作组正在进行大量工作，以优化DHCP。DHCP工作组是获取关于DHCP（IPv4和IPv6）当前状态以及可能的未来发展信息的最佳场所。
- en: Note
  id: totrans-515
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The DHCP working group can be found at [http://datatracker.ietf.org/wg/dhc](http://datatracker.ietf.org/wg/dhc).
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP工作组可以在[http://datatracker.ietf.org/wg/dhc](http://datatracker.ietf.org/wg/dhc)找到。
- en: 'A special focus is on how dual-stack networks or IPv6-only networks can best
    be managed. Currently, there is DHCPv4 for the configuration of IPv4 interfaces
    and DHCPv6 for the configuration for IPv6 interfaces. So in a dual-stack network
    we would need both, a DHCPv4 and a DHCPv6 server. Special care has to be taken
    that there is not overlapping and contradicting configuration coming from each
    DHCP server. RFC 4477, “Dynamic Host Configuration Protocol (DHCP): IPv4 and IPv6
    Dual-Stack Issues,” discusses these challenges. Another scenario that is becoming
    more and more important is IPv6-only networks. Even in those cases, where IPv4
    might be treated as a service in an IPv6-only network, hosts may need some IPv4
    configuration information.'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 特别关注的是如何管理双栈网络或仅IPv6网络。目前，IPv4接口的配置使用DHCPv4，而IPv6接口的配置使用DHCPv6。因此，在双栈网络中，我们需要同时配置DHCPv4和DHCPv6服务器。需要特别注意，避免两个DHCP服务器之间出现重叠和矛盾的配置。RFC
    4477《动态主机配置协议（DHCP）：IPv4和IPv6双栈问题》讨论了这些挑战。另一个越来越重要的场景是仅IPv6网络。即使在这些情况下，IPv4可能作为IPv6-only网络中的一种服务，主机仍然可能需要一些IPv4配置的信息。
- en: Currently the working group is working on drafts that would provide DHCPv4 information
    over IPv6 transport or encapsulated in DHCPv6 messages. One draft describes the
    definition of IPv4 options for DHCPv6 servers. The draft called “Provisioning
    IPv4 Configuration Over IPv6 Only Networks” provides an overview of the use cases
    and a summary and discussion of the possible solutions. See the draft reference
    list at the end of this chapter for a list of the current drafts.
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，工作组正在研究草案，这些草案将提供通过IPv6传输或封装在DHCPv6消息中的DHCPv4信息。一份草案描述了为DHCPv6服务器定义IPv4选项。这份名为《通过仅IPv6网络配置IPv4信息》的草案提供了使用案例的概述，并对可能的解决方案进行了总结和讨论。有关当前草案的详细信息，请参阅本章末尾的草案参考列表。
- en: Dynamic updates to DNS
  id: totrans-519
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 动态更新DNS
- en: With the widespread use of DHCP and autoconfiguration for dynamic IP address
    configuration, the need for a dynamic update of DNS for addition and deletion
    of records arose. RFC 2136 introduced the mechanism called Dynamic DNS (DDNS).
    It is supported since BIND versions 8 and 9 and many popular DNS implementations.
    The update functionality is usually used by applications such as DHCP, but it
    can be implemented on hosts as well. With IPv6, dynamic addresses are often assigned
    using Stateless Address Autoconfiguration, which means there may not be a DHCP
    server in the network. A DNS update mechanism is necessary on each host to update
    its DNS records. There are important security aspects to consider when DDNS updates
    are made. It is important that you can control which nodes are authorized to make
    changes to your DNS records. Update policies must be implemented and Transaction
    Signatures (TSIG; see RFC 2845) or Domain Name System Security Extensions (DNSSEC;
    see RFCs 3007, 4033, 4034, and 4035) mechanisms should be used. RFC 4339, “IPv6
    Host Configuration of DNS Server Information Approaches,” discusses some of these
    general DNS aspects for IPv6 hosts.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 DHCP 和自动配置在动态 IP 地址配置中的广泛应用，DNS 动态更新的需求也随之产生，用于记录的添加和删除。RFC 2136 引入了名为动态
    DNS（DDNS）机制。BIND 8 和 9 版本以及许多流行的 DNS 实现均支持此机制。更新功能通常由 DHCP 等应用程序使用，但也可以在主机上实现。对于
    IPv6，动态地址通常通过无状态地址自动配置（SLAAC）进行分配，这意味着网络中可能没有 DHCP 服务器。因此，每个主机上都需要一个 DNS 更新机制来更新其
    DNS 记录。进行 DDNS 更新时，需要考虑重要的安全方面。必须控制哪些节点被授权修改 DNS 记录。必须实现更新策略，并应使用事务签名（TSIG；参见
    RFC 2845）或域名系统安全扩展（DNSSEC；参见 RFC 3007、4033、4034 和 4035）机制。RFC 4339《IPv6 主机配置 DNS
    服务器信息方法》讨论了 IPv6 主机的一些通用 DNS 方面。
- en: For hosts that are configured through DHCPv6, RFC 4704 defines an client FQDN
    (Fully Qualified Domain Name) option that can be added to the Solicit, Request,
    Renew or Rebind messages. This allows the DHCPv6 client or server to update the
    DNS accordingly.
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 对于通过 DHCPv6 配置的主机，RFC 4704 定义了一种客户端 FQDN（完全限定域名）选项，可以将其添加到 Solicit、Request、Renew
    或 Rebind 消息中。这允许 DHCPv6 客户端或服务器相应地更新 DNS。
- en: For hosts that are configured with SLAAC, a similar mechanism is about to be
    defined. A draft is under way called “Registering self-generated IPv6 Addresses
    in DNS using DHCPv6.” It defines a new DHCPv6 message type that can be used by
    clients to request a DHCPv6 server to add FQDN options to DNS dynamically.
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用 SLAAC 配置的主机，即将定义一种类似的机制。目前正在进行一项草案，名为“使用 DHCPv6 在 DNS 中注册自生成的 IPv6 地址”。该草案定义了一种新的
    DHCPv6 消息类型，客户端可以使用该类型请求 DHCPv6 服务器动态地将 FQDN 选项添加到 DNS 中。
- en: DNS
  id: totrans-523
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DNS
- en: DNS is used in the IPv4 world to do name-to-address mappings and vice versa.
    This is not changing in the IPv6 world. The need for DNS is actually much greater
    because of the length of IPv6 addresses. Mixed IPv4/IPv6 environments need multiple
    host entries in DNS. A host communicating with both versions of TCP/IP needs at
    least two entries in DNS—one with its IPv4 address and the other with its IPv6
    address. A new DNS record type has been defined for IPv6 hosts. RFC 3596 defines
    the AAAA type record (called *Quad-A*). RFC 2874 defines the A6 type record, which
    was designed to make renumbering of networks and prefix changes easier to administer.
    A6 has been moved to experimental status and is not used. The other DNS record
    types (NS and PTR records) remain unchanged, adjusting only to support the IPv6
    address format.
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 在 IPv4 世界中，DNS 用于进行名称到地址的映射，反之亦然。IPv6 世界中这一点没有变化。实际上，由于 IPv6 地址的长度，DNS 的需求更大。混合
    IPv4/IPv6 环境需要在 DNS 中有多个主机条目。与两种 TCP/IP 协议版本通信的主机需要至少两个 DNS 条目——一个是其 IPv4 地址，另一个是其
    IPv6 地址。为 IPv6 主机定义了一种新的 DNS 记录类型。RFC 3596 定义了 AAAA 类型记录（称为 *Quad-A*）。RFC 2874
    定义了 A6 类型记录，该记录旨在使网络重新编号和前缀变更的管理更加简便。A6 已被移至实验状态，并且不再使用。其他 DNS 记录类型（NS 和 PTR 记录）保持不变，仅调整以支持
    IPv6 地址格式。
- en: AAAA records and IP6.ARPA
  id: totrans-525
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: AAAA 记录和 IP6.ARPA
- en: RFC 3596 describes DNS extensions for IPv6 implementations based on AAAA records.
    This record type can store an 128-bit IPv6 address, and the DNS value for this
    type of record is 28 (decimal notation). A host that has more than one IPv6 address
    has a AAAA record for each address. The corresponding reverse lookup domain is
    `IP6.ARPA`. The reverse lookup records are PTR records of type 12.
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: RFC 3596 描述了基于 AAAA 记录的 IPv6 实现的 DNS 扩展。该记录类型可以存储 128 位的 IPv6 地址，且此类型记录的 DNS
    值为 28（十进制表示）。一个具有多个 IPv6 地址的主机会为每个地址创建一个 AAAA 记录。相应的反向查找域是 `IP6.ARPA`。反向查找记录是类型为
    12 的 PTR 记录。
- en: 'A AAAA type record can look like this:'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 AAAA 类型的记录可以如下所示：
- en: '[PRE0]'
  id: totrans-528
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For reverse lookups, each subdomain level under `IP6.ARPA` represents 4 bits
    of the 128-bit address. The least significant bit appears at the far left of the
    domain name. Omitting leading zeros is not allowed in this case, so the PTR record
    for the previous example looks like this:'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 对于反向查询，每个 `IP6.ARPA` 下的子域级别表示 128 位地址的 4 位。最低有效位出现在域名的最左侧。在这种情况下，不允许省略前导零，因此前面示例的
    PTR 记录如下所示：
- en: '[PRE1]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note that there are several ways to represent reverse IPv6 addresses in DNS.
    It depends on the implementation, so refer to your vendor’s documentation to find
    out which format is expected.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在 DNS 中表示反向 IPv6 地址的方式有多种。这取决于具体的实现，因此请参考您的供应商文档以了解预期的格式。
- en: Note
  id: totrans-532
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Originally, the reverse domain was called IP6.INT. It has been deprecated (RFC
    4159) and replaced by IP6.ARPA.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，反向域名被称为 IP6.INT。它已经被弃用（RFC 4159），并由 IP6.ARPA 替代。
- en: DNS servers
  id: totrans-534
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DNS 服务器
- en: BIND implements IPv6 DNS in versions of BIND 8.4 and higher and in BIND version
    9.
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: BIND 在版本 8.4 及更高版本和版本 9 中实现了 IPv6 DNS。
- en: DNS implementations based on these versions of BIND support IPv6\. A good reference
    site for BIND is the [Internet Systems Consortium home page](http://www.isc.org/products/BIND).
    The same site has a list of vendor implementations based on BIND. There are also
    links to versions of BIND that run on different versions of the Microsoft operating
    system.
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这些版本的 BIND 实现支持 IPv6。一个好的 BIND 参考网站是[互联网系统联盟主页](http://www.isc.org/products/BIND)。该网站还列出了基于
    BIND 的供应商实现，并提供了适用于不同版本微软操作系统的 BIND 版本的链接。
- en: 'The most important file for configuring a name server on Unix is */etc/named.conf*.
    The file itself contains detailed information on how to configure it. To make
    name resolution work over IPv6, you need to add one important entry: `listen-on-v6
    { any }`. This entry tells the name server to listen for IPv6 queries. Then update
    */var/named* with the entries for all IPv6 hosts.'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Unix 上配置名称服务器最重要的文件是*/etc/named.conf*。该文件本身包含了如何配置的详细信息。为了使名称解析在 IPv6 上工作，您需要添加一个重要的条目：`listen-on-v6
    { any }`。此条目告诉名称服务器监听 IPv6 查询。然后，使用所有 IPv6 主机的条目更新 */var/named*。
- en: The entries in our zone record file are shown in [Figure 5-14](ch05.html#the_zone_record_file
    "Figure 5-14. The zone record file").
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的区域记录文件中的条目如[图 5-14](ch05.html#the_zone_record_file "图 5-14. 区域记录文件")所示。
- en: '![The zone record file](images/ipv6_0514.png)Figure 5-14. The zone record file'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: '![区域记录文件](images/ipv6_0514.png)图 5-14. 区域记录文件'
- en: Note
  id: totrans-540
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a detailed explanation of BIND and DNS configuration, refer to *DNS and
    BIND on IPv6*, by Cricket Liu (O’Reilly).
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 BIND 和 DNS 配置的详细解释，请参考 Cricket Liu 的《*DNS 和 BIND 在 IPv6 上*》（O'Reilly）。
- en: DNS resolvers and DNS design
  id: totrans-542
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DNS 解析器和 DNS 设计
- en: Resolvers are the client part in DNS communication. The resolver sends out DNS
    requests for IP addresses to DNS servers. It can be part of an operating system
    or an application. DNS servers also have a resolver implemented to send out DNS
    requests to other DNS servers.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 解析器是 DNS 通信中的客户端部分。解析器向 DNS 服务器发送关于 IP 地址的 DNS 请求。它可以是操作系统的一部分，也可以是一个应用程序。DNS
    服务器也实现了一个解析器，用于向其他 DNS 服务器发送 DNS 请求。
- en: When a dual-stacked host queries a DNS server for a service name, for instance
    by entering an URL in the browser, the client will send out two DNS requests,
    one for an A record and another for a AAAA record. The DNS server may respond
    with either an A record, or a AAAA record or with both, depending on how it is
    configured. In case the client receives two addresses, it will, based on the default
    address selection rules (RFC 6724), prefer native IPv6 over IPv4.
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个双栈主机向 DNS 服务器查询服务名称时，例如在浏览器中输入 URL，客户端将发送两个 DNS 请求，一个用于 A 记录，另一个用于 AAAA 记录。DNS
    服务器可以根据其配置返回 A 记录、AAAA 记录或两者都返回。如果客户端接收到两个地址，它将根据默认地址选择规则（RFC 6724），优先选择原生 IPv6
    地址而非 IPv4 地址。
- en: Note
  id: totrans-545
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Default Address Selection is discussed in [Chapter 2](ch02.html "Chapter 2. IPv6
    Addressing").
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 默认地址选择在[第 2 章](ch02.html "第 2 章. IPv6 地址分配")中讨论。
- en: Which transport is used for resolving a name with DNS is independent of the
    connection that is used. So for instance, Windows XP was not able to resolve DNS
    names over IPv6\. A Windows XP client always needed a DNS server that it could
    reach over IPv4\. But when the client is dual-stacked and the DNS server responds
    with a AAAA record, the Windows XP client could initiate a session over IPv6.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 解析 DNS 名称时使用的传输协议与实际使用的连接是独立的。例如，Windows XP 无法通过 IPv6 解析 DNS 名称。Windows XP 客户端始终需要一个可以通过
    IPv4 访问的 DNS 服务器。但当客户端支持双栈并且 DNS 服务器返回 AAAA 记录时，Windows XP 客户端可以通过 IPv6 发起会话。
- en: There is a problem if a client gets a AAAA record but does not have IPv6 connectivity
    or only a very poor one. IPv6 stacks are generally configured to prefer IPv6 over
    IPv4 by default, so the client will try to connect over IPv6\. But because it
    does not have connectivity, there is a long waiting time until the client eventually
    reverts to using IPv4 (in case it got an A record for the same service). The user
    will in most cases not understand why it takes so long to access that website
    and will probably blame the website owner for it.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户端获取到 AAAA 记录，但没有 IPv6 连接或仅有非常差的连接，就会出现问题。IPv6 协议栈通常默认配置为优先使用 IPv6 而不是 IPv4，因此客户端会尝试通过
    IPv6 进行连接。但是，由于它没有连接，客户端会长时间等待，直到最终切换回使用 IPv4（如果它为同一服务获取到了 A 记录）。在大多数情况下，用户无法理解为什么访问该网站如此缓慢，并且可能会把责任归咎于网站所有者。
- en: This is the reason why earlier (before IPv6 World Launch Day on June 6, 2012)
    large dual-stacked websites such as Google and Facebook did not give out AAAA
    records for their main domain. If you wanted to access Google or Facebook over
    IPv6 in those days, you had to use a v6-specific domain name such as [http://ipv6.google.com](http://ipv6.google.com).
    These large sites did not want to accept performance hits due to users connecting
    from networks with bad IPv6 Internet connectivity. If such a user experiences
    long timeouts while accessing Google, the user will think that Google has a bad
    performance, while the timeout comes from not being able to connect over IPv6
    and waiting to connect over IPv4\. These sites often used DNS whitelisting for
    ISPs with good IPv6 performance, where they could be sure that users coming from
    that ISP have no problems accessing the website over IPv6\. So only if you were
    connected from such a provider would you get a AAAA record for [http://www.google.com](http://www.google.com).
    World IPv6 Launch Day on June 6, 2012, showed that only a tiny fraction of users
    experienced problems. Since then many of these sites have enabled AAAA records
    for the main domain permanently. To find more information on World IPv6 Launch
    day, go to [http://www.worldipv6launch.org](http://www.worldipv6launch.org). It
    shows the participants and information about measurements.
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么在早期（在 2012 年 6 月 6 日的 IPv6 世界发布日之前），像 Google 和 Facebook 这样的大型双栈网站没有为其主域名提供
    AAAA 记录的原因。如果你想在那个时期通过 IPv6 访问 Google 或 Facebook，你必须使用一个特定于 IPv6 的域名，例如 [http://ipv6.google.com](http://ipv6.google.com)。这些大型网站不希望因用户从
    IPv6 网络连接质量差的网络中访问而导致性能下降。如果用户在访问 Google 时遇到长时间的超时，用户会认为 Google 性能差，但实际上超时是由于无法通过
    IPv6 连接，并且正在等待通过 IPv4 连接。这些网站通常会为具有良好 IPv6 性能的 ISP 使用 DNS 白名单，在这种情况下，它们可以确定来自该
    ISP 的用户能够无问题地通过 IPv6 访问网站。因此，只有当你连接到这样的提供商时，才会为 [http://www.google.com](http://www.google.com)
    获取到 AAAA 记录。2012 年 6 月 6 日的世界 IPv6 发布日表明，只有极少数用户遇到了问题。从那时起，许多这些网站已经永久启用了主域名的 AAAA
    记录。欲了解更多关于世界 IPv6 发布日的信息，请访问 [http://www.worldipv6launch.org](http://www.worldipv6launch.org)。该网站展示了参与者和测量的相关信息。
- en: Note
  id: totrans-550
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you like to get an updated picture of the current status of deployment of
    IPv6 in the world, there are two sites you can refer to: [Google Statistics](http://www.google.com/ipv6/statistics.html)
    and [Cisco Statistics](http://6lab.cisco.com/stats).'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解当前全球 IPv6 部署的最新情况，有两个网站可以参考：[Google 统计数据](http://www.google.com/ipv6/statistics.html)
    和 [Cisco 统计数据](http://6lab.cisco.com/stats)。
- en: Happy Eyeballs
  id: totrans-552
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Happy Eyeballs
- en: In order to improve user experience in a dual-stack Internet, a specification
    has been defined, which is called Happy Eyeballs. It is defined in RFC 6555.
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 为了改善双栈互联网中的用户体验，定义了一项规范，称为 Happy Eyeballs。它在 RFC 6555 中进行了定义。
- en: When a client gets two addresses for a given service, an IPv4 and a native IPv6
    address, it will by default connect to the IPv6 address by initiating a TCP handshake.
    If there is no reply to the request, the client will, after a long timeout, revert
    to using IPv4\. This can happen if the IPv6 path from the client to the service
    is broken or very slow. With a Happy Eyeball implementation, the client will try
    both protocols and then use the faster one for the connection. There are several
    ways to do it. [Figure 5-15](ch05.html#happy_eyeballs_with_ipv6_connection_brok
    "Figure 5-15. Happy Eyeballs with IPv6 connection broken") shows such an algorithm.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 当客户端获取到两个地址用于某个服务时，一个是IPv4地址，一个是本地IPv6地址，默认情况下，它会通过发起TCP握手连接到IPv6地址。如果请求没有得到响应，客户端将在长时间超时后，改为使用IPv4。若客户端到服务的IPv6路径中断或非常慢，就可能发生这种情况。通过实现Happy
    Eyeballs机制，客户端将同时尝试两种协议，并选择较快的协议进行连接。实现这一功能有几种方法。[图5-15](ch05.html#happy_eyeballs_with_ipv6_connection_brok
    "图5-15. IPv6连接中断的Happy Eyeballs")展示了这种算法。
- en: '![Happy Eyeballs with IPv6 connection broken](images/ipv6_0515.png)Figure 5-15. Happy
    Eyeballs with IPv6 connection broken'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: '![IPv6连接中断的Happy Eyeballs](images/ipv6_0515.png)图5-15. IPv6连接中断的Happy Eyeballs'
- en: In this case, the client sends two requests to the DNS server for *http://www.example.com*,
    an A request and a AAAA request. The service is dual-stack so DNS returns two
    addresses, an IPv4 and an IPv6 address. Next we see the client issue two TCP Syn
    requests (the first packet in a TCP handshake), one over IPv6 and one over IPv4\.
    In this case the IPv6 connection was broken, so the client only gets a reply (SYN+ACK)
    over IPv4\. In the next packet the client confirms the TCP handshake with a TCP
    Ack and now the communication with the service will run over IPv4.
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，客户端向DNS服务器发送两个请求，分别是*http://www.example.com*的A请求和AAAA请求。该服务是双栈的，因此DNS返回了两个地址，一个IPv4地址和一个IPv6地址。接下来，客户端发出了两个TCP同步请求（TCP握手中的第一个数据包），一个通过IPv6，一个通过IPv4。在这种情况下，IPv6连接中断，因此客户端仅收到来自IPv4的响应（SYN+ACK）。在下一个数据包中，客户端通过TCP确认握手，现在与服务的通信将通过IPv4进行。
- en: 'Different operating systems and browsers have different types of implementations
    of Happy Eyeballs. RFC 6555 describes the implementation in Google Chrome and
    Firefox as follows:'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的操作系统和浏览器对Happy Eyeballs有不同的实现方式。RFC 6555描述了Google Chrome和Firefox的实现方式，如下所示：
- en: Call `getaddrinfo()`, which returns a list of IP addresses sorted by the host’s
    address preference policy.
  id: totrans-558
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`getaddrinfo()`，该函数返回一个按主机地址优先级排序的IP地址列表。
- en: Initiate a connection attempt with the first address in that list (e.g., IPv6).
  id: totrans-559
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用列表中的第一个地址（例如IPv6）发起连接尝试。
- en: If that connection does not complete within a short period of time (Firefox
    and Chrome use 300 ms), initiate a connection attempt with the first address belonging
    to the other address family (e.g., IPv4).
  id: totrans-560
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果该连接在短时间内未完成（Firefox和Chrome使用300毫秒），则使用属于另一个地址族的第一个地址（例如IPv4）发起连接尝试。
- en: The first connection that is established is used. The other connection is discarded.
  id: totrans-561
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首个建立的连接将被使用，其他连接会被丢弃。
- en: Microsoft has not implemented Happy Eyeballs in Internet Explorer but it has
    a similar mechanism to optimize connection setup depending on protocol performance.
    Apple also has an OS-specific implementation similar to Happy Eyeballs.
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 微软在Internet Explorer中未实现Happy Eyeballs，但它有一个类似的机制，根据协议性能优化连接建立。苹果也有一个与Happy
    Eyeballs类似的操作系统特定实现。
- en: Name space fragmentation
  id: totrans-563
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 名称空间分割
- en: 'With regard to DNS design, there is an important point to be aware of: *name
    space fragmentation*. When a resolver tries to resolve a name it will start at
    the root and follow referrals until it reaches an authoritative name server for
    the name. If the resolver happens to reach a name server that is only reachable
    over a protocol that the resolver can’t use, the name cannot be resolved, and
    so the DNS query is unsuccessful.'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 关于DNS设计，有一个重要的点需要注意：*名称空间分割*。当解析器尝试解析一个名称时，它将从根开始，并跟随转发信息，直到到达该名称的权威名称服务器。如果解析器恰好到达一个只能通过解析器无法使用的协议访问的名称服务器，则该名称无法被解析，DNS查询失败。
- en: So when IPv6 starts to get deployed more and more in the Internet, the name
    space may get fragmented because there may be name servers that can only be reached
    over IPv4 and more and more name servers that may only be reached over IPv6\.
    So we have to find mechanisms to avoid the situation where the resolver chain
    breaks due to two name servers in the resolution process that do not speak the
    same language (IP version).
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当 IPv6 在互联网中得到越来越多部署时，名称空间可能会被碎片化，因为可能会有只能通过 IPv4 到达的名称服务器，同时会有越来越多只能通过 IPv6
    到达的名称服务器。因此，我们必须找到机制，以避免解析过程中有两个名称服务器使用不同的协议（IP 版本），从而导致解析链断裂的情况。
- en: 'Here are the DNS recommended guidelines to avoid this (quote from RFC 3901).
    In order to preserve name space continuity, the following administrative policies
    are recommended:'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是为避免这种情况而推荐的 DNS 指导方针（引用自 RFC 3901）。为了保持名称空间的连续性，建议采取以下管理策略：
- en: Every recursive name server SHOULD be either IPv4-only or dual stack.
  id: totrans-567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个递归名称服务器**应**仅支持 IPv4 或双栈。
- en: This rules out IPv6-only recursive servers. However, one might design configurations
    where a chain of IPv6-only name server forward queries to a set of dual-stack
    recursive name servers actually performing those recursive queries.
  id: totrans-568
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这排除了仅支持 IPv6 的递归服务器。然而，可能会设计配置，让一串仅支持 IPv6 的名称服务器将查询转发给一组执行递归查询的双栈递归名称服务器。
- en: Every DNS zone SHOULD be served by at least one IPv4-reachable authoritative
    name server.
  id: totrans-569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个 DNS 区域**应**至少由一个可通过 IPv4 到达的权威名称服务器提供服务。
- en: This rules out DNS zones served only by IPv6-only authoritative name servers.
  id: totrans-570
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这排除了仅由 IPv6-only 权威名称服务器提供服务的 DNS 区域。
- en: 'Note: zone validation processes SHOULD ensure that there is at least one IPv4
    address record available for the name servers of any child delegations within
    the zone.'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：区域验证过程**应**确保每个子委托区域的名称服务器至少有一个 IPv4 地址记录。
- en: For your integration of IPv6 it is probably a good idea to plan for dual-stacked
    DNS services, as this is the best and most flexible protection of fragmentation.
    With BIND9 you can also configure a dual-stack server. When a recursive name server
    needs to look up data in a zone served only by a name server that doesn’t speak
    the same protocol, it can forward a recursive query to the dual-stack server.
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 IPv6 的集成，规划双栈 DNS 服务可能是一个好主意，因为这是防止碎片化的最佳且最灵活的方式。使用 BIND9，您还可以配置一个双栈服务器。当一个递归名称服务器需要查找仅由不支持相同协议的名称服务器提供服务的区域的数据时，它可以将递归查询转发到双栈服务器。
- en: Make sure that you configure AAAA records only when the services are fully reachable
    over IPv6, otherwise your clients may experience long timeouts or not reach the
    service at all. We also have to move away from entering host names only in DNS.
    A host may be dual-stacked (and have two DNS entries), while some services running
    on that host may be either IPv4 or IPv6 services. In a large enterprise it could
    be recommendable for administrative reasons to not mix IPv4 services and IPv6
    services on dual-stacked hosts, but place IPv4 services on IPv4 hosts and IPv6
    services on IPv6 hosts. At the same time you have to make sure that all clients
    that get AAAA records for IPv6-only services can connect over IPv6 to that network
    where the service is. If a service is available on both protocols, make sure the
    IPv6 service gets precedence over the IPv4 service, so your traffic can slowly
    shift to using IPv6 more and more whenever it is available.
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 确保仅在服务完全通过 IPv6 可达时配置 AAAA 记录，否则您的客户端可能会经历长时间的超时，甚至完全无法访问服务。我们还必须避免仅在 DNS 中输入主机名。一台主机可能是双栈的（并且有两个
    DNS 条目），而该主机上运行的某些服务可能是 IPv4 服务或 IPv6 服务。在大型企业中，出于管理原因，可能建议不要在双栈主机上混合 IPv4 和 IPv6
    服务，而是将 IPv4 服务放在 IPv4 主机上，将 IPv6 服务放在 IPv6 主机上。同时，您必须确保所有获取 AAAA 记录的客户端能够通过 IPv6
    连接到该服务所在的网络。如果服务在两种协议上都可用，请确保 IPv6 服务优先于 IPv4 服务，这样您的流量就可以随着时间的推移逐步转向更多地使用 IPv6，只要它可用。
- en: DNS communication in the trace file
  id: totrans-574
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 跟踪文件中的 DNS 通信
- en: '[Figure 5-16](ch05.html#dns_communication_in_the_trace_file-id1 "Figure 5-16. DNS
    communication in the trace file") shows DNS queries and replies in the trace file.'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-16](ch05.html#dns_communication_in_the_trace_file-id1 "图 5-16. 跟踪文件中的
    DNS 通信")显示了跟踪文件中的 DNS 查询和应答。'
- en: '![DNS communication in the trace file](images/ipv6_0516.png)Figure 5-16. DNS
    communication in the trace file'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: '![跟踪文件中的 DNS 通信](images/ipv6_0516.png)图 5-16. 跟踪文件中的 DNS 通信'
- en: A client issues DNS requests for [http://nsv6.ipv6class.com](http://nsv6.ipv6class.com)
    to a DNS server. In packet 5, the client asks for an A record and receives a reply
    in packet 6 with no Answer Record. The requested service is an IPv6-only service
    and therefore has no A record. In packet 7, the client asks for a AAAA record
    and gets the Answer record in packet 8\. The details of packet 8 are displayed
    in the lower part of the figure. The DNS transaction ID is `099c2` (both in Request
    and Reply). The flags are set for Response, Authoritative Server, Recursion desired,
    and Recursion available. Below that you can see the Query and the corresponding
    Answer Record with Time to Live and the IPv6 address.
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端向 DNS 服务器发出对 [http://nsv6.ipv6class.com](http://nsv6.ipv6class.com) 的 DNS
    请求。在第 5 包中，客户端请求一个 A 记录，并在第 6 包中收到没有答案记录的回复。请求的服务是仅支持 IPv6 的服务，因此没有 A 记录。在第 7
    包中，客户端请求一个 AAAA 记录，并在第 8 包中收到答案记录。第 8 包的详细信息显示在图的下半部分。DNS 事务 ID 是 `099c2`（在请求和回复中均相同）。标志位被设置为响应、权威服务器、期望递归和可用递归。在其下方，你可以看到查询和对应的答案记录，包含生存时间和
    IPv6 地址。
- en: The whole DNS communication goes over IPv6 in this case. As mentioned before,
    it would also be possible that the DNS resolution goes over IPv4 and then the
    connection to the IPv6-only service over IPv6.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，整个 DNS 通信都通过 IPv6 进行。如前所述，也可以先通过 IPv4 进行 DNS 解析，然后通过 IPv6 连接到仅支持 IPv6
    的服务。
- en: The next chapter discusses Security with IPv6.
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章讨论了 IPv6 的安全性。
- en: References
  id: totrans-580
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: Here’s a list of the most important RFCs and drafts mentioned in this chapter.
    Sometimes I list additional subject-related RFCs for your personal further study.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本章中提到的最重要的 RFC 和草案的列表。有时，我会列出一些额外的与主题相关的 RFC 供你个人进一步学习。
- en: RFCs
  id: totrans-582
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: RFC 文档
- en: RFC 1195, “Use of OSI IS-IS for Routing in TCP/IP and Dual Environments,” 1990
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 1195，“在 TCP/IP 和双重环境中使用 OSI IS-IS 路由”，1990年
- en: RFC 1321, “The MD5 Message Digest Algorithm,” 1992
  id: totrans-584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 1321，“MD5 消息摘要算法”，1992年
- en: RFC 2080, “RIPng” for IPv6,” 1997
  id: totrans-585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2080，“IPv6 的 RIPng”，1997年
- en: 'RFC 2104, “HMAC: Keyed-Hashing for Message Authentication,” 1997'
  id: totrans-586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2104，“HMAC：消息认证的密钥散列”，1997年
- en: RFC 2136, “Dynamic Updates in the Domain Name System,” 1997
  id: totrans-587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2136，“域名系统中的动态更新”，1997年
- en: RFC 2149, “Multicast Server Architectures for MARS-based ATM multicasting,”
    1997
  id: totrans-588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2149，“基于 MARS 的 ATM 组播的多播服务器架构”，1997年
- en: RFC 2205, “Resource ReSerVation Protocol (RSVP)—Version 1 Functional Specification,”
    1997
  id: totrans-589
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2205，“资源保留协议（RSVP）——版本1功能规范”，1997年
- en: RFC 2210, “The Use of RSVP with IETF Integrated Services,” 1997
  id: totrans-590
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2210，“RSVP 在 IETF 综合服务中的应用”，1997年
- en: RFC 2324, “Hyper Text Coffee Pot Control Protocol (HTCPCP/1.0),” 1998
  id: totrans-591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2324，“超文本咖啡壶控制协议（HTCPCP/1.0）”，1998年
- en: RFC 2328, “OSPF Version 2,” 1998
  id: totrans-592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2328，“OSPF 第2版”，1998年
- en: 'RFC 2362, “Protocol Independent Multicast-Sparse Mode (PIM-SM): Protocol Specification,”
    1998'
  id: totrans-593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2362，“协议无关组播——稀疏模式（PIM-SM）：协议规范”，1998年
- en: RFC 2365, “Administratively Scoped IP Multicast,” 1998
  id: totrans-594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2365，“管理作用域的 IP 组播”，1998年
- en: RFC 2430, “A Provider Architecture for Differentiated Services and Traffic Engineering
    (PASTE),” 1998
  id: totrans-595
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2430，“差异化服务和流量工程（PASTE）的提供者架构”，1998年
- en: RFC 2453, “RIP Version 2,” 1998
  id: totrans-596
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2453，“RIP 第2版”，1998年
- en: RFC 2464, “Transmission of IPv6 Packets over Ethernet Networks,” 1998
  id: totrans-597
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2464，“IPv6 数据包在以太网网络上传输”，1998年
- en: RFC 2467, “Transmission of IPv6 Packets over FDDI Networks,” 1998
  id: totrans-598
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2467，“IPv6 数据包在 FDDI 网络上传输”，1998年
- en: RFC 2474, “Definition of the Differentiated Services Field (DS Field) in the
    IPv4 and IPv6 Headers,” 1998
  id: totrans-599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2474，“IPv4 和 IPv6 头部中的差异化服务字段（DS 字段）定义”，1998年
- en: RFC 2475, “An Architecture for Differentiated Services,” 1998
  id: totrans-600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2475，“差异化服务架构”，1998年
- en: RFC 2491, “IPv6 over Non-Broadcast Multiple Access (NBMA) networks,” 1999
  id: totrans-601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2491，“IPv6 在非广播多址接入（NBMA）网络上的应用”，1999年
- en: RFC 2492, “IPv6 over ATM Networks,” 1999
  id: totrans-602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2492，“IPv6 在 ATM 网络上的应用”，1999年
- en: RFC 2597, “Assured Forwarding PHB Group,” 1999
  id: totrans-603
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2597，“有保证转发 PHB 组”，1999年
- en: RFC 2590, “Transmission of IPv6 Packets over Frame Relay Networks Specification,”
    1999
  id: totrans-604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2590，“IPv6 数据包在帧中继网络上传输规范”，1999年
- en: RFC 2710, “Multicast Listener Discovery (MLD)” for IPv6,” 1999
  id: totrans-605
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2710，“IPv6 的多播监听发现（MLD）”，1999年
- en: RFC 2715, “Interoperability Rules for Multicast Routing Protocols,” 1999
  id: totrans-606
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2715，“多播路由协议的互操作性规则”，1999年
- en: RFC 2845, “Secret Key Transaction Authentication for DNS (TSIG),” 2000
  id: totrans-607
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2845，“DNS 的密钥事务认证（TSIG）”，2000年
- en: RFC 2884, “Performance Evaluation of Explicit Congestion Notification (ECN)
    in IP Networks,” 2000
  id: totrans-608
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2884，“IP 网络中显式拥塞通知（ECN）的性能评估”，2000年
- en: RFC 2894, “Router Renumbering for IPv6,” 2000
  id: totrans-609
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2894，“IPv6 路由器重新编号”，2000年
- en: RFC 2914, “Congestion Control Principles,” 2000
  id: totrans-610
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2914，“拥塞控制原则”，2000年
- en: RFC 2963, “A Rate Adaptive Shaper for Differentiated Services,” 2000
  id: totrans-611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2963, “区分服务的速率自适应整形器”，2000
- en: RFC 2983, “Differentiated Services and Tunnels,” 2000
  id: totrans-612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2983, “区分服务与隧道”，2000
- en: RFC 2998, “A Framework for Integrated Services Operation over Diffserv Networks,”
    2000
  id: totrans-613
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 2998, “基于区分服务网络的集成服务操作框架”，2000
- en: RFC 3006, “Integrated Services in the Presence of Compressible Flows,” 2000
  id: totrans-614
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3006, “在可压缩流的存在下集成服务”，2000
- en: RFC 3007, “Secure Domain Name System (DNS) Dynamic Update,” 2000
  id: totrans-615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3007, “安全域名系统（DNS）动态更新”，2000
- en: RFC 3008, “Domain Name System Security (DNSSEC) Signing Authority,” 2000
  id: totrans-616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3008, “域名系统安全（DNSSEC）签名授权”，2000
- en: RFC 3086, “Definition of Differentiated Services Per Domain Behaviors and Rules
    for their Specification,” 2001
  id: totrans-617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3086, “每域区分服务行为定义及其规范规则”，2001
- en: RFC 3118, “Authentication for DHCP Messages,” 2001
  id: totrans-618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3118, “DHCP消息的认证”，2001
- en: RFC 3124, “The Congestion Manager,” 2001
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3124, “拥塞管理器”，2001
- en: RFC 3140, “Per Hop Behavior Identification Codes,” 2001
  id: totrans-620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3140, “每跳行为标识码”，2001
- en: RFC 3162, “Radius and IPv6,” 2001
  id: totrans-621
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3162, “Radius与IPv6”，2001
- en: RFC 3168, “The Addition of Explicit Congestion Notification (ECN) to IP,” 2001
  id: totrans-622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3168, “IP中显式拥塞通知（ECN）的加入”，2001
- en: RFC 3246, “An Expedited Forwarding PHB,” 2002
  id: totrans-623
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3246, “加速转发PHB”，2002
- en: RFC 3247, “Supplemental Information for the New Definition of the EF PHB (Expedited
    Forwarding Per-Hop Behavior),” 2002
  id: totrans-624
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3247, “新的EF PHB（加速转发每跳行为）定义的补充信息”，2002
- en: RFC 3260, “New Terminology and Clarifications for Diffserv,” 2002
  id: totrans-625
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3260, “区分服务的新术语和澄清”，2002
- en: RFC 3289, “Management Information Base for the Differentiated Services Architecture,”
    2002
  id: totrans-626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3289, “区分服务架构的管理信息库”，2002
- en: RFC 3290, “An Informal Management Model for DiffServ Routers,” 2002
  id: totrans-627
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3290, “区分服务路由器的非正式管理模型”，2002
- en: RFC 3306, “Unicast-Prefix-based IPv6 Multicast Addresses,” 2002
  id: totrans-628
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3306, “基于单播前缀的IPv6组播地址”，2002
- en: RFC 3307, “Allocation Guidelines for IPv6 Multicast Addresses,” 2002
  id: totrans-629
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3307, “IPv6组播地址分配指南”，2002
- en: RFC 3315, “Dynamic Host Configuration Protocol for IPv6 (DHCPv6),” 2003
  id: totrans-630
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3315, “IPv6动态主机配置协议（DHCPv6）”，2003
- en: RFC 3317, “Differentiated Services Quality of Service Policy Information Base,”
    2003
  id: totrans-631
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3317, “区分服务服务质量政策信息库”，2003
- en: RFC 3353, “Overview of IP Multicast in a Multi-Protocol Label Switching (MPLS)
    Environment,” 2002
  id: totrans-632
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3353, “多协议标签交换（MPLS）环境下的IP组播概述”，2002
- en: RFC 3569, “An Overview of Source-Specific Multicast (SSM),” 2003
  id: totrans-633
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3569, “源特定组播（SSM）概述”，2003
- en: RFC 3590, “Source Address Selection for the Multicast Listener Discovery (MLD)
    Protocol,” 2003
  id: totrans-634
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3590, “组播监听发现（MLD）协议的源地址选择”，2003
- en: RFC 3596, “DNS Extensions to Support IP Version 6,” 2003
  id: totrans-635
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3596, “支持IP版本6的DNS扩展”，2003
- en: RFC 3633, “IPv6 Prefix Options for Dynamic Host Configuration Protocol (DHCP)
    version 6,” 2003
  id: totrans-636
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3633, “IPv6前缀选项用于动态主机配置协议（DHCP）版本6”，2003
- en: RFC 3646, “DNS Configuration options for Dynamic Host Configuration Protocol
    for IPv6 (DHCPv6),” 2003
  id: totrans-637
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3646, “IPv6（DHCPv6）动态主机配置协议的DNS配置选项”，2003
- en: 'RFC 3717, “IP over Optical Networks: A Framework,” 2004'
  id: totrans-638
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3717, “光网络上的IP：框架”，2004
- en: RFC 3736, “Stateless Dynamic Host Configuration Protocol (DHCP) Service for
    IPv6,” 2004
  id: totrans-639
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3736, “无状态动态主机配置协议（DHCP）服务用于IPv6”，2004
- en: RFC 3810, “Multicast Listener Discovery Version 2 (MLDv2) for IPv6,” 2004
  id: totrans-640
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3810, “IPv6的组播监听发现版本2（MLDv2）”，2004
- en: RFC 3901, “DNS IPv6 Transport Operational Guidelines,” 2004
  id: totrans-641
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3901, “DNS IPv6传输操作指南”，2004
- en: RFC 3956, “Embedding the Rendezvous Point (RP) Address in an IPv6 Multicast
    Address,” 2004
  id: totrans-642
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3956, “在IPv6组播地址中嵌入会面点（RP）地址”，2004
- en: RFC 3971, “SEcure Neighbor Discovery (SEND),” 2005
  id: totrans-643
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3971, “安全邻居发现（SEND）”，2005
- en: RFC 3972, “Cryptographically Generated Addresses (CGA),” 2005
  id: totrans-644
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3972, “加密生成地址（CGA）”，2005
- en: 'RFC 3973, “Protocol Independent Multicast—Dense Mode (PIM-DM): Protocol Specification
    (Revised ),” 2005'
  id: totrans-645
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 3973, “协议独立的组播—密集模式（PIM-DM）：协议规范（修订版）”，2005
- en: RFC 4033, “DNS Security Introduction and Requirements,” 2005
  id: totrans-646
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4033, “DNS安全简介和要求”，2005
- en: RFC 4034, “Resource Records for the DNS Security Extensions,” 2005
  id: totrans-647
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4034, “DNS安全扩展的资源记录”，2005
- en: RFC 4035, “Protocol Modifications for the DNS Security Extensions,” 2005
  id: totrans-648
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4035, “DNS安全扩展的协议修改”，2005
- en: RFC 4074, “Common Misbehavior Against DNS Queries for IPv6 Addresses,” 2005
  id: totrans-649
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4074, “针对IPv6地址的DNS查询常见不当行为”，2005
- en: RFC 4076, “Renumbering Requirements for Stateless Dynamic Host Configuration
    Protocol for IPv6 (DHCPv6),” 2005
  id: totrans-650
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4076, “IPv6无状态动态主机配置协议（DHCPv6）重新编号要求”，2005
- en: RFC 4094, “Analysis of Existing Quality-of-Service Signaling Protocols,” 2005
  id: totrans-651
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4094, “现有服务质量信令协议的分析”，2005
- en: RFC 4135, “Goals of Detecting Network Attachment in IPv6,” 2005
  id: totrans-652
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4135, “检测 IPv6 网络附加的目标”，2005
- en: RFC 4159, “Deprecation of “ip6.int,” 2005
  id: totrans-653
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4159, “废弃 “ip6.int””，2005
- en: RFC 4192, “Procedures for Renumbering an IPv6 Network without a Flag Day,” 2005
  id: totrans-654
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4192, “没有标志日的 IPv6 网络重新编号程序”，2005
- en: RFC 4243, “Vendor-Specific Information Suboption for the Dynamic Host Configuration
    Protocol (DHCP) Relay Agent Option,” 2005
  id: totrans-655
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4243, “动态主机配置协议（DHCP）中继代理选项的供应商特定信息子选项”，2005
- en: RFC 4271, “A Border Gateway Protocol 4 (BGP-4),” 2006
  id: totrans-656
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4271, “边界网关协议 4（BGP-4）”，2006
- en: RFC 4282, “The Network Access Identifier,” 2005
  id: totrans-657
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4282, “网络接入标识符”，2005
- en: RFC 4286, “Multicast Router Discovery (MRD),” 2005
  id: totrans-658
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4286, “多播路由器发现（MRD）”，2005
- en: RFC 4338, “Transmission of IPv6, IPv4, and Address Resolution Protocol (ARP)
    Packets over Fibre Channel,” 2006
  id: totrans-659
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4338, “通过光纤通道传输 IPv6、IPv4 和地址解析协议（ARP）数据包”，2006
- en: RFC 4339, “IPv6 Host Configuration of DNS Server Information Approaches,” 2006
  id: totrans-660
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4339, “IPv6 主机配置 DNS 服务器信息的方法”，2006
- en: RFC 4361, “Node-specific Client Identifiers for DHCPv4,” 2006
  id: totrans-661
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4361, “DHCPv4 的节点特定客户端标识符”，2006
- en: RFC 4472, “Operational Considerations and Issues with IPv6 DNS,” 2006
  id: totrans-662
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4472, “IPv6 DNS 的操作考虑与问题”，2006
- en: 'RFC 4477, “Dynamic Host Configuration Protocol (DHCP): IPv4 and IPv6 Dual-Stack
    Issues,” 2006'
  id: totrans-663
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4477, “动态主机配置协议（DHCP）：IPv4 和 IPv6 双栈问题”，2006
- en: RFC 4489, “A Method for Generating Link-Scoped IPv6 Multicast Addresses,” 2006
  id: totrans-664
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4489, “生成链路范围 IPv6 多播地址的方法”，2006
- en: 'RFC 4601, “Protocol Independent Multicast—Sparse Mode (PIM-SM): Protocol Specification
    (Revised),” 2006'
  id: totrans-665
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4601, “协议独立多播—稀疏模式（PIM-SM）：协议规范（修订版）”，2006
- en: RFC 4604, “Using MLDv2 for Source Specific Multicast,” 2006
  id: totrans-666
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4604, “使用 MLDv2 进行源特定多播”，2006
- en: RFC 4703, “Resolution of Fully Qualified Domain Name (FQDN) Conflicts among
    Dynamic Host Configuration Protocol (DHCP) Clients,” 2006
  id: totrans-667
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4703, “解决动态主机配置协议（DHCP）客户端之间的完全限定域名（FQDN）冲突”，2006
- en: RFC 4704, “The Dynamic Host Configuration Protocol for IPv6 (DHCPv6) Client
    Fully Qualified Domain Name (FQDN) Option,” 2006
  id: totrans-668
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4704, “IPv6 动态主机配置协议（DHCPv6）客户端完全限定域名（FQDN）选项”，2006
- en: RFC 4760, “Multiprotocol Extensions for BGP-4,” 2007
  id: totrans-669
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4760, “BGP-4 的多协议扩展”，2007
- en: RFC 4944, “Transmission of IPv6 Packets over IEEE 802.15.4 Networks,” 2007
  id: totrans-670
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4944, “在 IEEE 802.15.4 网络上传输 IPv6 数据包”，2007
- en: RFC 4957, “Link-Layer Event Notifications for Detecting Network Attachments,”
    2007
  id: totrans-671
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 4957, “用于检测网络附加的链路层事件通知”，2007
- en: RFC 5015, “Bidirectional Protocol Independent Multicast (BIDIR-PIM),” 2007
  id: totrans-672
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 5015, “双向协议独立多播（BIDIR-PIM）”，2007
- en: RFC 5072, “IP Version 6 over PPP,” 2007
  id: totrans-673
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 5072, “通过 PPP 的 IPv6”，2007
- en: RFC 5172, “Negotiation for IPv6 Datagram Compression using IPv6 Control Protocol,”
    2008
  id: totrans-674
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 5172, “使用 IPv6 控制协议的 IPv6 数据报压缩协商”，2008
- en: RFC 5308, “Routing IPv6 with IS-IS,” 2008
  id: totrans-675
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 5308, “使用 IS-IS 路由 IPv6”，2008
- en: RFC 5340, “OSPF for IPv6,” 2008
  id: totrans-676
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 5340, “OSPF 用于 IPv6”，2008
- en: RFC 5796, “Authentication and Confidentiality in PIM-SM Link-local Messages,”
    2010
  id: totrans-677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 5796, “PIM-SM 链路本地消息的认证与机密性”，2010
- en: RFC 5838, “Support of Address Families in OSPFv3,” 2010
  id: totrans-678
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 5838, “OSPFv3 中的地址族支持”，2010
- en: RFC 5887, “Renumbering Still Needs Work,” 2010
  id: totrans-679
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 5887, “重新编号仍需改进”，2010
- en: 'RFC 5942, “IPv6 Subnet Model: the Relationship between Links and Subnet Prefixes,”
    2012'
  id: totrans-680
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 5942, “IPv6 子网模型：链路与子网前缀之间的关系”，2012
- en: RFC 6085, “Address Mapping of IPv6 Multicast Packets on Ethernet,” 2011
  id: totrans-681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6085, “以太网中 IPv6 多播数据包的地址映射”，2011
- en: RFC 6104, “Rogue IPv6 Router Advertisement Problem Statement,” 2011
  id: totrans-682
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6104, “IPv6 路由器广告问题陈述”，2011
- en: RFC 6105, “IPv6 Router Advertisement Guard,” 2011
  id: totrans-683
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6105, “IPv6 路由器广告保护”，2011
- en: RFC 6106, “IPv6 Router Advertisement Options for DNS Configuration,” 2010
  id: totrans-684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6106, “IPv6 路由器广告 DNS 配置选项”，2010
- en: RFC 6119, “IPv6 Traffic Engineering in IS-IS,” 2011
  id: totrans-685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6119, “IS-IS 中的 IPv6 流量工程”，2011
- en: RFC 6221, “Lightweight DHCPv6 Relay Agent,” 2011
  id: totrans-686
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6221, “轻量级 DHCPv6 中继代理”，2011
- en: RFC 6226, “PIM Group-to-Rendezvous-Point Mapping,” 2011
  id: totrans-687
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6226, “PIM 组到 rendezvous 点映射”，2011
- en: RFC 6282, “Compression Format for IPv6 Datagrams over IEEE 802.15.4-Based Networks,”
    2011
  id: totrans-688
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6282, “基于 IEEE 802.15.4 网络的 IPv6 数据报压缩格式”，2011
- en: RFC 6294, “Survey of Proposed Use Cases for the IPv6 Flow Label,” 2011
  id: totrans-689
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6294, “IPv6 流标签提议的使用案例调查”，2011
- en: RFC 6308, “The Internet Multicast Address Allocation Architecture,” 2011
  id: totrans-690
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6308, “互联网多播地址分配架构”，2011
- en: RFC 6326, “Transparent Interconnection of Lots of Links (TRILL) Use of IS-IS,”
    2011
  id: totrans-691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6326, “大量链路的透明互联（TRILL）使用 IS-IS”，2011
- en: RFC 6334, “Dynamic Host Configuration Protocol for IPv6 (DHCPv6) Option for
    Dual-Stack Lite,” 2011
  id: totrans-692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6334, “IPv6 动态主机配置协议（DHCPv6）双栈精简版选项”，2011
- en: RFC 6398, “IP Router Alert Considerations and Usage,” 2011
  id: totrans-693
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6398, “IP 路由器警报考虑事项和使用”，2011
- en: RFC 6422, “Relay Supplied DHCP Options,” 2011
  id: totrans-694
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6422, “中继提供的 DHCP 选项”，2011
- en: RFC 6434, “IPv6 Node Requirements,” 2011
  id: totrans-695
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6434, “IPv6 节点要求”，2011
- en: RFC 6436, “Rationale for Update to the IPv6 Flow Label Specification,” 2011
  id: totrans-696
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6436, “更新 IPv6 流标签规范的理由”，2011
- en: RFC 6437, “IPv6 Flow Label Specification,” 2011
  id: totrans-697
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6437, “IPv6 流标签规范”，2011
- en: RFC 6438, “Using the IPv6 Flow Label for Equal Cost Multipath Routing and Link
    Aggregation in Tunnels,” 2011
  id: totrans-698
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6438, “在隧道中使用 IPv6 流标签进行等成本多路径路由和链路聚合”，2011
- en: RFC 6553, “The Routing Protocol for Low-Power and Lossy Networks (RPL) Option
    for Carrying RPL Information in Data-Plane Datagrams,” 2012
  id: totrans-699
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6553, “低功耗和丢包网络（RPL）中携带 RPL 信息的数据平面数据报的 RPL 选项”，2012
- en: RFC 6554, “An IPv6 Routing Header for Source Routes with the Routing Protocol
    for Low-Power and Lossy Networks (RPL),” 2012
  id: totrans-700
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6554, “低功耗和丢包网络（RPL）中的源路由的 IPv6 路由头”，2012
- en: 'RFC 6555, “Happy Eyeballs: Success with Dual-Stack Hosts,” 2012'
  id: totrans-701
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6555, “快乐眼球：双栈主机的成功经验”，2012
- en: RFC 6556, “Testing Eyeball Happiness,” 2012
  id: totrans-702
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6556, “测试眼球幸福度”，2012
- en: RFC 6603, “Prefix Exclude Option for DHCPv6-based Prefix Delegation,” 2012
  id: totrans-703
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6603, “基于 DHCPv6 的前缀委派的前缀排除选项”，2012
- en: RFC 6724, “Default Address Selection for Internet Protocol Version 6 (IPv6),”
    2012
  id: totrans-704
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6724, “互联网协议版本 6（IPv6）的默认地址选择”，2012
- en: RFC 6775, “Neighbor Discovery Optimization for IPv6 over Low-Power Wireless
    Personal Area Networks (6LoWPANs),” 2012
  id: totrans-705
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6775, “面向低功耗无线个人区域网络（6LoWPANs）优化的 IPv6 邻居发现”，2012
- en: RFC 6822, “IS-IS Multi-Instance,” 2012
  id: totrans-706
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6822, “IS-IS 多实例”，2012
- en: RFC 6845, “OSPF Hybrid Broadcast and Point-to-Multipoint Interface Type,” 2013
  id: totrans-707
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6845, “OSPF 混合广播和点对多点接口类型”，2013
- en: RFC 6853, “DHCPv6 Redundancy Deployment Considerations,” 2013
  id: totrans-708
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6853, “DHCPv6 冗余部署考虑事项”，2013
- en: RFC 6895, “Domain Name System (DNS) IANA Considerations,” 2013
  id: totrans-709
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6895, “域名系统（DNS）IANA 考虑事项”，2013
- en: RFC 6939, “Client Link-Layer Address Option in DHCPv6,” 2013
  id: totrans-710
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6939, “DHCPv6 中的客户端链路层地址选项”，2013
- en: RFC 6977, “Triggering DHCPv6 Reconfiguration from Relay Agents,” 2013
  id: totrans-711
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6977, “触发 DHCPv6 中继代理重新配置”，2013
- en: RFC 6992, “Routing for IPv4-Embedded IPv6 Packets,” 2013
  id: totrans-712
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 6992, “IPv4 嵌入式 IPv6 数据包的路由”，2013
- en: RFC 7031, “DHCPv6 Failover Requirements,” 2013
  id: totrans-713
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 7031, “DHCPv6 故障转移要求”，2013
- en: RFC 7037, “Radius Option for the DHCPv6 Relay Agent,” 2013
  id: totrans-714
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 7037, “DHCPv6 中继代理的 Radius 选项”，2013
- en: RFC 7078, “Distributing Address Selection Policy Using DHCPv6,” 2014
  id: totrans-715
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 7078, “使用 DHCPv6 分发地址选择策略”，2014
- en: RFC 7084, “Basic Requirements for IPv6 Customer Edge Routers,” 2013
  id: totrans-716
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 7084, “IPv6 客户端边缘路由器的基本要求”，2013
- en: RFC 7098, “Using the IPv6 Flow Label for Load Balancing in Server Farms,” 2013
  id: totrans-717
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC 7098, “在服务器群集中的负载均衡中使用 IPv6 流标签”，2013
- en: Drafts
  id: totrans-718
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 草案
- en: Drafts can be found at [http://www.ietf.org/ID.html](http://www.ietf.org/ID.html).
    To locate the latest version of a draft, refer to [https://datatracker.ietf.org/public/pidtracker.cgi](https://datatracker.ietf.org/public/pidtracker.cgi).
    You can enter the draft name without a version number and the most current version
    will come up. If a draft does not show up, it was possibly deleted. If it was
    published as an RFC, the RFC number will be displayed. [http://tools.ietf.org/wg](http://tools.ietf.org/wg)
    is also a very useful site. More information on the process of standardization,
    RFCs, and drafts can be found in [Appendix A](apa.html "Appendix A. RFCs").
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: 草案可以在 [http://www.ietf.org/ID.html](http://www.ietf.org/ID.html) 找到。要定位草案的最新版本，请参考
    [https://datatracker.ietf.org/public/pidtracker.cgi](https://datatracker.ietf.org/public/pidtracker.cgi)。你可以输入草案名称而不加版本号，系统将显示最新版本。如果草案未显示，可能已被删除。如果它已作为
    RFC 发布，RFC 编号将显示。[http://tools.ietf.org/wg](http://tools.ietf.org/wg) 也是一个非常有用的站点。关于标准化过程、RFC
    和草案的更多信息可以在 [附录 A](apa.html "附录 A. RFCs") 中找到。
- en: 'Here’s a list of drafts I refer to in this chapter, as well as interesting
    drafts that relate to the topics in this chapter:'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在本章中引用的一些草案列表，以及与本章主题相关的一些有趣草案：
- en: “Transmission of IPv6 Packets over BLUETOOTH Low Energy”
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: “通过蓝牙低能耗（BLUETOOTH Low Energy）传输 IPv6 数据包”
- en: '*draft-ietf-6lo-btle-01*'
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-ietf-6lo-btle-01*'
- en: “Transmission of IPv6 Packets over IEEE 802.11p Networks”
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: “通过 IEEE 802.11p 网络传输 IPv6 数据包”
- en: '*draft-petrescu-ipv6-over-80211p-01*'
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-petrescu-ipv6-over-80211p-01*'
- en: “Registering self-generated IPv6 Addresses in DNS using DHCPv6”
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: “通过 DHCPv6 在 DNS 中注册自生成的 IPv6 地址”
- en: '*draft-ietf-dhc-addr-registration-04*'
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-ietf-dhc-addr-registration-04*'
- en: “Provisioning IPv4 Configuration Over IPv6 Only Networks”
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: “在仅有 IPv6 网络上提供 IPv4 配置”
- en: '*draft-ietf-dhc-v4configuration-05*'
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-ietf-dhc-v4configuration-05*'
- en: “DHCPv4 over DHCPv6 Transport”
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: “通过 DHCPv6 传输的 DHCPv4”
- en: '*draft-ietf-dhc-dhcpv4-over-dhcpv6-08*'
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-ietf-dhc-dhcpv4-over-dhcpv6-08*'
- en: “DHCPv4 over IPv6 Transport”
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: “通过 IPv6 传输的 DHCPv4”
- en: '*draft-ietf-dhc-dhcpv4-over-ipv6-09*'
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-ietf-dhc-dhcpv4-over-ipv6-09*'
- en: “DHCPv6 Failover Design”
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: “DHCPv6 故障转移设计”
- en: '*draft-ietf-dhc-dhcpv6-failover-design-04*'
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-ietf-dhc-dhcpv6-failover-design-04*'
- en: “DHC Load Balancing Algorithm for DHCPv6”
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: “DHCPv6 的 DHC 负载均衡算法”
- en: '*draft-ietf-dhc-dhcpv6-load-balancing-01*'
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-ietf-dhc-dhcpv6-load-balancing-01*'
- en: “Populating the DNS Reverse Tree for DHCP Delegated Prefixes”
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: “为 DHCP 委托前缀填充 DNS 反向树”
- en: '*draft-ietf-dhc-dns-pd-01*'
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-ietf-dhc-dns-pd-01*'
- en: “DHCPv6/SLAAC Address Configuration Interaction Problem Statement”
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: “DHCPv6/SLAAC 地址配置交互问题陈述”
- en: '*draft-ietf-v6ops-dhcpv6-slaac-problem-00*'
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-ietf-v6ops-dhcpv6-slaac-problem-00*'
- en: “DHCPv6/SLAAC Interaction Operational Guidance”
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: “DHCPv6/SLAAC 交互操作指导”
- en: '*draft-liu-v6ops-dhcpv6-slaac-guidance-01*'
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-liu-v6ops-dhcpv6-slaac-guidance-01*'
- en: “Reducing Multicast in IPv6 Neighbor Discovery”
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: “减少 IPv6 邻居发现中的组播”
- en: '*draft-yourtchenko-colitti-nd-reduce-multicast-00*'
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-yourtchenko-colitti-nd-reduce-multicast-00*'
- en: “A comparison between the DHCPv6 and RA based host configuration”
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: “DHCPv6 与基于 RA 的主机配置比较”
- en: '*draft-yourtchenko-ra-dhcpv6-comparison-00*'
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: '*draft-yourtchenko-ra-dhcpv6-comparison-00*'
