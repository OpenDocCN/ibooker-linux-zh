- en: Appendix A. Linux Refresher
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 A. Linux 复习
- en: If your Linux skills are rusty, here’s a very quick review of some details you’ll
    need for this book. (If you’re a complete beginner, this review might be too brief.
    Check out the recommended reading at the end.)
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的 Linux 技能有些生疏，这里是一些你需要了解的细节（如果你是完全初学者，这篇回顾可能太简略了。请查阅结尾处的推荐阅读）。
- en: Commands, Arguments, and Options
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 命令、参数和选项
- en: To run a Linux command at the command line, type the command and press Enter.
    To kill a command in progress, press Ctrl-C.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要在命令行中运行 Linux 命令，请输入命令并按 Enter 键。要终止正在进行的命令，请按 Ctrl-C。
- en: 'A simple Linux command consists of a single word, which is usually the name
    of a program, followed by additional strings called *arguments*. For example,
    the following command consists of a program name, `ls`, and two arguments:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的 Linux 命令由一个单词组成，通常是程序的名称，后跟称为*参数*的其他字符串。例如，以下命令由程序名 `ls` 和两个参数组成：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Arguments that begin with a dash, such as `-l`, are called *options* because
    they change the command’s behavior. Other arguments might be filenames, directory
    names, usernames, hostnames, or any other strings that the program needs. Options
    usually (but not always) precede the rest of the arguments.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以破折号开头的参数，如`-l`，被称为*选项*，因为它们改变命令的行为。其他参数可能是文件名、目录名、用户名、主机名或程序所需的任何其他字符串。选项通常（但并非总是）位于其余参数之前。
- en: 'Command options come in various forms, depending on which program you run:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 命令选项以各种形式出现，取决于你运行的程序：
- en: 'A single letter, such as `-l`, sometimes followed by a value, as in `-n 10`.
    Usually the space between the letter and the value can be omitted: `-n10`.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个字母，如 `-l`，有时跟随一个值，如 `-n 10`。通常可以省略字母和值之间的空格：`-n10`。
- en: 'A word preceded by two dashes, such as `--long`, sometimes followed by a value,
    as in `--block-size 100`. The space between the option and its value may often
    be replaced by an equals sign: `--block-size=100`.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由两个破折号前导的单词，例如 `--long`，有时跟随一个值，如 `--block-size 100`。选项与其值之间的空格通常可以用等号替代：`--block-size=100`。
- en: A word preceded by one dash, such as `-type`, optionally followed by a value,
    as in `-type f`. This option format is rare; one command that uses it is `find`.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个由一个破折号前导的单词，例如 `-type`，可选择跟随一个值，如 `-type f`。这种选项格式很少见；一个使用它的命令是 `find`。
- en: A single letter without a dash. This option format is rare; one command that
    uses it is `tar`.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有破折号的单个字母。这种选项格式很少见；一个使用它的命令是 `tar`。
- en: Multiple options may often (depending on the command) be combined behind a single
    dash. For example, the command `ls -al` is equivalent to `ls -a -l`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 多个选项经常（根据命令而定）可以在单个破折号后组合。例如，命令 `ls -al` 等效于 `ls -a -l`。
- en: Options vary not only in appearance but also in meaning. In the command `ls
    -l`, the `-l` means “long output,” but in the command `wc -l` it means “lines
    of text.” Two programs also might use different options to mean the same thing,
    such as `-q` for “run quietly” versus `-s` for “run silently.” Inconsistencies
    like these make Linux harder to learn, but you eventually get used to them.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 选项不仅在外观上不同，而且在含义上也不同。在命令 `ls -l` 中，`-l` 表示“长输出”，但在命令 `wc -l` 中，它表示“文本行数”。两个程序也可能使用不同的选项表示相同的事物，例如
    `-q` 表示“安静运行”，而 `-s` 表示“静默运行”。这些不一致性使 Linux 学习起来更加困难，但最终你会习惯的。
- en: The Filesystem, Directories, and Paths
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件系统、目录和路径
- en: Linux files are contained in directories (folders) that are organized into a
    tree structure, such as the one in [Figure A-1](#fig_filesystem). The tree begins
    in a directory called the *root*, denoted by a single forward slash (`/`), which
    may contain files and other directories, called *subdirectories*. For example,
    the directory *Music* has two subdirectories, *mp3* and *SheetMusic*. We call
    *Music* the parent directory of *mp3* and *SheetMusic*. Directories with the same
    parent are called *siblings*.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 文件存储在目录（文件夹）中，这些目录按树形结构组织，例如[图 A-1](#fig_filesystem) 中的结构。树从一个名为*根*的目录开始，用单个斜线（`/`）表示，其中可能包含文件和其他目录，称为*子目录*。例如，目录*Music*
    包含两个子目录，*mp3* 和 *SheetMusic*。我们称*Music* 为 *mp3* 和 *SheetMusic* 的父目录。具有相同父目录的目录称为*同级目录*。
- en: A path through the tree is written as a sequence of directory names separated
    by forward slashes, such as */home/smith/Music/mp3*. A path may also end with
    a filename, as in */home/smith/Music/mp3/catalog.txt*. These paths are called
    *absolute paths* because they begin at the root directory. Paths that begin elsewhere
    (and don’t start with a forward slash) are called *relative paths* because they
    are relative to the current directory. If your current directory is */home/smith/Music*,
    then some relative paths are *mp3* (a subdirectory) and *mp3/catalog.txt* (a file).
    Even a filename by itself, like *catalog.txt*, is a relative path with respect
    to */home/smith/Music/mp3*.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 树中的路径写成一系列由斜杠分隔的目录名，例如*/home/smith/Music/mp3*。路径也可能以文件名结尾，例如*/home/smith/Music/mp3/catalog.txt*。这些路径称为*绝对路径*，因为它们从根目录开始。如果你的当前目录是*/home/smith/Music*，那么一些相对路径包括*mp3*（一个子目录）和*mp3/catalog.txt*（一个文件）。甚至像*catalog.txt*这样的文件名本身也是相对于*/home/smith/Music/mp3*的相对路径。
- en: Two special relative paths are a single dot (`.`), which refers to the current
    directory, and two dots in a row (`..`), which refers to the current directory’s
    parent.^([1](app01.xhtml#idm46586635832560)) Both can be part of larger paths.
    For example, if your current directory is */home/smith/Music/mp3*, then the path
    `..` refers to *Music*, the path `../../../..` refers to the root directory, and
    the path *../SheetMusic* refers to a sibling of *mp3*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 两个特殊的相对路径是单个点（`.`），表示当前目录，以及连续的两个点（`..`），表示当前目录的父目录。^[1](app01.xhtml#idm46586635832560)
    这两者可以成为更大路径的一部分。例如，如果你的当前目录是*/home/smith/Music/mp3*，那么路径`..`指向*Music*，路径`../../../..`指向根目录，路径*../SheetMusic*指向*mp3*的一个同级目录。
- en: '![A Linux directory tree, starting at the root](Images/elcl_aa01.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![一个以根目录开始的Linux目录树](Images/elcl_aa01.png)'
- en: Figure A-1\. Paths in a Linux directory tree
  id: totrans-19
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图A-1\. Linux目录树中的路径
- en: You and every other user on a Linux system have a designated directory, called
    your *home directory*, where you can freely create, edit, and delete files and
    directories. Its path is usually */home/* followed by your username, such as */home/smith*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux系统上，你和其他每位用户都有一个指定的目录，称为*主目录*，你可以自由地在其中创建、编辑和删除文件和目录。其路径通常是*/home/*加上你的用户名，例如*/home/smith*。
- en: Directory Movement
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目录移动
- en: 'At any moment, your command line (shell) operates in a given directory, called
    your *current directory*, *working directory*, or *current working directory*.
    View the path of your current directory with the `pwd` (print working directory)
    command:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何时刻，你的命令行（shell）都在一个特定的目录中运行，称为你的*当前目录*、*工作目录*或*当前工作目录*。使用`pwd`（打印当前工作目录）命令查看当前目录的路径：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Move between directories with the `cd` (change directory) command, supplying
    the path (absolute or relative) to your desired destination:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`cd`（更改目录）命令移动目录，提供路径（绝对或相对）到你想要的目的地：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Creating and Editing Files
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和编辑文件
- en: 'Edit files with a standard Linux text editor by running any of the following
    commands:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用标准的Linux文本编辑器编辑文件，通过运行以下任何命令之一：
- en: '`emacs`'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`emacs`'
- en: Once emacs is running, type Ctrl-h followed by t for a tutorial.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦启动emacs，键入Ctrl-h然后按t查看教程。
- en: '`nano`'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`nano`'
- en: Visit [nano-editor.org](https://nano-editor.org) for documentation.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[nano编辑器](https://nano-editor.org)获取文档。
- en: '`vim` or `vi`'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`vim`或`vi`'
- en: Run the command `vimtutor` for a tutorial.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 运行命令`vimtutor`查看教程。
- en: 'To create a file, simply provide its name as an argument, and the editor creates
    it:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建文件，只需将文件名作为参数提供，编辑器将创建它：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Alternatively, create an empty file with the `touch` command, supplying the
    desired filename as an argument:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，使用`touch`命令创建空文件，提供所需的文件名作为参数：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: File and Directory Handling
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件和目录处理
- en: 'List the files in a directory (by default, your current directory) with the
    `ls` command:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ls`命令列出目录中的文件（默认为当前目录）：
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'See attributes of a file or directory with a “long” listing (`ls -l`):'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用“长”列表（`ls -l`）查看文件或目录的属性：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Left to right, the attributes are the file permissions (`-rw-r—r--`) described
    in [“File Permissions”](#section_permissions), the owner (`smith`) and group (`smith`),
    the size in bytes (`325`), the last modification date and time (`Jul 3` of this
    year at `17:44`), and the filename (`animals.txt`).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从左到右，属性是文件权限（`-rw-r—r--`），描述在[“文件权限”](#section_permissions)中，所有者（`smith`）和组（`smith`），文件大小（`325`字节），上次修改日期和时间（今年`7月3日`，`17:44`），和文件名（`animals.txt`）。
- en: 'By default, `ls` does not print filenames that begin with a dot. To list these
    files, which are often called *dot files* or *hidden files*, add the `-a` option:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`ls`不会打印以点开头的文件名。要列出这些文件（通常称为*点文件*或*隐藏文件*），添加`-a`选项：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Copy a file with the `cp` command, supplying the original filename and the
    new filename:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`cp`命令复制文件，提供原始文件名和新文件名：
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Rename a file with the `mv` (move) command, supplying the original filename
    and the new filename:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`mv`（移动）命令重命名文件，提供原始文件名和新文件名：
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Delete a file with the `rm` (remove) command:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`rm`（删除）命令删除文件：
- en: '[PRE10]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Warning
  id: totrans-52
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: Deletion on Linux is not friendly. The `rm` command does not ask “Are you sure?”
    and there is no trash can for restoring files.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 上删除不友好。`rm`命令不会问“你确定吗？”，也没有回收站来恢复文件。
- en: 'Create a directory with `mkdir`, rename it with `mv`, and delete it (if empty)
    with `rmdir`:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`mkdir`创建目录，使用`mv`重命名它，并使用`rmdir`（如果为空）删除它：
- en: '[PRE11]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Copy one or more files (or directories) into a directory:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个或多个文件（或目录）复制到目录中：
- en: '[PRE12]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Continuing, move one or more files (or directories) into a directory:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 继续，将一个或多个文件（或目录）移动到目录中：
- en: '[PRE13]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Delete a directory and all its contents with `rm -rf`. Take care before running
    this command because it is not reversible. See [“Never Delete the Wrong File Again
    (Thanks to History Expansion)”](ch03.xhtml#cs_never_delete) for safety tips.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`rm -rf`删除目录及其所有内容。在运行此命令之前，请小心，因为此操作不可逆。参见[“永远不要再删除错误的文件（多亏了历史扩展）”](ch03.xhtml#cs_never_delete)获取安全提示。
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: File Viewing
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件查看
- en: 'Print a text file on the screen with the `cat` command:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`cat`命令在屏幕上打印文本文件：
- en: '[PRE15]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'View a text file one screenful at a time with the `less` command:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`less`命令逐屏查看文本文件：
- en: '[PRE16]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: While running `less`, display the next page by pressing the spacebar. To exit
    `less`, press q. For help, press h.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行`less`时，通过按空格键显示下一页。要退出`less`，请按q。要获取帮助，请按h。
- en: File Permissions
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件权限
- en: The `chmod` command sets a file to be readable, writable, and/or executable
    by yourself, a given group of users, or everybody. [Figure A-2](#fig_chmod) is
    a brief refresher on file permissions.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`chmod`命令将文件设置为你自己、指定用户组或所有人可读、可写和/或可执行。[图 A-2](#fig_chmod) 是文件权限的简要复习。'
- en: '![File permission bits explained](Images/elcl_aa02.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![文件权限位解释](Images/elcl_aa02.png)'
- en: Figure A-2\. File permission bits
  id: totrans-71
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-2\. 文件权限位
- en: 'Here are some common operations with `chmod`. Make a file readable and writable
    by you, and only readable by everyone else:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些常见的`chmod`操作。使文件对你可读写，对其他人只可读：
- en: '[PRE17]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Protect it from all other users:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 保护它免受所有其他用户的影响：
- en: '[PRE18]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Make a directory readable and enterable by everyone, but writable only by you:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 使一个目录对所有人可读可进入，但只有你可写：
- en: '[PRE19]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Protect a directory from all other users:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 保护一个目录免受所有其他用户的影响：
- en: '[PRE20]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Normal permissions don’t apply to the superuser, who can read and write all
    files and directories on the system.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 超级用户不受正常权限限制，可以读取和写入系统上的所有文件和目录。
- en: Processes
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进程
- en: 'When you run a Linux command, it launches one or more Linux *processes*, each
    with a numeric process ID called a *PID*. See your shell’s current processes with
    the `ps` command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行 Linux 命令时，它会启动一个或多个 Linux *进程*，每个进程都有一个称为*PID*的数字进程 ID。使用`ps`命令查看你的 shell
    的当前进程：
- en: '[PRE21]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'or all running processes for all users with:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 或结束所有用户的所有正在运行的进程：
- en: '[PRE22]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Kill a process of your own with the `kill` command, supplying the PID as an
    argument. The superuser (Linux administrator) can kill any user’s process.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`kill`命令结束你自己的进程，提供 PID 作为参数。超级用户（Linux 管理员）可以结束任何用户的进程。
- en: '[PRE23]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Viewing Documentation
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看文档
- en: 'The `man` command prints documentation about any standard command on your Linux
    system. Simply type `man` followed by the name of the command. For example, to
    view documentation for the `cat` command, run the following:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`man` 命令打印关于你的 Linux 系统上任何标准命令的文档。只需输入`man`，后跟命令的名称。例如，要查看`cat`命令的文档，运行以下命令：'
- en: '[PRE24]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The displayed document is known as the command’s *manpage*. When someone says
    “view the manpage for grep,” they mean run the command `man grep`.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 显示的文档称为命令的*man 页面*。当有人说“查看 grep 的 man 页面”时，他们指的是运行`man grep`命令。
- en: '`man` displays documentation one page at a time using the program `less`,^([2](app01.xhtml#idm46586635650592))
    so the standard keystrokes for `less` will work. [Table A-1](#table_man) lists
    some common keystrokes.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`man`使用程序`less`逐页显示文档，^([2](app01.xhtml#idm46586635650592))因此`less`的标准按键适用。[表
    A-1](#table_man)列出了一些常见的按键。'
- en: Table A-1\. Some keystrokes for viewing manpages with `less`
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 表 A-1\. 使用`less`查看 man 页面的一些按键
- en: '| Keystroke | Action |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 按键 | 动作 |'
- en: '| --- | --- |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| h | Help—display a list of keystrokes for `less` |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| h | 帮助——显示`less`的按键列表 |'
- en: '| spacebar | View the next page |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 空格键 | 查看下一页 |'
- en: '| b | View the previous page |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| b | 查看上一页'
- en: '| Enter | Scroll down one line |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| Enter | 向下滚动一行'
- en: '| < | Jump to the beginning of the document |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| < | 跳转到文档的开头'
- en: '| > | Jump to the end of the document |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| > | 跳转到文档的末尾'
- en: '| / | Search forward for text (type the text and press Enter) |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| / | 向前搜索文本（输入文本并按 Enter 键）'
- en: '| ? | Search backward for text (type the text and press Enter) |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| ? | 向后搜索文本（输入文本并按 Enter 键）'
- en: '| n | Locate the next occurrence of the search text |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| n | 定位搜索文本的下一个出现位置 |'
- en: '| q | Quit `man` |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| q | 退出 `man` 帮助页面'
- en: Shell Scripts
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Shell 脚本
- en: 'To run a bunch of Linux commands as a unit, follow these steps:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要作为一个单元运行一组 Linux 命令，请按以下步骤操作：
- en: Place the commands in a file.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将命令放置在一个文件中。
- en: Insert a magical first line.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入一个神奇的第一行。
- en: Make the file executable with `chmod`.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `chmod` 将文件设置为可执行。
- en: Execute the file.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行该文件。
- en: The file is called a *script* or *shell script*. The magical first line should
    be the symbols `#!` (pronounced “shebang”) followed by the path to a program that
    reads and runs the script:^([3](app01.xhtml#idm46586635612992))
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 文件称为*脚本*或*shell 脚本*。神奇的第一行应该是符号 `#!`（发音为“shebang”），后面是读取并运行脚本的程序的路径：^([3](app01.xhtml#idm46586635612992))
- en: '[PRE25]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Here is a shell script that says hello and prints today’s date. Lines beginning
    with `#` are comments:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个显示问候并打印今天日期的 shell 脚本。以 `#` 开头的行是注释：
- en: '[PRE26]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Use a text editor to store these lines in a file called *howdy*. Then make
    the file executable by running either of these commands:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 使用文本编辑器将这些行存储在名为*howdy*的文件中。然后通过运行以下任意命令使文件可执行：
- en: '[PRE27]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'and run it:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行它：
- en: '[PRE28]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The leading dot and slash (`./`) indicate that the script is in your current
    directory. Without them, the Linux shell won’t find the script:^([4](app01.xhtml#idm46586635598592))
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 前导的点和斜杠（`./`）表示脚本位于当前目录中。如果没有它们，Linux shell 将无法找到脚本：^([4](app01.xhtml#idm46586635598592))
- en: '[PRE29]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Linux shells provide some programming language features that are useful in scripts.
    `bash`, for example, provides `if` statements, `for` loops, `while` loops, and
    other control structures. A few examples are sprinkled throughout the book. See
    `man bash` for the syntax.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Linux shell 提供了一些在脚本中非常有用的编程语言特性。例如，`bash` 提供 `if` 语句、`for` 循环、`while` 循环和其他控制结构。本书中穿插了一些示例。有关语法，请参阅
    `man bash`。
- en: Becoming the Superuser
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 成为超级用户
- en: 'Some files, directories, and programs are protected from normal users, including
    you:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 一些文件、目录和程序对普通用户是受保护的，包括您自己：
- en: '[PRE30]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: “Permission denied” usually means you tried to access protected resources. They
    are accessible only to the Linux superuser (username `root`). Most Linux systems
    come with a program called `sudo` (pronounced “soo doo”) that lets you become
    the superuser for the duration of a single command. If you installed Linux yourself,
    your account is probably set up already to run `sudo`. If you’re one user on somebody
    else’s Linux system, you might not have superuser privileges; speak to your system
    administrator if you’re not sure.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: “权限被拒绝”通常意味着您尝试访问受保护的资源。它们只能由 Linux 超级用户（用户名为 `root`）访问。大多数 Linux 系统配备了一个名为
    `sudo`（发音为“soo doo”）的程序，允许您在单个命令的持续时间内成为超级用户。如果您自己安装了 Linux，则您的帐户可能已经设置为运行 `sudo`。如果您是别人的
    Linux 系统上的一个用户，您可能没有超级用户权限；如果不确定，请与系统管理员联系。
- en: 'Assuming you’re set up properly, simply run `sudo`, supplying it with the desired
    command to run as the superuser. You’ll be prompted for your login password to
    prove your identity. Supply it correctly, and the command will run with root privileges:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已经正确设置，只需运行 `sudo`，并提供所需运行的命令以作为超级用户运行。系统将提示您输入登录密码以证明您的身份。正确输入密码后，命令将以 root
    权限运行：
- en: '[PRE31]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '`sudo` may remember (cache) your passphrase for a while, depending on how `sudo`
    is configured, so it might not prompt you every time.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`sudo` 可能会在一段时间内记住（缓存）您的密码短语，这取决于 `sudo` 的配置方式，因此它可能不会每次都提示您。'
- en: Further Reading
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: For more basics of Linux use, read my previous book, [*Linux Pocket Guide*](https://oreil.ly/46N1v)
    (O’Reilly), or seek out [online tutorials](https://oreil.ly/KLTji).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多 Linux 使用的基础知识，请阅读我的前一本书[*Linux Pocket Guide*](https://oreil.ly/46N1v)（O’Reilly），或查找[在线教程](https://oreil.ly/KLTji)。
- en: ^([1](app01.xhtml#idm46586635832560-marker)) The dot and double dot are not
    expressions evaluated by the shell. They are hard links present in every directory.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](app01.xhtml#idm46586635832560-marker)) 点和双点不是 shell 评估的表达式。它们是每个目录中存在的硬链接。
- en: ^([2](app01.xhtml#idm46586635650592-marker)) Or another program if you redefine
    the value of the shell variable `PAGER`.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](app01.xhtml#idm46586635650592-marker)) 或者是另一个程序，如果你重新定义了 shell 变量 `PAGER`
    的值。
- en: ^([3](app01.xhtml#idm46586635612992-marker)) If you omit the shebang line, your
    default shell will run the script. It’s a good practice to include the line.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](app01.xhtml#idm46586635612992-marker)) 如果省略了 shebang 行，你的默认 shell 将运行该脚本。包含这行是一个良好的实践。
- en: ^([4](app01.xhtml#idm46586635598592-marker)) That’s because the current directory
    is usually omitted from the shell’s search path, for security reasons. Otherwise,
    an attacker could place a malicious, executable script named `ls` in your current
    directory, and when you ran `ls`, the script would run instead of the true `ls`
    command.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](app01.xhtml#idm46586635598592-marker)) 这是因为当前目录通常会因安全原因而被省略在 shell 的搜索路径中。否则，攻击者可以在你的当前目录中放置一个恶意的可执行脚本，命名为
    `ls`，当你运行 `ls` 时，这个脚本将会运行而不是真正的 `ls` 命令。
