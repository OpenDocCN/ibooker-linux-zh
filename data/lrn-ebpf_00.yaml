- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: In the cloud native community and beyond, eBPF has become one of the hottest
    technical topics of recent years. A new generation of [powerful tools and projects](https://ebpf.io/applications)
    in networking, security, observability, and more have been built (and more continue
    to be created) using eBPF as a platform, offering better performance and accuracy
    compared to their predecessors. eBPF-related conferences such as the [eBPF Summit](https://ebpf.io/summit-2022)
    and [Cloud Native eBPF Day](https://oreil.ly/q9-p3) have attracted thousands of
    attendees and viewers, and at the time of this writing, the [eBPF Slack](http://ebpf.io/slack)
    community has more than 14,000 members.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在云原生社区及更广泛的领域中，eBPF已成为近年来最热门的技术话题之一。使用eBPF作为平台，网络、安全、可观察性等领域中的一代[强大工具和项目](https://ebpf.io/applications)已经建立（并继续建立），相较于它们的前身，提供了更好的性能和准确性。eBPF相关的会议如[eBPF峰会](https://ebpf.io/summit-2022)和[云原生eBPF日](https://oreil.ly/q9-p3)吸引了数千名与会者和观众，在撰写本文时，[eBPF
    Slack](http://ebpf.io/slack)社区已拥有超过14,000名成员。
- en: Why is eBPF being selected as the underlying technology for so many infrastructure
    tools? How does it deliver the promised improvements to performance? How is eBPF
    useful in such disparate technical fields, which range from performance tracing
    to network traffic encryption?
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么选择eBPF作为许多基础设施工具的基础技术？它如何提升性能？eBPF如何在如此广泛的技术领域中发挥作用，从性能跟踪到网络流量加密？
- en: This book aims to answer these questions by giving the reader an understanding
    of how eBPF works, as well as providing an introduction to writing eBPF code.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在通过让读者了解eBPF的工作原理，并介绍如何编写eBPF代码，来回答这些问题。
- en: Who This Book Is For
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者对象
- en: This book is for developers, system administrators, operators, and students
    who are curious about eBPF and want to know more about how it works. It will provide
    a foundation for those who want to explore writing eBPF programs themselves. Since
    eBPF provides a great platform for a whole new generation of instrumentation and
    tooling, there will likely be gainful employment for eBPF developers for some
    years to come.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适合开发人员、系统管理员、运维人员和对eBPF感兴趣并想了解其工作原理的学生。对于那些希望自己探索编写eBPF程序的人来说，本书将为他们提供一个基础。由于eBPF为新一代仪器和工具提供了一个良好的平台，未来几年内eBPF开发人员可能会有可观的就业机会。
- en: But you don’t necessarily need to be planning to write eBPF code yourself for
    this book to be useful to you. If you work in operations, security, or any other
    role that involves software infrastructure, you’re likely to come across eBPF-based
    tooling, now or over the next few years. If you understand something about the
    internals of these tools, you’ll be in a better position to use them effectively.
    For example, if you know how events can trigger eBPF programs, you’ll have a better
    mental model for exactly what an eBPF-based tool is really measuring when it shows
    you performance metrics. If you’re an application developer, you might also come
    into contact with some of these eBPF-based tools—for example, if you are performance
    tuning an application, you might use a tool like [Parca](https://www.parca.dev)
    to generate flame graphs showing which functions are taking the most time. If
    you are evaluating security tools, this book will help you understand where eBPF
    shines and how to avoid using it in a naïve way that is less effective against
    attacks.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，并不一定要计划自己编写eBPF代码才能从本书中获益。如果你从事运维、安全或任何涉及软件基础设施的角色，你可能会在现在或未来几年内接触到基于eBPF的工具。如果你了解这些工具的内部机制，你将更有能力有效地使用它们。例如，如果你知道事件如何触发eBPF程序，那么当eBPF基础工具展示性能指标时，你将对它们的真正测量有更清晰的心理模型。如果你是应用程序开发人员，你也可能会接触到一些基于eBPF的工具——例如，如果你在性能调优应用程序时，可以使用像[Parca](https://www.parca.dev)这样的工具生成展示哪些函数占用大量时间的火焰图。如果你正在评估安全工具，本书将帮助你了解eBPF的优势，并避免以不够有效抵御攻击的天真方式使用它。
- en: Even if you’re not using eBPF tools today, I hope this book will give you interesting
    insights into areas of Linux that you might not have considered before. Most developers
    take the kernel for granted, as they use programming languages with convenient
    higher-level abstractions that allow them to focus on the work of application
    development—which is plenty hard enough! They use tools like debuggers and performance
    analyzers to help them do their job effectively. Knowing the internals of how
    a debugger or performance tool works might be interesting, but it’s not essential.
    Yet, for many of us, it’s fun and fulfilling to go down the rabbit hole to find
    out more.^([1](preface01.html#ch00fn1)) In the same way, most people will use
    eBPF tools without having to worry about how they are built. [Arthur C. Clarke
    wrote](https://oreil.ly/gOV1D) that “any sufficiently advanced technology is indistinguishable
    from magic,” but personally, I like to dig in and find out how the magic trick
    works. You might be like me and feel compelled to explore eBPF programming to
    get a better feel for what is possible with this technology. If so, I think you’ll
    enjoy this book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 即使今天你没有使用 eBPF 工具，我希望这本书能为你提供一些有趣的见解，让你对 Linux 的一些领域有所了解，这些领域可能在之前并没有考虑过。大多数开发者习惯于使用编程语言的高级抽象，这些抽象使他们可以专注于应用程序开发的工作——这本身已经足够难了！他们使用调试器和性能分析器等工具来帮助他们有效地完成工作。了解调试器或性能工具的内部工作原理可能很有趣，但并非必需。然而，对于我们许多人来说，深入探索并了解更多是一种乐趣和满足感。^([1](preface01.html#ch00fn1))
    同样，大多数人将使用 eBPF 工具，而不必担心它们是如何构建的。[阿瑟·C·克拉克曾写道](https://oreil.ly/gOV1D)：“任何足够先进的技术都是不可区分于魔术的”，但就我个人而言，我喜欢深入挖掘并找出这种魔术如何运作。也许你和我一样，感觉有必要探索
    eBPF 编程，以更好地了解这项技术的潜力。如果是这样，我相信你会喜欢这本书。
- en: What This Book Covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书的内容涵盖了什么。
- en: eBPF continues to evolve at quite a rapid pace, which makes it rather difficult
    to write a comprehensive reference that doesn’t constantly need updating. However,
    there are some fundamentals and basic principles that are unlikely to change significantly,
    and that’s what this book discusses.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: eBPF 仍在快速发展，这使得撰写一本不需要经常更新的全面参考书变得相当困难。然而，有一些基本原理和基础原则不太可能发生显著变化，这正是本书讨论的内容。
- en: '[Chapter 1](ch01.html#what_is_ebpf_and_why_is_it_importantque) sets the scene
    by describing why eBPF is so powerful as a technology and explaining how the ability
    to run custom programs in the operating system kernel enables so many exciting
    capabilities.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一章](ch01.html#what_is_ebpf_and_why_is_it_importantque)通过描述 eBPF 技术的强大之处，并解释在操作系统内核中运行自定义程序的能力如何带来如此多令人兴奋的功能，为书籍开篇。'
- en: Things become more concrete in [Chapter 2](ch02.html#ebpfapostrophes_quotation_markhello_wor),
    where you’ll see some “Hello World” examples that introduce you to the concepts
    of eBPF programs and maps.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第二章](ch02.html#ebpfapostrophes_quotation_markhello_wor)中，事情变得更加具体，你将看到一些“Hello
    World”示例，介绍了 eBPF 程序和映射的概念。
- en: '[Chapter 3](ch03.html#anatomy_of_an_ebpf_program) dives into more detail about
    eBPF programs and how they run in the kernel, and [Chapter 4](ch04.html#the_bpfleft_parenthesisright_parenthesi)
    explores the interface between user space applications and eBPF programs.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第三章](ch03.html#anatomy_of_an_ebpf_program)深入探讨了 eBPF 程序的详细内容及其在内核中的运行方式，而[第四章](ch04.html#the_bpfleft_parenthesisright_parenthesi)则探讨了用户空间应用程序与
    eBPF 程序之间的接口。'
- en: One of the big challenges of eBPF in recent years has been the question of compatibility
    across kernel versions. [Chapter 5](ch05.html#co_recomma_btfcomma_and_libbpf)
    looks at the “compile once, run everywhere” (CO-RE) approach that solves this
    problem.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来 eBPF 的一大挑战之一是跨内核版本的兼容性问题。[第五章](ch05.html#co_recomma_btfcomma_and_libbpf)讨论了“编译一次，到处运行”（CO-RE）方法，解决了这个问题。
- en: The verification process is perhaps the most important characteristic that distinguishes
    eBPF from kernel modules. I’ll introduce you to the eBPF verifier in [Chapter 6](ch06.html#the_ebpf_verifier).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 验证过程可能是区分 eBPF 与内核模块的最重要特征。我将在[第六章](ch06.html#the_ebpf_verifier)介绍 eBPF 验证器。
- en: In [Chapter 7](ch07.html#ebpf_program_and_attachment_types) you’ll get an introduction
    to the many different types of eBPF programs and their attachment points. Many
    of those attachment points are within the networking stack, and [Chapter 8](ch08.html#ebpf_for_networking)
    explores the application of eBPF for networking features in more detail. [Chapter 9](ch09.html#ebpf_for_security)
    looks at how eBPF is being used to build security tools.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第7章](ch07.html#ebpf_program_and_attachment_types)中，您将了解到多种不同类型的eBPF程序及其附着点。其中许多附着点位于网络堆栈内部，[第8章](ch08.html#ebpf_for_networking)更详细地探讨了eBPF在网络功能中的应用。[第9章](ch09.html#ebpf_for_security)则探讨了eBPF用于构建安全工具的应用。
- en: If you want to write a user space application that interacts with eBPF programs,
    there are many libraries and frameworks available to help. [Chapter 10](ch10.html#ebpf_programming)
    gives an overview of the options for various programming languages.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望编写一个与eBPF程序交互的用户空间应用程序，有许多可用的库和框架可以帮助您。[第10章](ch10.html#ebpf_programming)概述了各种编程语言的选项。
- en: Finally, in [Chapter 11](ch11.html#the_future_evolution_of_ebpf) I’ll gaze into
    my crystal ball and tell you about some future developments that are likely to
    unfold in the eBPF world.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在[第11章](ch11.html#the_future_evolution_of_ebpf)中，我将展望未来发展，介绍eBPF领域可能会出现的一些新进展。
- en: Prerequisite Knowledge
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 先决知识
- en: This book assumes you are comfortable with basic shell commands on Linux and
    with the idea of using a compiler to turn source code into an executable program.
    There are some simple example extracts from Makefiles, on the assumption that
    you have at least a minimal understanding of how `make` uses these files.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设您已经熟悉在Linux上使用基本的shell命令，并且了解使用编译器将源代码转换成可执行程序的概念。书中提供了一些简单的Makefile示例片段，假定您至少对`make`如何使用这些文件有基本的理解。
- en: There are lots of code examples in Python, C, and Go. You won’t need in-depth
    knowledge of those languages to get something out of these examples, but you’ll
    get the most out of the book if you are generally happy to read some code. I’m
    also assuming you are familiar with the idea of *pointers*, which identify a memory
    location.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中有很多Python、C和Go的代码示例。您不需要对这些语言有深入的了解才能从这些示例中获益，但如果您乐意阅读一些代码，将能更好地理解本书内容。我还假设您熟悉*指针*的概念，它们用于标识内存位置。
- en: Example Code and Exercises
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例代码和练习
- en: There are lots of code examples in this book. If you want to try them out for
    yourself, you’ll find an accompanying GitHub repository and instructions for installing
    and running the code at [*https://github.com/lizrice/learning-ebpf*](https://github.com/lizrice/learning-ebpf).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中有许多代码示例。如果您希望自己尝试一下，您可以在伴随的GitHub仓库找到相关代码及其安装和运行说明[*https://github.com/lizrice/learning-ebpf*](https://github.com/lizrice/learning-ebpf)。
- en: I have also included exercises at the end of most of the chapters to help you
    explore eBPF programming by extending the examples or writing your own programs.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我还在大多数章节的末尾包含了练习，以帮助您通过扩展示例或编写自己的程序来探索eBPF编程。
- en: Because eBPF is continually evolving, the features available to you depend on
    the kernel version you’re running. Many of the restrictions that apply to earlier
    versions have been lifted or relaxed in later versions. The Iovisor project has
    a useful overview of the [kernel versions in which different BPF features were
    added](https://oreil.ly/SsnEV), and in this book I have attempted to note when
    the particular capabilities I’m describing were added. The examples were tested
    using version 5.15 of the kernel, and at the time of this writing some of the
    popular Linux distributions don’t yet support such a recent kernel version. If
    you’re reading this book shortly after it was published, you might find that some
    of the features won’t work on the Linux kernel your organization uses in production.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 由于eBPF技术不断发展，您可以使用的功能取决于您所运行的内核版本。许多早期版本中适用的限制在后来的版本中已经解除或放宽。Iovisor项目详细介绍了[不同BPF功能添加在哪些内核版本中](https://oreil.ly/SsnEV)，在本书中，我尽力记录了描述的特定功能是在哪个版本中添加的。示例代码是在内核版本5.15上测试的，截至本文撰写时，一些流行的Linux发行版尚不支持如此新的内核版本。如果您在本书出版后不久阅读，可能会发现某些功能在贵组织生产环境使用的Linux内核上无法运行。
- en: Is eBPF Only for Linux?
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: eBPF只适用于Linux吗？
- en: eBPF was originally developed for Linux. There’s no particular reason why the
    same approach couldn’t be used in other operating systems too—indeed, Microsoft
    has been developing an [eBPF implementation for Windows](https://oreil.ly/k7AvA).
    I discuss that briefly in [Chapter 11](ch11.html#the_future_evolution_of_ebpf),
    but throughout the rest of the book I focus on the Linux implementation, and all
    the examples will be from Linux.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: eBPF最初是为Linux开发的。同样的方法也可以用于其他操作系统——事实上，微软已经在为Windows开发[eBPF实现](https://oreil.ly/k7AvA)。我在[第11章](ch11.html#the_future_evolution_of_ebpf)中简要讨论了这一点，但在本书的其余部分中，我将专注于Linux的实现，并且所有示例都来自Linux。
- en: Conventions Used in This Book
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书中使用的约定
- en: 'The following typographical conventions are used in this book:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用以下印刷约定：
- en: '*Italic*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*Italic*'
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 指示新术语，URL，电子邮件地址，文件名和文件扩展名。
- en: '`Constant width`'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`Constant width`'
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 用于程序清单，以及段落内引用程序元素，如变量或函数名，数据库，数据类型，环境变量，语句和关键字。
- en: '**`Constant width bold`**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**`Constant width bold`**'
- en: Shows commands or other text that should be typed literally by the user.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 显示用户应直接输入的命令或其他文本。
- en: '*`Constant width italic`*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*`Constant width italic`*'
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 显示应用程序中应用用户提供的值或由上下文确定的值的文本。
- en: Tip
  id: totrans-37
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: This element signifies a tip or suggestion.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示提示或建议。
- en: Note
  id: totrans-39
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This element signifies a general note.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示一般说明。
- en: Warning
  id: totrans-41
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: This element indicates a warning or caution.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示警告或注意事项。
- en: Using Code Examples
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代码示例
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at [*https://github.com/lizrice/learning-ebpf*](https://github.com/lizrice/learning-ebpf).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 补充材料（代码示例，练习等）可在[*https://github.com/lizrice/learning-ebpf*](https://github.com/lizrice/learning-ebpf)下载。
- en: If you have a technical question or a problem using the code examples, please
    send email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有技术问题或在使用代码示例时遇到问题，请发送电子邮件至[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com)。
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在帮助您完成工作。一般来说，如果本书提供了示例代码，您可以在您的程序和文档中使用它。除非您复制了代码的大部分内容，否则无需联系我们请求许可。例如，编写一个使用本书中多个代码片段的程序不需要许可。销售或分发O’Reilly书籍中的示例代码则需要许可。通过引用本书回答问题并引用示例代码不需要许可。将本书中大量示例代码整合到您产品的文档中需要许可。
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Learning eBPF*
    by Liz Rice (O’Reilly). Copyright 2023 Vertical Shift Ltd., 978-1-098-13512-6.”'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您的支持，但通常不需要署名。署名通常包括标题，作者，出版商和ISBN。例如：“*Learning eBPF* by Liz Rice (O’Reilly).
    Copyright 2023 Vertical Shift Ltd., 978-1-098-13512-6.”
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您觉得您使用的代码示例超出了公平使用范围或上述授权，请随时通过[*permissions@oreilly.com*](mailto:permissions@oreilly.com)与我们联系。
- en: O’Reilly Online Learning
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: O’Reilly在线学习
- en: Note
  id: totrans-50
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: For more than 40 years, [*O’Reilly Media*](https://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 超过40年来，[*O’Reilly Media*](https://oreilly.com)为企业的成功提供技术和商业培训，知识和见解。
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*https://oreilly.com*](https://oreilly.com).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们独特的专家和创新者网络通过书籍、文章和我们的在线学习平台分享他们的知识和专长。O’Reilly的在线学习平台为您提供按需访问的现场培训课程、深入学习路径、交互式编码环境以及来自O’Reilly和其他200多家出版商的广泛文本和视频资源。更多信息，请访问[*https://oreilly.com*](https://oreilly.com)。
- en: How to Contact Us
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何联系我们
- en: 'Please address comments and questions concerning this book to the publisher:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 请将对本书的评论和问题发送至出版商：
- en: O’Reilly Media, Inc.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: O’Reilly Media, Inc.
- en: 1005 Gravenstein Highway North
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1005 Gravenstein Highway North
- en: Sebastopol, CA 95472
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sebastopol, CA 95472
- en: 800-998-9938 (in the United States or Canada)
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 800-998-9938（美国或加拿大）
- en: 707-829-0515 (international or local)
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0515（国际或本地）
- en: 707-829-0104 (fax)
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0104（传真）
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/learning-eBPF*](https://oreil.ly/learning-eBPF).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个专门为本书服务的网页，列出勘误、示例和任何额外信息。您可以访问此页面：[*https://oreil.ly/learning-eBPF*](https://oreil.ly/learning-eBPF)。
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com)，用于对本书提出评论或技术问题。
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 关于我们的书籍和课程的新闻和信息，请访问[*https://oreilly.com*](https://oreilly.com)。
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media).'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在LinkedIn上找到我们：[*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)。
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia).'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在Twitter上关注我们：[*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia)。
- en: 'Watch us on YouTube: [*https://youtube.com/oreillymedia*](https://youtube.com/oreillymedia).'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在YouTube上关注我们：[*https://youtube.com/oreillymedia*](https://youtube.com/oreillymedia)。
- en: Acknowledgments
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢
- en: 'I would like to thank the many people who have contributed enormously to the
    writing of this book:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我要感谢为这本书的撰写做出巨大贡献的众多人士：
- en: My technical reviewers—Timo Beckers, Jess Males, Quentin Monnet, Kevin Sheldrake,
    and Celeste Stinger—provided detailed, actionable feedback and great ideas for
    improving the examples, for which I’m very grateful.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的技术审阅人员——Timo Beckers、Jess Males、Quentin Monnet、Kevin Sheldrake和Celeste Stinger——提供了详细的、可操作的反馈和改进示例的伟大想法，对此我深表感激。
- en: I’m standing on the shoulders of the giants who built, popularized, and continue
    to maintain eBPF, including Daniel Borkmann, Thomas Graf, Brendan Gregg, Andrii
    Nakryiko, Alexei Starovoitov, and countless others who have contributed not just
    code but also conference talks and blog posts to the community.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我站在构建、推广和维护eBPF的巨匠们的肩膀上，包括Daniel Borkmann、Thomas Graf、Brendan Gregg、Andrii Nakryiko、Alexei
    Starovoitov等无数贡献者，他们不仅贡献了代码，还通过会议演讲和博客文章为社区做出了贡献。
- en: Thank you to my talented and lovely colleagues at Isovalent, many of whom are
    eBPF and kernel specialists, from whom I continue to learn so much.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 感谢我的才华横溢且可爱的Isovalent同事们，其中许多人是eBPF和内核专家，我从他们身上继续学到很多。
- en: Thanks also to the team at O’Reilly, especially my editor, Rita Fernando, who
    gave me endless support during the writing process, as well as the planning that
    helped keep the book on schedule; and John Devins, for encouraging me to write
    the book in the first place.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同时感谢O’Reilly团队，特别是我的编辑Rita Fernando，在写作过程中给予我无限的支持，并通过帮助计划保持书籍进度；以及John Devins，他首先鼓励我写这本书。
- en: Phil Pearl not only gave helpful feedback on the content, but he also made sure
    I ate and took breaks. I am forever grateful for his support and encouragement.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Phil Pearl不仅在内容上提供了有益的反馈，还确保我吃饱喝足。对于他的支持和鼓励，我将永远感激不尽。
- en: I also want to thank all the wonderful people who, over the years, have taken
    the time to make encouraging comments about my work, whether it’s in person at
    an event or on social media. It’s incredibly inspiring to know that something
    I have written or recorded has helped someone else get to grips with a technical
    concept or has given them the desire to build or write something themselves. Thank
    you!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，我也想感谢所有那些花时间对我的工作做出鼓励性评论的美好人士，无论是在活动现场还是在社交媒体上。知道自己所写或录制的内容能帮助他人理解技术概念，或者激发他们想要创作或写作的愿望，这种感觉真是非常鼓舞人心。谢谢！
- en: ^([1](preface01.html#ch00fn1-marker)) At the dotGo Paris conference in 2017,
    [I gave a talk that showed how a debugger works](https://youtu.be/TBrv17QyUE0).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](preface01.html#ch00fn1-marker)) 在2017年的巴黎dotGo大会上，[我做了一个演讲，展示了调试器的工作原理](https://youtu.be/TBrv17QyUE0)。
